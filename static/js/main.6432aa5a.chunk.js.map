{"version":3,"sources":["assets/farmsense_logo.png","components/Menu.js","components/Dropdown.js","components/Navbar.js","components/Chart.js","components/Calendar.js","components/Section1.js","components/Section2.js","components/Section3.js","components/Section4.js","components/Singledate.js","components/Section6.js","components/Home.js","components/Login.js","components/Registration.js","components/ControlPanel.js","components/adminRegistration.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Menu","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","selectedOption","setState","label","graphClick","section","setdeviceNumber","location","state","options","react_default","a","createElement","react_select_browser_esm","value","onChange","Component","React","Navbar","reroute","react_router","to","pathname","className","src","logo","onclick","Chart","chartData","error","labels","datasets","chartType","units","celsius","es","data","legend","display","scales","xAxes","offset","type","time","stepSize","unit","format","parser","displayFormats","month","max","endDate","min","startDate","yAxes","ticks","beginAtZero","callback","index","values","maintainAspectRatio","title","displayTitle","text","responsive","displayLegend","position","hour","defaultProps","legendPosition","Calendar","start","end","range","focusedInput","_this2","react_dates","startDateId","endDateId","onDatesChange","_ref","onFocusChange","isOutsideRange","options2","Singledate","date","focused","onDateChange","id","Section4","graph","getDevice","fetch","method","then","response","json","chartDevice","setLabels","catch","err","console","log","device","deviceNumber","Date","getdeviceDataDate","getdeviceData","headers","Content-Type","body","JSON","stringify","setchartData","convert","responseData","temp","i","length","capturedAt","slice","push","hourlyCount","backgroundColor","list","deviceId","components_Menu","components_Singledate","components_Chart","App","components_Navbar","Section6","Login","e","defineProperty","target","name","handleSubmit","preventDefault","Username","Password","redirectToReferrer","onSubmit","placeholder","registration","Email","ControlPanel","addUsers","PrivateRoute","component","rest","Authenticated","objectWithoutProperties","assign","render","validate","condition","Redirect","react_router_dom","basename","path","exact","components_Login","Registration","adminRegistration","Home","Boolean","window","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.6432aa5a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/farmsense_logo.b7e2637e.png\";","import React, {Component} from 'react';\nimport Select from 'react-select';\n\nclass Menu extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      selectedOption: this.props.options[0]\n    };\n  }\n\n  handleChange = (selectedOption) => {\n    this.setState({selectedOption});\n    if(selectedOption.label === 'Bar' || selectedOption.label === 'Line' || selectedOption.label === 'Pie'){\n      this.props.graphClick(selectedOption.label);\n    }\n    else if(this.props.section==='section6'){\n      this.props.setdeviceNumber(selectedOption.label)\n    }\n    else{\n      this.props.location(selectedOption.label);\n    }\n  }\n\n    render(){\n      const {selectedOption} = this.state;\n      return(\n        <Select value={selectedOption} onChange={this.handleChange} options={this.props.options}/>\n      );\n    }\n}\n\nexport default Menu;\n","import React from 'react';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nexport default class Dropdown extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      dropdownOpen: false\n    };\n  }\n\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen\n    });\n  }\n\n  render() {\n    return (\n      <ButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n        <DropdownToggle caret>\n          Control Panel\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem header>Header</DropdownItem>\n          <DropdownItem disabled>Action</DropdownItem>\n          <DropdownItem>Another Action</DropdownItem>\n          <DropdownItem divider />\n          <DropdownItem>Another Action</DropdownItem>\n        </DropdownMenu>\n      </ButtonDropdown>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport Menu from './Menu';\nimport Dropdown from './Dropdown';\nimport './css/Navbar.css';\nimport logo from '../assets/farmsense_logo.png'\n\nconst options = [\n  {value: 'Devices', label: 'Devices'},\n  {value: 'Users', label: 'Users'}\n]\n\nclass Navbar extends Component {\n  constructor(){\n    super();\n    this.state = {\n    }\n  }\n  reroute = () => {\n    return <Redirect to={{pathname: '/protected'}} />\n  }\n  render(){\n    return(\n      <div className=\"Navbar\">\n        <div className=\"Wrapper\">\n          <img className=\"main-logo\" src={logo}></img>\n          <button onclick={this.reroute} className=\"buttons\">Dashboard</button>\n          <button className=\"buttons\">Control Panel</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, {Component} from 'react';\nimport {Bar,Line,Pie} from 'react-chartjs-2';\nimport './css/Chart.css';\n\n\nclass Chart extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      chartData: props.chartData,\n      error: null,\n      labels: ['1', '2', '3'],\n      datasets: [{}],\n    }\n  }\n\n  static defaultProps = {\n    displayTitle:true,\n    displayLegend:true,\n    legendPosition:'right',\n    location:'Location'\n  }\n\n\n\n  render(){\n    if (this.props.chartType==='Bar' && this.props.units==='Section3' && this.props.celsius){\n      return (\n        <div className=\"chart\">\n          <Bar\n            data={this.props.chartData}\n            options={{\n              legend: {\n                display: false\n              },\n              scales: {\n                xAxes: [{\n                  offset: true,\n                  type: 'time',\n                  time:\n                  {\n                    stepSize: 1,\n                    unit: 'day',\n                    format: 'MMM DD',\n                    parser: 'MMM DD',\n                    displayFormats: { month: 'MMM DD' },\n                    max: this.props.endDate,\n                    min: this.props.startDate\n                  }\n                }],\n                yAxes: [{\n                  ticks: {\n                    beginAtZero: true,\n                    max: 400,\n                    callback: function(value, index, values) {\n                      return value + \"° C\";\n                    }\n                  }\n                }]\n              },\n              maintainAspectRatio: false,\n              title:{\n                display:this.props.displayTitle,\n                text: this.props.title,\n              }\n            }}\n          />\n        </div>\n      );\n    }\n\n    else if  (this.props.chartType==='Line' && this.props.units==='Section3' && this.props.celsius){\n      return (\n        <div className=\"chart\">\n        <Line\n          data={this.props.chartData}\n          options={{\n            legend: {\n              display: false\n            },\n            scales: {\n              xAxes: [{\n                offset: true,\n                type: 'time',\n                time:\n                {\n                  stepSize: 1,\n                  unit: 'day',\n                  format: 'MMM DD',\n                  parser: 'MMM DD',\n                  displayFormats: { month: 'MMM DD' },\n                  max: this.props.endDate,\n                  min: this.props.startDate\n                }\n              }],\n              yAxes: [{\n                ticks: {\n                  beginAtZero: true,\n                  max: 400,\n                  callback: function(value, index, values) {\n                    return value + \"° C\";\n                  }\n                }\n              }]\n            },\n            maintainAspectRatio: false,\n            title:{\n              display:this.props.displayTitle,\n              text: this.props.title,\n            }\n          }}\n        />\n        </div>\n      );\n    }\n\n    else if  (this.props.chartType==='Pie' && this.props.units==='Section3' && this.props.celsius){\n      return (\n        <div className=\"chart\">\n        <Pie\n          data={this.props.chartData}\n          options={{\n            legend: {\n              display: false\n            },\n            scales: {\n              xAxes: [{\n                offset: true,\n                type: 'time',\n                time:\n                {\n                  stepSize: 1,\n                  unit: 'day',\n                  format: 'MMM DD',\n                  parser: 'MMM DD',\n                  displayFormats: { month: 'MMM DD' },\n                  max: this.props.endDate,\n                  min: this.props.startDate\n                }\n              }],\n              yAxes: [{\n                ticks: {\n                  beginAtZero: true,\n                  max: 400,\n                  callback: function(value, index, values) {\n                    return value + \"° C\";\n                  }\n                }\n              }]\n            },\n            maintainAspectRatio: false,\n            title:{\n              display:this.props.displayTitle,\n              text: this.props.title,\n            }\n          }}\n        />\n        </div>\n      );\n    }\n    else if (this.props.chartType==='Bar' && this.props.units==='Section3' && !this.props.celsius){\n      return (\n        <div className=\"chart\">\n          <Bar\n            data={this.props.chartData}\n            options={{\n              legend: {\n                display: false\n              },\n              scales: {\n                xAxes: [{\n                  offset: true,\n                  type: 'time',\n                  time:\n                  {\n                    stepSize: 1,\n                    unit: 'day',\n                    format: 'MMM DD',\n                    parser: 'MMM DD',\n                    displayFormats: { month: 'MMM DD' },\n                    max: this.props.endDate,\n                    min: this.props.startDate\n                  }\n                }],\n                yAxes: [{\n                  ticks: {\n                    beginAtZero: true,\n                    max: 400,\n                    callback: function(value, index, values) {\n                      return value + \"° F\";\n                    }\n                  }\n                }]\n              },\n              maintainAspectRatio: false,\n              title:{\n                display:this.props.displayTitle,\n                text: this.props.title,\n              }\n            }}\n          />\n        </div>\n      );\n    }\n\n    else if  (this.props.chartType==='Line' && this.props.units==='Section3' && !this.props.celsius){\n      return (\n        <div className=\"chart\">\n        <Line\n          data={this.props.chartData}\n          options={{\n            legend: {\n              display: false\n            },\n            scales: {\n              xAxes: [{\n                offset: true,\n                type: 'time',\n                time:\n                {\n                  stepSize: 1,\n                  unit: 'day',\n                  format: 'MMM DD',\n                  parser: 'MMM DD',\n                  displayFormats: { month: 'MMM DD' },\n                  max: this.props.endDate,\n                  min: this.props.startDate\n                }\n              }],\n              yAxes: [{\n                ticks: {\n                  beginAtZero: true,\n                  max: 400,\n                  callback: function(value, index, values) {\n                    return value + \"° F\";\n                  }\n                }\n              }]\n            },\n            maintainAspectRatio: false,\n            title:{\n              display:this.props.displayTitle,\n              text: this.props.title,\n            }\n          }}\n        />\n        </div>\n      );\n    }\n\n    else if  (this.props.chartType==='Pie' && this.props.units==='Section3' && !this.props.celsius){\n      return (\n        <div className=\"chart\">\n        <Pie\n          data={this.props.chartData}\n          options={{\n            legend: {\n              display: false\n            },\n            scales: {\n              xAxes: [{\n                offset: true,\n                type: 'time',\n                time:\n                {\n                  stepSize: 1,\n                  unit: 'day',\n                  format: 'MMM DD',\n                  parser: 'MMM DD',\n                  displayFormats: { month: 'MMM DD' },\n                  max: this.props.endDate,\n                  min: this.props.startDate\n                }\n              }],\n              yAxes: [{\n                ticks: {\n                  beginAtZero: true,\n                  max: 400,\n                  callback: function(value, index, values) {\n                    return value + \"° F\";\n                  }\n                }\n              }]\n            },\n            maintainAspectRatio: false,\n            title:{\n              display:this.props.displayTitle,\n              text: this.props.title,\n            }\n          }}\n        />\n        </div>\n      );\n    }\n\n    else if (this.props.chartType==='Bar' && this.props.units==='Section1'){\n      return (\n        <div className=\"chart\">\n          <Bar\n            data={this.props.chartData}\n            options={{\n              responsive: true,\n              scales: {\n                xAxes: [{\n                  offset: true,\n                  type: 'time',\n                  time:\n                  {\n                    stepSize: 1,\n                    unit: this.props.time,\n                    format: 'MMM DD',\n                    parser: 'MMM DD',\n                    displayFormats: { month: 'MMM DD' },\n                    max: this.props.endDate,\n                    min: this.props.startDate\n                  }\n                }],\n                yAxes: [{\n                  ticks: {\n                    beginAtZero: true\n                  }\n                }]\n              },\n              maintainAspectRatio: false,\n              title:{\n                display:this.props.displayTitle,\n                text: this.props.title,\n              },\n              legend:{\n                display:this.props.displayLegend,\n                position:'right'\n              }\n            }}\n          />\n        </div>\n      );\n  }\n\n    else if (this.props.chartType==='Line' && this.props.units==='Section1'){\n      return (\n        <div className=\"chart\">\n        <Line\n          data={this.props.chartData}\n          options={{\n            scales: {\n              xAxes: [{\n                offset: true,\n                type: 'time',\n                time:\n                {\n                  stepSize: 1,\n                  unit: this.props.time,\n                  format: 'MMM DD',\n                  parser: 'MMM DD',\n                  displayFormats: { month: 'MMM DD' },\n                  max: this.props.endDate,\n                  min: this.props.startDate\n                }\n              }],\n              yAxes: [{\n                ticks: {\n                  beginAtZero: true\n                }\n              }]\n            },\n            maintainAspectRatio: false,\n            title:{\n              display:this.props.displayTitle,\n              text: this.props.title,\n            },\n            legend:{\n              display:this.props.displayLegend,\n              position:'right'\n            }\n          }}\n        />\n        </div>\n      );\n  }\n\n  else if (this.props.chartType==='Pie' && this.props.units==='Section1'){\n    return (\n      <div className=\"chart\">\n      <Pie\n        data={this.props.chartData}\n        options={{\n          scales: {\n            xAxes: [{\n              offset: true,\n              type: 'time',\n              time:\n              {\n                stepSize: 1,\n                unit: this.props.time,\n                format: 'MMM DD',\n                parser: 'MMM DD',\n                displayFormats: { month: 'MMM DD' },\n                max: this.props.endDate,\n                min: this.props.startDate\n              }\n            }],\n            yAxes: [{\n              ticks: {\n                beginAtZero: true\n              }\n            }]\n          },\n          maintainAspectRatio: false,\n          title:{\n            display:this.props.displayTitle,\n            text: this.props.title,\n          },\n          legend:{\n            display:this.props.displayLegend,\n            position:'right'\n          }\n        }}\n      />\n      </div>\n    );\n  }\n\n\n    else if (this.props.chartType==='Bar' && this.props.section==='section6'){\n      return (\n        <div className=\"chart\">\n          <Bar\n            data={this.props.chartData}\n            options={{\n              scales: {\n                xAxes: [{\n                  offset: true,\n                  type: 'time',\n                  time:\n                  {\n                    stepSize: 1,\n                    unit: 'hour',\n                    format: 'HH:mm',\n                    parser: 'HH:mm',\n                    min: '00:00',\n                    max: '24:00',\n                    displayFormats: { hour: 'HH:mm' }\n                  }\n                }],\n                yAxes: [{\n                  ticks: {\n                    beginAtZero: true\n                  }\n                }]\n              },\n              maintainAspectRatio: false,\n              title:{\n                display:this.props.displayTitle,\n                text: this.props.title,\n              },\n              legend:{\n                display: false\n              }\n            }}\n          />\n        </div>\n      );\n    }\n\n    else if (this.props.chartType==='Bar'){\n      return (\n        <div className=\"chart\">\n          <Bar\n            data={this.props.chartData}\n            options={{\n              scales: {\n                xAxes: [{\n                  offset: true,\n                  type: 'time',\n                  time:\n                  {\n                    stepSize: 1,\n                    unit: 'day',\n                    format: 'MMM DD',\n                    parser: 'MMM DD',\n                    displayFormats: { month: 'MMM DD' },\n                    max: this.props.endDate,\n                    min: this.props.startDate\n                  }\n                }],\n                yAxes: [{\n                  ticks: {\n                    beginAtZero: true\n                  }\n                }]\n              },\n              maintainAspectRatio: false,\n              title:{\n                display:this.props.displayTitle,\n                text: this.props.title,\n              },\n              legend:{\n                display:this.props.displayLegend,\n                position:'right'\n              }\n            }}\n          />\n        </div>\n      );\n  }\n\n    else if (this.props.chartType==='Line'){\n      return (\n        <div className=\"chart\">\n        <Line\n          data={this.props.chartData}\n          options={{\n            scales: {\n              xAxes: [{\n                offset: true,\n                type: 'time',\n                time:\n                {\n                  stepSize: 1,\n                  unit: 'day',\n                  format: 'MMM DD',\n                  parser: 'MMM DD',\n                  displayFormats: { month: 'MMM DD' },\n                  max: this.props.endDate,\n                  min: this.props.startDate\n                }\n              }],\n              yAxes: [{\n                ticks: {\n                  beginAtZero: true\n                }\n              }]\n            },\n            maintainAspectRatio: false,\n            title:{\n              display:this.props.displayTitle,\n              text: this.props.title,\n            },\n            legend:{\n              display:this.props.displayLegend,\n              position:'right'\n            }\n          }}\n        />\n        </div>\n      );\n  }\n\n  else if (this.props.chartType==='Pie'){\n    return (\n      <div className=\"chart\">\n      <Pie\n        data={this.props.chartData}\n        options={{\n          scales: {\n            xAxes: [{\n              offset: true,\n              type: 'time',\n              time:\n              {\n                stepSize: 1,\n                unit: 'day',\n                format: 'MMM DD',\n                parser: 'MMM DD',\n                displayFormats: { month: 'MMM DD' },\n                max: this.props.endDate,\n                min: this.props.startDate\n              }\n            }],\n            yAxes: [{\n              ticks: {\n                beginAtZero: true\n              }\n            }]\n          },\n          maintainAspectRatio: false,\n          title:{\n            display:this.props.displayTitle,\n            text: this.props.title,\n          },\n          legend:{\n            display:this.props.displayLegend,\n            position:'right'\n          }\n        }}\n      />\n      </div>\n    );\n  }\n\n}\n};\n\nexport default Chart;\n","import React, {Component} from 'react';\nimport {DateRangePicker} from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\n\n\nclass Calendar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startDate: null,\n      endDate: null,\n      focusedInput: null,\n    };\n  }\n\n  handleChange = (start, end) => {\n    this.props.range(start, end);\n  }\n\n  render(){\n    const falseFunc = () =>false;\n    return(\n      <div className=\"calendar\">\n        <DateRangePicker\n         startDateId=\"startDate\"\n         endDateId=\"endDate\"\n         startDate={this.state.startDate}\n         endDate={this.state.endDate}\n         onDatesChange={({ startDate, endDate }) => {this.setState({ startDate, endDate }); this.handleChange(startDate, endDate);}}\n         focusedInput={this.state.focusedInput}\n         onFocusChange={(focusedInput) => { this.setState({ focusedInput })}}\n         isOutsideRange={falseFunc}\n         />\n      </div>\n    );\n  }\n};\n\nexport default Calendar;\n","import React, {Component} from 'react';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport Chart from './Chart';\nimport Calendar from './Calendar';\nimport Menu from './Menu';\nimport './css/Section.css';\n\nconst options = [\n  {value: 'Bar', label: 'Bar'},\n  {value: 'Line', label: 'Line'},\n  {value: 'Pie', label: 'Pie'}\n]\n\nconst options2 = [\n  {value: 'Cupertino', label: 'Cupertino'},\n  {value: 'Riverside', label: 'Riverside'}\n]\n\n\nclass Section1 extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      chartData: {} ,\n      chartType:'Bar',\n      startDate: '',\n      endDate: '',\n      time: 'day',\n      location: 'Cupertino',\n      focusedInput: null,\n      units: 'Section1',\n    }\n  }\n\n    componentWillMount() {\n      this.getChartData();\n    }\n\n    getChartData () {\n      //make ajax/axios call\n        this.setState({\n          chartData:{\n              labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n              datasets: [\n                {\n                  label:'Device_1',\n                  data:[1, 4, 8, 2, 20, 23, 14, 9],\n                  backgroundColor:'rgba(63, 63, 191, 0.6)'\n                },\n                {\n                  label:'Device_2',\n                  data:[23, 17, 30, 5, 3, 2, 13, 15],\n                  backgroundColor: 'rgba(255, 35, 35, 0.6)'\n                }\n              ]\n          },\n        });\n    }\n\n    graphClick = (graph) => {\n      this.setState({chartType: graph});\n    }\n\n    location = (loc) => {\n      if (loc === 'Cupertino'){\n        this.setState({\n          location:'Cupertino',\n          chartData:{\n              labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n              datasets: [\n                {\n                  label:'Device_1',\n                  data:[1, 4, 8, 2, 20, 23, 14, 9],\n                  backgroundColor:'rgba(63, 63, 191, 0.6)'\n                },\n                {\n                  label:'Device_2',\n                  data:[23, 17, 30, 5, 3, 2, 13, 15],\n                  backgroundColor: 'rgba(255, 35, 35, 0.6)'\n                }\n              ]\n          }\n\n        });\n      }\n      else if (loc === 'Riverside'){\n        this.setState({\n          location:'Riverside',\n          chartData:{\n              labels: [\"May-05\", \"May-06\", \"May-07\", \"May-08\", \"May-09\", \"May-10\", \"May-11\", \"May-12\"],\n              datasets: [\n                {\n                  label:'Device_1',\n                  data:[2, 4, 6, 8, 10, 12, 14, 16],\n                  backgroundColor: 'rgba(63, 63, 191, 0.6)'\n                },\n                {\n                  label:'Device_2',\n                  data:[1, 3, 5, 7, 9, 11, 13, 15],\n                  backgroundColor: 'rgba(255, 35, 35, 0.6)'\n                }\n              ]\n          }\n        });\n      }\n    }\n\n    left = () => {\n\n    }\n\n    right = () => {\n\n    }\n\n    Day = () => {\n      this.setState({time: 'day'});\n    }\n\n    Week = () => {\n      this.setState({time: 'week'});\n    }\n\n    Month = () => {\n      this.setState({time: 'month'});\n    }\n\n    Year = () => {\n      this.setState({time: 'year'});\n    }\n\n\n    range = (start, end) => {\n      if (start != null && end != null){\n        this.setState({\n          startDate: start.format('MMM-DD'),\n          endDate: end.format('MMM-DD')\n        });\n      }\n    }\n\n  render() {\n    return (\n      <div className=\"block\">\n          <div className=\"outline\">\n            <h2 className=\"title\">Insect Count (per location)</h2>\n          </div>\n          <div className=\"outline2\">\n          <div className=\"wrapper\">\n            <div className=\"location\">\n              <div className=\"inner1\">\n                <p className=\"text\">Select a location</p>\n              </div>\n              <div className=\"inner2\">\n                <Menu location={this.location} options={options2}/>\n              </div>\n            </div>\n            <div className=\"timeframe\">\n              <div className=\"inner1\">\n                <p className=\"text\">Select a time frame</p>\n              </div>\n              <div className=\"inner2\">\n                <Calendar range={this.range}/>\n              </div>\n            </div>\n            <div className=\"type\">\n              <div className=\"inner1\">\n                <p className=\"text\">Chart type</p>\n              </div>\n              <div className=\"inner2\">\n                <Menu graphClick={this.graphClick} options={options}/>\n              </div>\n            </div>\n            <div className=\"day\">\n              <div className=\"inner1\">\n                <p className=\"text\">View by</p>\n              </div>\n                <div className=\"inner2\">\n                  <button className=\"date1\" onClick={this.Day}>Day</button>\n                  <button className=\"date\" onClick={this.Week}>Week</button>\n                  <button className=\"date\" onClick={this.Month}>Month</button>\n                  <button className=\"date\" onClick={this.Year}>Year</button>\n                </div>\n            </div>\n          </div>\n          <div className=\"graph\">\n            <Chart chartData={this.state.chartData} title={this.state.location} chartType={this.state.chartType} startDate={this.state.startDate} endDate={this.state.endDate} time={this.state.time} units={this.state.units}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Section1;\n","import React, {Component} from 'react';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport Chart from './Chart';\nimport Calendar from './Calendar';\nimport Menu from './Menu';\nimport './css/Section.css';\n\nconst options = [\n  {value: 'Bar', label: 'Bar'},\n  {value: 'Line', label: 'Line'},\n  {value: 'Pie', label: 'Pie'}\n]\n\nconst options2 = [\n  {value: 'Sensor_1', label: 'Sensor_1'},\n  {value: 'Sensor_2', label: 'Sensor_2'}\n]\n\n\nclass Section2 extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      chartData: {} ,\n      chartType:'Bar',\n      time: 'day',\n      startDate: '',\n      endDate: '',\n      device: 'Sensor_1',\n      units: 'Section1',\n      focusedInput: null\n    }\n  }\n\n    componentWillMount() {\n      this.getChartData();\n    }\n\n    getChartData () {\n      //make ajax/axios call\n        this.setState({\n\n          chartData:{\n              labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n              datasets: [\n                {\n                  label:'Insect Count',\n                  data:[1, 4, 8, 2, 20, 23, 14, 9],\n                  backgroundColor:'rgba(63, 63, 191, 0.6)'\n                }\n              ]\n          }\n        });\n\n    }\n\n    graphClick = (graph) => {\n      this.setState({chartType: graph});\n    }\n\n    location = (loc) => {\n      if (loc === 'Sensor_1'){\n        this.setState({\n          device:'Sensor_1',\n          chartData:{\n              labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n              datasets: [\n                {\n                  label:'Insect Count',\n                  data:[1, 4, 8, 2, 20, 23, 14, 9],\n                  backgroundColor:'rgba(63, 63, 191, 0.6)'\n                }\n              ]\n          }\n\n        });\n      }\n      else if (loc === 'Sensor_2'){\n        this.setState({\n          device:'Sensor_2',\n          chartData:{\n              labels: [\"May-05\", \"May-06\", \"May-07\", \"May-08\", \"May-09\", \"May-10\", \"May-11\", \"May-12\"],\n              datasets: [\n                {\n                  label:'Insect Count',\n                  data:[2, 4, 6, 8, 10, 12, 14, 16],\n                  backgroundColor: 'rgba(63, 63, 191, 0.6)'\n                }\n              ]\n          }\n        });\n      }\n    }\n\n    range = (start, end) => {\n      if (start != null && end != null){\n        this.setState({\n          startDate: start.format('MMM-DD'),\n          endDate: end.format('MMM-DD')\n        })\n\n      }\n    }\n\n    Day = () => {\n      this.setState({time: 'day'});\n    }\n\n    Week = () => {\n      this.setState({time: 'week'});\n    }\n\n    Month = () => {\n      this.setState({time: 'month'});\n    }\n\n    Year = () => {\n      this.setState({time: 'year'});\n    }\n\n\nrender() {\n  return (\n    <div className=\"block\">\n        <div className=\"outline\">\n            <h2 className=\"title\">Insect Count (per device)</h2>\n        </div>\n        <div className=\"outline2\">\n        <div className=\"wrapper\">\n          <div className=\"location\">\n            <div className=\"inner1\">\n              <p className=\"text\">Select a device</p>\n            </div>\n            <div className=\"inner2\">\n              <Menu location={this.location} options={options2}/>\n            </div>\n          </div>\n          <div className=\"timeframe\">\n            <div className=\"inner1\">\n              <p className=\"text\">Select a time frame</p>\n            </div>\n            <div className=\"inner2\">\n              <Calendar range={this.range}/>\n            </div>\n          </div>\n          <div className=\"type\">\n            <div className=\"inner1\">\n              <p className=\"text\">Chart type</p>\n            </div>\n            <div className=\"inner2\">\n              <Menu graphClick={this.graphClick} options={options}/>\n            </div>\n          </div>\n          <div className=\"day\">\n            <div className=\"inner1\">\n              <p className=\"text\">View by</p>\n            </div>\n              <div className=\"inner2\">\n                <button className=\"date1\" onClick={this.Day}>Day</button>\n                <button className=\"date\" onClick={this.Week}>Week</button>\n                <button className=\"date\" onClick={this.Month}>Month</button>\n                <button className=\"date\" onClick={this.Year}>Year</button>\n              </div>\n          </div>\n        </div>\n        <div className=\"graph\">\n          <Chart chartData = {this.state.chartData} title={this.state.device} chartType={this.state.chartType} startDate={this.state.startDate} endDate={this.state.endDate} time={this.state.time} units={this.state.units}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n};\n\nexport default Section2;\n","import React, {Component} from 'react';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport Chart from './Chart';\nimport Calendar from './Calendar';\nimport Menu from './Menu';\nimport './css/Section.css';\n\nconst options = [\n  {value: 'Bar', label: 'Bar'},\n  {value: 'Line', label: 'Line'},\n  {value: 'Pie', label: 'Pie'}\n]\n\nconst options2 = [\n  {value: 'Sensor_1', label: 'Sensor_1'},\n  {value: 'Sensor_2', label: 'Sensor_2'}\n]\n\nclass Section3 extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      chartData: {} ,\n      chartType:'Bar',\n      startDate: '',\n      endDate: '',\n      device: 'Sensor_1',\n      units: 'Section3',\n      celsius: true,\n      degrees: \"° C\",\n      focusedInput: null\n    }\n  }\n\n    componentWillMount() {\n      this.getChartData();\n    }\n\n    getChartData () {\n      //make ajax/axios call\n        this.setState({\n          chartData:{\n              labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n              datasets: [\n                {\n                  data:[200, 250, 279, 300, 257, 325, 350, 150],\n                  backgroundColor:'rgba(63, 63, 191, 0.6)'\n                }\n              ]\n          }\n        });\n\n    }\n\n    graphClick = (graph) => {\n      this.setState({chartType: graph});\n    }\n\n    location = (loc) => {\n      if (loc === 'Sensor_1'){\n        this.setState({\n          device:'Sensor_1',\n          chartData:{\n              labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n              datasets: [\n                {\n                  data:[200, 250, 279, 300, 257, 325, 350, 150],\n                  backgroundColor:'rgba(63, 63, 191, 0.6)'\n                }\n              ]\n          }\n        });\n      }\n      else if (loc === 'Sensor_2'){\n        this.setState({\n          device:'Sensor_2',\n          chartData:{\n              labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n              datasets: [\n                {\n                  data:[300, 330, 270, 280, 290, 310, 330, 320],\n                  backgroundColor: 'rgba(63, 63, 191, 0.6)'\n                }\n              ]\n          }\n        });\n      }\n    }\n\n  range = (start, end) => {\n    if (start != null && end != null){\n      this.setState({\n        startDate: start.format('MMM-DD'),\n        endDate: end.format('MMM-DD')\n      })\n    }\n  }\n\n  celsius = () => {\n    if (this.state.degrees === \"° F\"){\n      var temp = [];\n      for (var i = 0; i < this.state.chartData.datasets.length; ++i){\n        temp = this.state.chartData.datasets[i].data\n        for (var j = 0; j < this.state.chartData.datasets[i].data.length; ++j){\n          temp[j] = (temp[j] - 32) * 5/9 ;\n        }\n      }\n      this.setState({degrees: \"° C\", celsius: true});\n    }\n  }\n\n  fahrenheit = () => {\n    if (this.state.degrees === \"° C\"){\n      var temp = [];\n      for (var i = 0; i < this.state.chartData.datasets.length; ++i){\n        temp = this.state.chartData.datasets[i].data\n        for (var j = 0; j < this.state.chartData.datasets[i].data.length; ++j){\n          temp[j] = (temp[j] * 9/5) + 32;\n        }\n      }\n      this.setState({degrees: \"° F\", celsius: false});\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"block\">\n          <div className=\"outline\">\n            <h2 className=\"title\">Degree Day (per device)</h2>\n          </div>\n          <div className=\"outline2\">\n          <div className=\"wrapper\">\n            <div className=\"location\">\n              <div className=\"inner1\">\n                <p className=\"text\">Select a location</p>\n              </div>\n              <div className=\"inner2\">\n                <Menu location={this.location} options={options2}/>\n              </div>\n            </div>\n            <div className=\"timeframe\">\n              <div className=\"inner1\">\n                <p className=\"text\">Select a time frame</p>\n              </div>\n              <div className=\"inner2\">\n                <Calendar range={this.range}/>\n              </div>\n            </div>\n            <div className=\"type\">\n              <div className=\"inner1\">\n                <p className=\"text\">Chart type</p>\n              </div>\n              <div className=\"inner2\">\n                <Menu graphClick={this.graphClick} options={options}/>\n              </div>\n            </div>\n            <div className=\"day\">\n              <div className=\"inner1\">\n                <p className=\"text\">Toggle Celsius and Fahrenheit </p>\n              </div>\n                <div className=\"inner2\">\n                <button className=\"temp1\" onClick={this.celsius}>° C</button>\n                <button className=\"temp2\" onClick={this.fahrenheit}>° F</button>\n                </div>\n            </div>\n          </div>\n          <div className=\"graph\">\n          <Chart chartData = {this.state.chartData} title={this.state.device} chartType={this.state.chartType} units={this.state.units} startDate={this.state.startDate} endDate={this.state.endDate} celsius={this.state.celsius}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Section3;\n","import React, {Component} from 'react';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport Chart from './Chart';\nimport Calendar from './Calendar';\nimport Menu from './Menu';\nimport './css/Section.css';\n\n\nconst options = [\n  {value: 'Bar', label: 'Bar'},\n  {value: 'Line', label: 'Line'},\n  {value: 'Pie', label: 'Pie'}\n]\n\nconst options2 = [\n  {value: 'Sensor_1', label: 'Sensor_1'},\n  {value: 'Sensor_2', label: 'Sensor_2'}\n]\n\nclass Section4 extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      chartData: {} ,\n      chartType:'Bar',\n      startDate: '',\n      endDate: '',\n      device: 'Sensor_1',\n      units: 'Section4',\n      focusedInput: null\n    }\n  }\n\n    componentWillMount() {\n      this.getChartData();\n    }\n\n    getChartData () {\n      //make ajax/axios call\n        this.setState({\n          chartData:{\n              labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n              datasets: [\n                {\n                  label: 'Temp. (per device)',\n                  data:[10, 20, 30, 40, 50, 60, 70, 80],\n                  backgroundColor:'rgba(63, 63, 191, 0.6)'\n                }\n              ]\n          }\n        });\n\n    }\n\n    graphClick = (graph) => {\n      this.setState({chartType: graph});\n    }\n\n    location = (loc) => {\n      if (loc === 'Sensor_1'){\n        this.setState({\n          device:'Sensor_1',\n          chartData:{\n              labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n              datasets: [\n                {\n                  label: 'Temp. (per device)',\n                  data:[10, 20, 30, 40, 50, 60, 70, 80],\n                  backgroundColor:'rgba(63, 63, 191, 0.6)'\n                }\n              ]\n          }\n        });\n      }\n      else if (loc === 'Sensor_2'){\n        this.setState({\n          device:'Sensor_2',\n          chartData:{\n              labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n              datasets: [\n                {\n                  label: 'Temp. (per device)',\n                  data:[10, 11, 12, 13, 14, 15, 16, 17],\n                  backgroundColor: 'rgba(63, 63, 191, 0.6)'\n                }\n              ]\n          }\n        });\n      }\n    }\n\n    temperature = () => {\n      if (this.state.device === 'Sensor_1'){\n        this.setState({\n          chartData:{\n              labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n              datasets: [\n                {\n                  label: 'Temp. (per device)',\n                  data:[10, 20, 30, 40, 50, 60, 70, 80],\n                  backgroundColor:'rgba(63, 63, 191, 0.6)'\n                },\n              ]\n          }\n        });\n      }\n      else if (this.state.device === 'Sensor_2'){\n        this.setState({\n          chartData:{\n              labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n              datasets: [\n                {\n                  label: 'Temp. (per device)',\n                  data:[10, 11, 12, 13, 14, 15, 16, 17],\n                  backgroundColor: 'rgba(63, 63, 191, 0.6)'\n                },\n              ]\n          }\n        });\n      }\n    }\n\n    humidity = () => {\n      if (this.state.device === 'Sensor_1'){\n        this.setState({\n          chartData:{\n              labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n              datasets: [\n                {\n                  label: 'Humidity (per device)',\n                  data:[45, 23, 15, 80, 72, 55, 33, 99],\n                  backgroundColor: 'rgba(255, 35, 35, 0.6)'\n                }\n              ]\n          }\n        });\n      }\n      else if (this.state.device === 'Sensor_2'){\n        this.setState({\n          chartData:{\n              labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n              datasets: [\n                {\n                  label: 'Humidity (per device)',\n                  data:[30, 32, 34, 80, 60, 55, 45, 99],\n                  backgroundColor: 'rgba(255, 35, 35, 0.6)'\n                }\n              ]\n          }\n        });\n      }\n    }\n    range = (start, end) => {\n      if (start != null && end != null){\n        this.setState({\n          startDate: start.format('MMM-DD'),\n          endDate: end.format('MMM-DD')\n        })\n      }\n    }\n\n  render() {\n    return (\n      <div className=\"block\">\n          <div className=\"outline\">\n            <h2 className=\"title\">Insect Count (per location)</h2>\n          </div>\n          <div className=\"outline2\">\n          <div className=\"wrapper\">\n            <div className=\"location\">\n              <div className=\"inner1\">\n                <p className=\"text\">Select a location</p>\n              </div>\n              <div className=\"inner2\">\n                <Menu location={this.location} options={options2}/>\n              </div>\n            </div>\n            <div className=\"timeframe\">\n              <div className=\"inner1\">\n                <p className=\"text\">Select a time frame</p>\n              </div>\n              <div className=\"inner2\">\n                <Calendar range={this.range}/>\n              </div>\n            </div>\n            <div className=\"type\">\n              <div className=\"inner1\">\n                <p className=\"text\">Chart type</p>\n              </div>\n              <div className=\"inner2\">\n                <Menu graphClick={this.graphClick} options={options}/>\n              </div>\n            </div>\n            <div className=\"day\">\n              <div className=\"inner1\">\n                <p className=\"text\">View by</p>\n              </div>\n              <div className=\"inner2\">\n                <button className=\"temperature\" onClick={this.temperature}>Temp. (per device)</button>\n                <button className=\"humidity\" onClick={this.humidity}>Humidity (per device)</button>\n              </div>\n            </div>\n          </div>\n          <div className=\"graph\">\n            <Chart chartData={this.state.chartData} title={this.state.device} chartType={this.state.chartType} units={this.state.units} startDate={this.state.startDate} endDate={this.state.endDate}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Section4;\n","import React, {Component} from 'react';\nimport {DateRangePicker, SingleDatePicker, DayPickerRangeController} from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\n\n\nclass Singledate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: null,\n      focused: null\n    };\n  }\n\n  handleChange = (date) => {\n    this.props.range(date);\n  }\n\n  render(){\n    const falseFunc = () =>false;\n    return(\n      <div className=\"calendar\">\n        <SingleDatePicker\n        date={this.state.date} // momentPropTypes.momentObj or null\n        onDateChange={date => {this.setState({ date }); this.handleChange(date);}} // PropTypes.func.isRequired\n        focused={this.state.focused} // PropTypes.bool\n        onFocusChange={({ focused }) => this.setState({ focused })} // PropTypes.func.isRequired\n        id=\"your_unique_id\" // PropTypes.string.isRequired,\n        isOutsideRange={falseFunc}\n        />\n      </div>\n    );\n  }\n};\n\nexport default Singledate;\n","import React, {Component} from 'react';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport Calendar from './Calendar';\nimport Singledate from './Singledate';\nimport Chart from './Chart';\nimport Menu from './Menu';\nimport './css/Section.css';\n\nconst options = [\n  {value: 'Bar', label: 'Bar'},\n  {value: 'Line', label: 'Line'},\n  {value: 'Pie', label: 'Pie'}\n]\n\nclass Section4 extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      chartDevice: null,\n      chartData: {},\n      deviceNumber: null,\n      options2: [],\n      chartType:'Bar',\n      device: '',\n      section: 'section6',\n      Date: null,\n      focusedInput: null\n    }\n  }\n\n  graphClick = (graph) => {\n    this.setState({chartType: graph});\n  }\n\n  getDevice = () => {\n    fetch( 'http://dashboardcountdaily.us-east-2.elasticbeanstalk.com/device', {\n      method: 'GET'\n    })\n      .then(response => response.json())\n      .then(data => {\n        this.setState({\n          chartDevice: data\n        })\n        this.setLabels()\n      })\n      .catch(err => console.log(err))\n  }\n\n  setdeviceNumber = (device) => {\n    this.setState({\n      deviceNumber: device\n    });\n    if (this.state.Date){\n      console.log(this.state.Date)\n      this.getdeviceDataDate(this.state.Date, device)\n    }\n    else{\n      this.getdeviceData()\n    }\n  }\n\n  getdeviceData = () => {\n    fetch( 'http://dashboardcountdaily.us-east-2.elasticbeanstalk.com/deviceData', {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify ({\n        deviceNumber: this.state.deviceNumber,\n        date: null\n      }),\n      method: 'POST'\n    })\n      .then(response => response.json())\n      .then(data => {\n        this.setchartData(data)\n      })\n      .catch(err => console.log(err))\n  }\n\n  getdeviceDataDate = (convert, device) => {\n    fetch( 'http://dashboardcountdaily.us-east-2.elasticbeanstalk.com/deviceData', {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify ({\n        deviceNumber: device,\n        date: convert\n      }),\n      method: 'POST'\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data)\n        this.setchartData(data)\n      })\n      .catch(err => console.log(err))\n  }\n\n  setchartData = (responseData) => {\n    var labels = []\n    var data = []\n    var temp = ''\n    for (var i = 0; i < responseData.length; ++i){\n      temp = (responseData[i].capturedAt)\n      temp = temp.slice(17, 22)\n      labels.push(temp)\n      data.push(responseData[i].hourlyCount)\n    }\n    this.setState({\n      chartData:{\n        labels: labels,\n        datasets: [\n          {\n            label: \"test\",\n            data: data,\n            backgroundColor:'rgba(63, 63, 191, 0.6)'\n          }\n        ]\n      }\n    });\n  }\n\n  setLabels = () => {\n    if (this.state.chartDevice != null){\n      var temp = {};\n      var list = [];\n      for (var i = 0; i < this.state.chartDevice.length; ++i){\n        temp = {\n          'value': this.state.chartDevice[i].deviceId,\n          'label': this.state.chartDevice[i].deviceId\n        }\n        list.push(temp)\n        temp = {}\n      }\n      this.setState({\n        options2: list\n      })\n    }\n  }\n\n  range = (date) => {\n    if (date != null){\n      var convert = date.format('YYYY-MM-DD')\n      this.setState({\n        Date: convert\n      })\n      if (this.state.deviceNumber){\n        this.getdeviceDataDate(convert)\n      }\n    }\n  }\n\n  componentDidMount(){\n    this.getDevice()\n    this.getdeviceData()\n  }\n\n  render() {\n    return (\n      <div className=\"block\">\n        <div className=\"outline\">\n          <h2 className=\"title\">Insect Count (per hour)</h2>\n        </div>\n        <div className=\"outline2\">\n        <div className=\"wrapper\">\n          <div className=\"location\">\n            <div className=\"inner1\">\n              <p className=\"text\">Select a device</p>\n            </div>\n            <div className=\"inner2\">\n              <Menu setdeviceNumber={this.setdeviceNumber} options={this.state.options2} section={this.state.section}/>\n            </div>\n          </div>\n          <div className=\"type\">\n            <div className=\"inner1\">\n              <p className=\"text\">Chart type</p>\n            </div>\n            <div className=\"inner2\">\n              <Menu graphClick={this.graphClick} options={options}/>\n            </div>\n          </div>\n          <div className=\"timeframe\">\n            <div className=\"inner1\">\n              <p className=\"text\">Select a time frame</p>\n            </div>\n            <div className=\"inner2\">\n              <Singledate range={this.range}/>\n            </div>\n          </div>\n        </div>\n        <div className=\"graph\">\n          <Chart chartData={this.state.chartData} title={this.state.device} chartType={this.state.chartType} section={this.state.section}/>\n        </div>\n      </div>\n      </div>\n    );\n  }\n};\n\nexport default Section4;\n","import React from 'react';\nimport Navbar from './Navbar';\nimport Section1 from './Section1';\nimport Section2 from './Section2';\nimport Section3 from './Section3';\nimport Section4 from './Section4';\nimport Section6 from './Section6';\n\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n    }\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"main\">\n        <Navbar/>\n        <Section6/>\n      </div>\n    );\n  }\n};\n\nexport default App;\n","import React, {Component} from 'react';\nimport {Redirect} from 'react-router-dom';\nimport jwt from 'jsonwebtoken';\nimport './css/Login.css';\n\n\nclass Login extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      Username: '',\n      Password: '',\n      redirectToReferrer: false\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    fetch( 'http://dashboardcountdaily.us-east-2.elasticbeanstalk.com/login', {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify ({\n        Username: this.state.Username,\n        Password: this.state.Password\n      }),\n      method: 'POST'\n    })\n      .then(response => response.json())\n      .then(response => {\n        this.setState({\n          Username: '',\n          Password: ''\n        })\n        if (response['Response'] === 'True'){\n          this.setState({\n            redirectToReferrer: true\n          });\n        }\n      })\n      .catch(err => console.log(err))\n  }\n\n  render(){\n    if (this.state.redirectToReferrer === true) {\n      return <Redirect to={{pathname: '/protected'}} />\n    }\n\n    return(\n      <div className=\"loginBg\">\n          <div className=\"loginInner\">\n            <div className=\"signIn\">SIGN IN NOW</div>\n            <form onSubmit={this.handleSubmit}>\n              <input className=\"input\" type=\"text\" name=\"Username\" placeholder=\"Username\" value={this.state.Username} onChange={this.handleChange}/>\n              <input className=\"input\" type=\"password\" name=\"Password\" placeholder=\"Password\" value={this.state.Password} onChange={this.handleChange}/>\n              <button className=\"loginButton\" type=\"submit\">SIGN IN</button>\n            </form>\n          </div>\n      </div>\n    )\n  }\n};\n\nexport default Login;\n","import React, {Component} from 'react';\n\nclass registration extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      Username: '',\n      Email: '',\n      Password: ''\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    fetch( 'http://localhost:5000/registration', {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify ({\n        Username: this.state.Username,\n        Email: this.state.Email,\n        Password: this.state.Password\n      }),\n      method: 'POST',\n    })\n      .then(response => response.json())\n      .then(response => {\n        console.log(response)\n      })\n      .catch(err => console.log(err))\n      this.setState({\n        Username: '',\n        Password: '',\n        Email: ''\n      })\n  }\n    //run api call to flask\n\n\n  render(){\n    return(\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <input type=\"text\" name=\"Username\" placeholder=\"Username\" value={this.state.Username} onChange={this.handleChange}/>\n          <input type=\"text\" name=\"Email\" placeholder=\"Email\" value={this.state.Email} onChange={this.handleChange}/>\n          <input type=\"password\" name=\"Password\" placeholder=\"Password\" value={this.state.Password} onChange={this.handleChange}/>\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    )\n  }\n};\n\nexport default registration;\n","import React, { Component } from 'react';\n\nclass ControlPanel extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      Username: ''\n    }\n  }\n\n  addUsers = () => {\n    fetch( 'http://localhost:5000/userList', {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify ({\n        Username: this.state.Username,\n      }),\n      method: 'POST'\n    })\n      .then(response => response.json())\n      .then(response => {\n\n      })\n      .catch(err => console.log(err))\n  }\n\n  render(){\n    return(\n      <div>\n        <form onSubmit={this.addUsers}>\n          <input type=\"text\" name=\"Username\" placeholder=\"Username\" value={this.state.Username} onChange={this.handleChange}/>\n          <button type=\"submit\">add user</button>\n        </form>\n      </div>\n    )\n  }\n\n}\n\nexport default ControlPanel;\n","import React, {Component} from 'react';\n\nclass registration extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      Username: '',\n      Email: '',\n      Password: ''\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    fetch( 'http://localhost:5000/adminRegistration', {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify ({\n        Username: this.state.Username,\n        Email: this.state.Email,\n        Password: this.state.Password\n      }),\n      method: 'POST',\n    })\n      .then(response => response.json())\n      .then(response => {\n        console.log(response)\n      })\n      .catch(err => console.log(err))\n      this.setState({\n        Username: '',\n        Password: '',\n        Email: ''\n      })\n  }\n\n  render(){\n    return(\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <input type=\"text\" name=\"Username\" placeholder=\"Username\" value={this.state.Username} onChange={this.handleChange}/>\n          <input type=\"text\" name=\"Email\" placeholder=\"Email\" value={this.state.Email} onChange={this.handleChange}/>\n          <input type=\"password\" name=\"Password\" placeholder=\"Password\" value={this.state.Password} onChange={this.handleChange}/>\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    )\n  }\n};\n\nexport default registration;\n","import React from 'react';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Registration from './components/Registration';\nimport ControlPanel from './components/ControlPanel';\nimport adminRegistration from './components/adminRegistration';\nimport './App.css';\nimport { BrowserRouter as Router, Route, HashRouter, Redirect} from 'react-router-dom';\n\n\nfunction PrivateRoute ({component: Component, Authenticated, ...rest}) {\n  return (\n    <Route\n      {...rest}\n      render={(props) => 'True' === 'True'\n        ? <Component {...props} />\n        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />}\n    />\n  )\n}\n\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      Authenticated: 'False',\n      Redirect: false\n    }\n  }\n\n  validate = (condition) => {\n    this.setState({Authenticated: condition})\n  }\n\nrender () {\n  console.log(this.state.Authenticated)\n    return (\n      <HashRouter basename=\"/\">\n        <div>\n          <Route path=\"/\" exact render={() => <Login validate={this.validate} />} />\n          <Route path=\"/login\" render={() => <Login validate={this.validate} />} />\n          <Route path=\"/register\" component={Registration} />\n          <Route path=\"/adminRegister\" component={adminRegistration} />\n          <Route path=\"/controlPanel\" component={ControlPanel} />\n          <PrivateRoute path='/protected' Authenticated={this.state.Authenticated} component={Home} />\n        </div>\n      </HashRouter>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}