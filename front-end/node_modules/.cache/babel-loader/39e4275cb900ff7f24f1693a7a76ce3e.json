{"ast":null,"code":"var _jsxFileName = \"/Users/johnshin/Projects/chart/src/App.js\";\nimport React from 'react';\nimport Chart from './components/Chart';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.BarClick = () => {\n      this.setState({\n        chartType: 'Bar'\n      });\n    };\n\n    this.LineClick = () => {\n      this.setState({\n        chartType: 'Line'\n      });\n    };\n\n    this.PieClick = () => {\n      this.setState({\n        chartType: 'Pie'\n      });\n    };\n\n    this.state = {\n      startDate: null,\n      endDate: null,\n      focusedInput: null,\n      chartData: {\n        labels: ['05-06', '05-07', '05-08', '05-09', '05-10', '05-11', '05-12', '05-13', '05-14'],\n        datasets: [{\n          label: 'Population',\n          data: [0, 5.75, 11.5, 17.25, 23],\n          backgroundColor: ['rgba(63, 63, 191, 0.6)', 'rgba(63, 63, 191, 0.6)', 'rgba(63, 63, 191, 0.6)', 'rgba(63, 63, 191, 0.6)', 'rgba(63, 63, 191, 0.6)']\n        }]\n      },\n      chartData2: {\n        labels: ['05-06', '05-07', '05-08', '05-09', '05-10', '05-11', '05-12', '05-13', '05-14'],\n        datasets: [{\n          label: 'Second Population',\n          data: [5, 10, 15, 20, 25],\n          backgroundColor: ['rgba(63, 191, 63, 0.6)', 'rgba(63, 191, 63, 0.6)', 'rgba(63, 191, 63, 0.6)', 'rgba(63, 191, 63, 0.6)', 'rgba(63, 191, 63, 0.6)']\n        }]\n      },\n      chartType: 'Bar'\n    };\n  }\n\n  render() {\n    const falseFunc = () => false;\n\n    const options = ['device_1', 'device_2', 'device_3'];\n    const defaultOption = options[0];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Select a Chart Type: \"), React.createElement(\"button\", {\n      onClick: this.BarClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Bar\"), React.createElement(\"button\", {\n      onClick: this.LineClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Line\"), React.createElement(\"button\", {\n      onClick: this.PieClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Pie\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Select a Location: \"), React.createElement(DateRangePicker, {\n      startDateId: \"startDate\",\n      endDateId: \"endDate\",\n      startDate: this.state.startDate,\n      endDate: this.state.endDate,\n      onDatesChange: ({\n        startDate,\n        endDate\n      }) => {\n        this.setState({\n          startDate,\n          endDate\n        });\n      },\n      focusedInput: this.state.focusedInput,\n      onFocusChange: focusedInput => {\n        this.setState({\n          focusedInput\n        });\n      },\n      isOutsideRange: falseFunc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Select a Device: \"), React.createElement(\"button\", {\n      onClick: this.BarClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Bar\"), React.createElement(\"button\", {\n      onClick: this.LineClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Line\"), React.createElement(\"button\", {\n      onClick: this.PieClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Pie\"), React.createElement(Chart, {\n      chartData: this.state.chartData,\n      location: \"California\",\n      chartType: this.state.chartType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/johnshin/Projects/chart/src/App.js"],"names":["React","Chart","DateRangePicker","SingleDatePicker","DayPickerRangeController","Dropdown","App","Component","constructor","BarClick","setState","chartType","LineClick","PieClick","state","startDate","endDate","focusedInput","chartData","labels","datasets","label","data","backgroundColor","chartData2","render","falseFunc","options","defaultOption"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Chart from './components/Chart';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      startDate: null,\n      endDate: null,\n      focusedInput: null,\n      chartData:{\n          labels: ['05-06', '05-07', '05-08', '05-09', '05-10', '05-11', '05-12', '05-13', '05-14'],\n          datasets: [\n            {\n              label:'Population',\n              data:[\n                0,\n                5.75,\n                11.5,\n                17.25,\n                23\n              ],\n              backgroundColor:[\n                'rgba(63, 63, 191, 0.6)',\n                'rgba(63, 63, 191, 0.6)',\n                'rgba(63, 63, 191, 0.6)',\n                'rgba(63, 63, 191, 0.6)',\n                'rgba(63, 63, 191, 0.6)',\n              ]\n            }\n          ]\n      },\n      chartData2:{\n          labels: ['05-06', '05-07', '05-08', '05-09', '05-10', '05-11', '05-12', '05-13', '05-14'],\n          datasets: [\n            {\n             label:'Second Population',\n             data:[\n               5,\n               10,\n               15,\n               20,\n               25\n             ],\n             backgroundColor:[\n               'rgba(63, 191, 63, 0.6)',\n               'rgba(63, 191, 63, 0.6)',\n               'rgba(63, 191, 63, 0.6)',\n               'rgba(63, 191, 63, 0.6)',\n               'rgba(63, 191, 63, 0.6)',\n             ]\n           }\n          ]\n      },\n      chartType:'Bar'\n    }\n  }\n\n  BarClick = () => {\n    this.setState({chartType:'Bar'});\n  }\n\n  LineClick = () => {\n    this.setState({chartType:'Line'});\n  }\n\n  PieClick = () => {\n    this.setState({chartType:'Pie'});\n  }\n\n  render() {\n    const falseFunc = ()=>false;\n    const options = [\n      'device_1', 'device_2', 'device_3'\n    ];\n    const defaultOption = options[0];\n    return (\n      <div>\n        <p>Select a Chart Type: </p>\n        <button onClick={this.BarClick}>Bar</button>\n        <button onClick={this.LineClick}>Line</button>\n        <button onClick={this.PieClick}>Pie</button>\n\n        <p>Select a Location: </p>\n        <DateRangePicker\n         startDateId=\"startDate\"\n         endDateId=\"endDate\"\n         startDate={this.state.startDate}\n         endDate={this.state.endDate}\n         onDatesChange={({ startDate, endDate }) => { this.setState({ startDate, endDate })}}\n         focusedInput={this.state.focusedInput}\n         onFocusChange={(focusedInput) => { this.setState({ focusedInput })}}\n         isOutsideRange={falseFunc}\n         />\n         <p>Select a Device: </p>\n         <button onClick={this.BarClick}>Bar</button>\n         <button onClick={this.LineClick}>Line</button>\n         <button onClick={this.PieClick}>Pie</button>\n\n         <Chart chartData={this.state.chartData} location=\"California\" chartType={this.state.chartType} />\n      </div>\n    );\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}