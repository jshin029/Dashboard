{"ast":null,"code":"var _jsxFileName = \"/Users/johnshin/Projects/chart/src/App.js\";\nimport React from 'react';\nimport Chart from './components/Chart';\nimport Calendar from './components/Calendar';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.BarClick = () => {\n      this.setState({\n        chartType: 'Bar'\n      });\n    };\n\n    this.LineClick = () => {\n      this.setState({\n        chartType: 'Line'\n      });\n    };\n\n    this.PieClick = () => {\n      this.setState({\n        chartType: 'Pie'\n      });\n    };\n\n    this.state = {\n      startDate: null,\n      endDate: null,\n      focusedInput: null,\n      chartData: {\n        labels: ['05-06', '05-07', '05-08', '05-09', '05-10', '05-11', '05-12', '05-13', '05-14'],\n        datasets: [{\n          label: 'Population',\n          data: [0, 5.75, 11.5, 17.25, 23],\n          backgroundColor: ['rgba(63, 63, 191, 0.6)', 'rgba(63, 63, 191, 0.6)', 'rgba(63, 63, 191, 0.6)', 'rgba(63, 63, 191, 0.6)', 'rgba(63, 63, 191, 0.6)']\n        }]\n      },\n      chartData2: {\n        labels: ['05-06', '05-07', '05-08', '05-09', '05-10', '05-11', '05-12', '05-13', '05-14'],\n        datasets: [{\n          label: 'Second Population',\n          data: [5, 10, 15, 20, 25],\n          backgroundColor: ['rgba(63, 191, 63, 0.6)', 'rgba(63, 191, 63, 0.6)', 'rgba(63, 191, 63, 0.6)', 'rgba(63, 191, 63, 0.6)', 'rgba(63, 191, 63, 0.6)']\n        }]\n      },\n      chartType: 'Bar'\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Select a Chart Type: \"), React.createElement(\"button\", {\n      onClick: this.BarClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Bar\"), React.createElement(\"button\", {\n      onClick: this.LineClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Line\"), React.createElement(\"button\", {\n      onClick: this.PieClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Pie\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Select a Location: \"), React.createElement(Calendar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Select a Device: \"), React.createElement(\"button\", {\n      onClick: this.D1Click,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Device_1\"), React.createElement(\"button\", {\n      onClick: this.D2lick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Device_2\"), React.createElement(\"button\", {\n      onClick: this.D3Click,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Device_3\"), React.createElement(Chart, {\n      chartData: this.state.chartData2,\n      location: \"California\",\n      chartType: this.state.chartType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/johnshin/Projects/chart/src/App.js"],"names":["React","Chart","Calendar","Dropdown","App","Component","constructor","BarClick","setState","chartType","LineClick","PieClick","state","startDate","endDate","focusedInput","chartData","labels","datasets","label","data","backgroundColor","chartData2","render","D1Click","D2lick","D3Click"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Chart from './components/Chart';\nimport Calendar from './components/Calendar';\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      startDate: null,\n      endDate: null,\n      focusedInput: null,\n      chartData:{\n          labels: ['05-06', '05-07', '05-08', '05-09', '05-10', '05-11', '05-12', '05-13', '05-14'],\n          datasets: [\n            {\n              label:'Population',\n              data:[\n                0,\n                5.75,\n                11.5,\n                17.25,\n                23\n              ],\n              backgroundColor:[\n                'rgba(63, 63, 191, 0.6)',\n                'rgba(63, 63, 191, 0.6)',\n                'rgba(63, 63, 191, 0.6)',\n                'rgba(63, 63, 191, 0.6)',\n                'rgba(63, 63, 191, 0.6)',\n              ]\n            }\n          ]\n      },\n      chartData2:{\n          labels: ['05-06', '05-07', '05-08', '05-09', '05-10', '05-11', '05-12', '05-13', '05-14'],\n          datasets: [\n            {\n             label:'Second Population',\n             data:[\n               5,\n               10,\n               15,\n               20,\n               25\n             ],\n             backgroundColor:[\n               'rgba(63, 191, 63, 0.6)',\n               'rgba(63, 191, 63, 0.6)',\n               'rgba(63, 191, 63, 0.6)',\n               'rgba(63, 191, 63, 0.6)',\n               'rgba(63, 191, 63, 0.6)',\n             ]\n           }\n          ]\n      },\n      chartType:'Bar'\n    }\n  }\n\n  BarClick = () => {\n    this.setState({chartType:'Bar'});\n  }\n\n  LineClick = () => {\n    this.setState({chartType:'Line'});\n  }\n\n  PieClick = () => {\n    this.setState({chartType:'Pie'});\n  }\n\n\n\n  render() {\n\n    return (\n      <div>\n        <p>Select a Chart Type: </p>\n        <button onClick={this.BarClick}>Bar</button>\n        <button onClick={this.LineClick}>Line</button>\n        <button onClick={this.PieClick}>Pie</button>\n\n        <p>Select a Location: </p>\n        <Calendar/>\n        <p>Select a Device: </p>\n        <button onClick={this.D1Click}>Device_1</button>\n        <button onClick={this.D2lick}>Device_2</button>\n        <button onClick={this.D3Click}>Device_3</button>\n\n        <Chart chartData={this.state.chartData2} location=\"California\" chartType={this.state.chartType} />\n      </div>\n    );\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}