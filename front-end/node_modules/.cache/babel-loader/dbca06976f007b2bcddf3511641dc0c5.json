{"ast":null,"code":"var _jsxFileName = \"/Users/johnshin/Projects/chart/src/App.js\";\nimport React from 'react';\nimport Chart from './components/Chart';\nimport Calendar from './components/Calendar';\nimport Toggle from 'react-toggle';\nimport \"react-toggle/style.css\";\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.BarClick = () => {\n      this.setState({\n        chartType: 'Bar'\n      });\n    };\n\n    this.LineClick = () => {\n      this.setState({\n        chartType: 'Line'\n      });\n    };\n\n    this.PieClick = () => {\n      this.setState({\n        chartType: 'Pie'\n      });\n    };\n\n    this.state = {\n      chartD: 'insect_count',\n      chartType: 'Bar',\n      startDate: null,\n      endDate: null,\n      focusedInput: null\n    };\n  }\n\n  render() {\n    const falseFunc = () => false;\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \" Select a Chart's Data: \"), React.createElement(\"button\", {\n      onClick: this.BarClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Bar\"), React.createElement(\"button\", {\n      onClick: this.LineClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Line\"), React.createElement(\"button\", {\n      onClick: this.PieClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Pie\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \" Select a Chart Type: \"), React.createElement(\"button\", {\n      onClick: this.C1Click,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Insect Count\"), React.createElement(\"button\", {\n      onClick: this.C2Click,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Degree Day\"), React.createElement(\"button\", {\n      onClick: this.C3Click,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Temp Device\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \" Select a Location: \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Select a Date: \"), React.createElement(DateRangePicker, {\n      startDateId: \"startDate\",\n      endDateId: \"endDate\",\n      startDate: this.state.startDate,\n      endDate: this.state.endDate,\n      onDatesChange: ({\n        startDate,\n        endDate\n      }) => {\n        this.setState({\n          startDate,\n          endDate\n        });\n      },\n      focusedInput: this.state.focusedInput,\n      onFocusChange: focusedInput => {\n        this.setState({\n          focusedInput\n        });\n      },\n      isOutsideRange: falseFunc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \" Celcius or Fahrenheit\"), React.createElement(Toggle, {\n      defaultChecked: this.state.tofuIsReady,\n      icons: false,\n      onChange: this.handleTofuChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Chart, {\n      location: \"California\",\n      chartType: this.state.chartType,\n      temp: this.state.startDate,\n      type: \"C\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/johnshin/Projects/chart/src/App.js"],"names":["React","Chart","Calendar","Toggle","DateRangePicker","SingleDatePicker","DayPickerRangeController","App","Component","constructor","BarClick","setState","chartType","LineClick","PieClick","state","chartD","startDate","endDate","focusedInput","render","falseFunc","C1Click","C2Click","C3Click","tofuIsReady","handleTofuChange"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Chart from './components/Chart';\nimport Calendar from './components/Calendar';\nimport Toggle from 'react-toggle';\nimport \"react-toggle/style.css\";\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      chartD: 'insect_count',\n      chartType:'Bar',\n      startDate: null,\n      endDate: null,\n      focusedInput: null\n    }\n  }\n\n  BarClick = () => {\n    this.setState({chartType:'Bar'});\n  }\n\n  LineClick = () => {\n    this.setState({chartType:'Line'});\n  }\n\n  PieClick = () => {\n    this.setState({chartType:'Pie'});\n  }\n\n  render() {\n    const falseFunc = ()=>false;\n    return (\n      <div>\n        <p> Select a Chart's Data: </p>\n        <button onClick={this.BarClick}>Bar</button>\n        <button onClick={this.LineClick}>Line</button>\n        <button onClick={this.PieClick}>Pie</button>\n\n        <p> Select a Chart Type: </p>\n        <button onClick={this.C1Click}>Insect Count</button>\n        <button onClick={this.C2Click}>Degree Day</button>\n        <button onClick={this.C3Click}>Temp Device</button>\n\n        <p> Select a Location: </p>\n\n        <p>Select a Date: </p>\n        <DateRangePicker\n         startDateId=\"startDate\"\n         endDateId=\"endDate\"\n         startDate={this.state.startDate}\n         endDate={this.state.endDate}\n         onDatesChange={({ startDate, endDate }) => { this.setState({ startDate, endDate })}}\n         focusedInput={this.state.focusedInput}\n         onFocusChange={(focusedInput) => { this.setState({ focusedInput })}}\n         isOutsideRange={falseFunc}\n         />\n        <p> Celcius or Fahrenheit</p>\n        <Toggle\n          defaultChecked={this.state.tofuIsReady}\n          icons={false}\n          onChange={this.handleTofuChange} />\n\n        <Chart location=\"California\" chartType={this.state.chartType} temp={this.state.startDate} type='C'/>\n      </div>\n    );\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}