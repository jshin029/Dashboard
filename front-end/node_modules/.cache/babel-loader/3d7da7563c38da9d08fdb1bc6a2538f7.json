{"ast":null,"code":"var _jsxFileName = \"/Users/johnshin/Projects/chart/src/components/Section4.js\";\nimport React, { component } from 'react';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport Chart from './Chart';\nimport Calendar from './Calendar';\nimport Menu from './Menu';\nimport moment from 'moment';\nimport './section.css';\nconst options = [{\n  value: 'Bar',\n  label: 'Bar'\n}, {\n  value: 'Line',\n  label: 'Line'\n}, {\n  value: 'Pie',\n  label: 'Pie'\n}];\nconst options2 = [{\n  value: 'Sensor_1',\n  label: 'Sensor_1'\n}, {\n  value: 'Sensor_2',\n  label: 'Sensor_2'\n}];\n\nclass Section4 extends React.Component {\n  constructor() {\n    super();\n\n    this.graphClick = graph => {\n      this.setState({\n        chartType: graph\n      });\n    };\n\n    this.location = loc => {\n      if (loc === 'Sensor_1') {\n        this.setState({\n          device: 'Sensor_1',\n          chartData: {\n            labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n            datasets: [{\n              label: 'Temp. (per device)',\n              data: [10, 20, 30, 40, 50, 60, 70, 80],\n              backgroundColor: 'rgba(63, 63, 191, 0.6)'\n            }]\n          }\n        });\n      } else if (loc === 'Sensor_2') {\n        this.setState({\n          device: 'Sensor_2',\n          chartData: {\n            labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n            datasets: [{\n              label: 'Temp. (per device)',\n              data: [10, 11, 12, 13, 14, 15, 16, 17],\n              backgroundColor: 'rgba(63, 63, 191, 0.6)'\n            }]\n          }\n        });\n      }\n    };\n\n    this.temperature = () => {\n      if (this.state.device === 'Sensor_1') {\n        this.setState({\n          chartData: {\n            labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n            datasets: [{\n              label: 'Temp. (per device)',\n              data: [10, 20, 30, 40, 50, 60, 70, 80],\n              backgroundColor: 'rgba(63, 63, 191, 0.6)'\n            }]\n          }\n        });\n      } else if (this.state.device === 'Sensor_2') {\n        this.setState({\n          chartData: {\n            labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n            datasets: [{\n              label: 'Temp. (per device)',\n              data: [10, 11, 12, 13, 14, 15, 16, 17],\n              backgroundColor: 'rgba(63, 63, 191, 0.6)'\n            }]\n          }\n        });\n      }\n    };\n\n    this.humidity = () => {\n      if (this.state.device === 'Sensor_1') {\n        this.setState({\n          chartData: {\n            labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n            datasets: [{\n              label: 'Humidity (per device)',\n              data: [45, 23, 15, 80, 72, 55, 33, 99],\n              backgroundColor: 'rgba(255, 35, 35, 0.6)'\n            }]\n          }\n        });\n      } else if (this.state.device === 'Sensor_2') {\n        this.setState({\n          chartData: {\n            labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n            datasets: [{\n              label: 'Humidity (per device)',\n              data: [30, 32, 34, 80, 60, 55, 45, 99],\n              backgroundColor: 'rgba(255, 35, 35, 0.6)'\n            }]\n          }\n        });\n      }\n    };\n\n    this.range = (start, end) => {\n      if (start != null && end != null) {\n        this.setState({\n          startDate: start.format('MMM-DD'),\n          endDate: end.format('MMM-DD')\n        });\n      }\n    };\n\n    this.state = {\n      chartData: {},\n      chartType: 'Bar',\n      startDate: '',\n      endDate: '',\n      device: 'Sensor_1',\n      units: 'Section4',\n      focusedInput: null\n    };\n  }\n\n  componentWillMount() {\n    this.getChartData();\n  }\n\n  getChartData() {\n    //make ajax/axios call\n    this.setState({\n      chartData: {\n        labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n        datasets: [{\n          label: 'Temp. (per device)',\n          data: [10, 20, 30, 40, 50, 60, 70, 80],\n          backgroundColor: 'rgba(63, 63, 191, 0.6)'\n        }]\n      }\n    });\n  }\n\n  render() {\n    console.log(this.state.chartData.datasets[0]);\n\n    const falseFunc = () => false;\n\n    return React.createElement(\"div\", {\n      className: \"block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Insect Count (per location)\")), React.createElement(\"div\", {\n      className: \"outline2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inner1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Select a location\")), React.createElement(\"div\", {\n      className: \"inner2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      location: this.location,\n      options: options2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"timeframe\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inner1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, \"Select a time frame\")), React.createElement(\"div\", {\n      className: \"inner2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(Calendar, {\n      range: this.range,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inner1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Chart type\")), React.createElement(\"div\", {\n      className: \"inner2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      graphClick: this.graphClick,\n      options: options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"day\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inner1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"View by\")), React.createElement(\"div\", {\n      className: \"inner2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"temperature\",\n      onClick: this.temperature,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Temp. (per device)\"), React.createElement(\"button\", {\n      className: \"humidity\",\n      onClick: this.humidity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Humidity (per device)\")))), React.createElement(\"div\", {\n      className: \"graph\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      chartData: this.state.chartData,\n      title: this.state.device,\n      chartType: this.state.chartType,\n      units: this.state.units,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }))));\n  }\n\n}\n\n;\nexport default Section4;","map":{"version":3,"sources":["/Users/johnshin/Projects/chart/src/components/Section4.js"],"names":["React","component","DateRangePicker","SingleDatePicker","DayPickerRangeController","Chart","Calendar","Menu","moment","options","value","label","options2","Section4","Component","constructor","graphClick","graph","setState","chartType","location","loc","device","chartData","labels","datasets","data","backgroundColor","temperature","state","humidity","range","start","end","startDate","format","endDate","units","focusedInput","componentWillMount","getChartData","render","console","log","falseFunc"],"mappings":"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","sourcesContent":["import React, {component} from 'react';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport Chart from './Chart';\nimport Calendar from './Calendar';\nimport Menu from './Menu';\nimport moment from 'moment';\nimport './section.css';\n\nconst options = [\n  {value: 'Bar', label: 'Bar'},\n  {value: 'Line', label: 'Line'},\n  {value: 'Pie', label: 'Pie'}\n]\n\nconst options2 = [\n  {value: 'Sensor_1', label: 'Sensor_1'},\n  {value: 'Sensor_2', label: 'Sensor_2'}\n]\n\nclass Section4 extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      chartData: {} ,\n      chartType:'Bar',\n      startDate: '',\n      endDate: '',\n      device: 'Sensor_1',\n      units: 'Section4',\n      focusedInput: null\n    }\n  }\n\n    componentWillMount() {\n      this.getChartData();\n    }\n\n    getChartData () {\n      //make ajax/axios call\n        this.setState({\n          chartData:{\n              labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n              datasets: [\n                {\n                  label: 'Temp. (per device)',\n                  data:[10, 20, 30, 40, 50, 60, 70, 80],\n                  backgroundColor:'rgba(63, 63, 191, 0.6)'\n                },\n              ]\n          }\n        });\n\n    }\n\n    graphClick = (graph) => {\n      this.setState({chartType: graph});\n    }\n\n    location = (loc) => {\n      if (loc === 'Sensor_1'){\n        this.setState({\n          device:'Sensor_1',\n          chartData:{\n              labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n              datasets: [\n                {\n                  label: 'Temp. (per device)',\n                  data:[10, 20, 30, 40, 50, 60, 70, 80],\n                  backgroundColor:'rgba(63, 63, 191, 0.6)'\n                }\n              ]\n          }\n        });\n      }\n      else if (loc === 'Sensor_2'){\n        this.setState({\n          device:'Sensor_2',\n          chartData:{\n              labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n              datasets: [\n                {\n                  label: 'Temp. (per device)',\n                  data:[10, 11, 12, 13, 14, 15, 16, 17],\n                  backgroundColor: 'rgba(63, 63, 191, 0.6)'\n                }\n              ]\n          }\n        });\n      }\n    }\n\n    temperature = () => {\n      if (this.state.device === 'Sensor_1'){\n        this.setState({\n          chartData:{\n              labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n              datasets: [\n                {\n                  label: 'Temp. (per device)',\n                  data:[10, 20, 30, 40, 50, 60, 70, 80],\n                  backgroundColor:'rgba(63, 63, 191, 0.6)'\n                },\n              ]\n          }\n        });\n      }\n      else if (this.state.device === 'Sensor_2'){\n        this.setState({\n          chartData:{\n              labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n              datasets: [\n                {\n                  label: 'Temp. (per device)',\n                  data:[10, 11, 12, 13, 14, 15, 16, 17],\n                  backgroundColor: 'rgba(63, 63, 191, 0.6)'\n                },\n              ]\n          }\n        });\n      }\n    }\n\n    humidity = () => {\n      if (this.state.device === 'Sensor_1'){\n        this.setState({\n          chartData:{\n              labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n              datasets: [\n                {\n                  label: 'Humidity (per device)',\n                  data:[45, 23, 15, 80, 72, 55, 33, 99],\n                  backgroundColor: 'rgba(255, 35, 35, 0.6)'\n                }\n              ]\n          }\n        });\n      }\n      else if (this.state.device === 'Sensor_2'){\n        this.setState({\n          chartData:{\n              labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n              datasets: [\n                {\n                  label: 'Humidity (per device)',\n                  data:[30, 32, 34, 80, 60, 55, 45, 99],\n                  backgroundColor: 'rgba(255, 35, 35, 0.6)'\n                }\n              ]\n          }\n        });\n      }\n    }\n    range = (start, end) => {\n      if (start != null && end != null){\n        this.setState({\n          startDate: start.format('MMM-DD'),\n          endDate: end.format('MMM-DD')\n        })\n      }\n    }\n\n  render() {\n    console.log(this.state.chartData.datasets[0]);\n    const falseFunc = ()=>false;\n    return (\n      <div className=\"block\">\n          <div className=\"outline\">\n            <h2 className=\"title\">Insect Count (per location)</h2>\n          </div>\n          <div className=\"outline2\">\n          <div className=\"wrapper\">\n            <div className=\"location\">\n              <div className=\"inner1\">\n                <p className=\"text\">Select a location</p>\n              </div>\n              <div className=\"inner2\">\n                <Menu location={this.location} options={options2}/>\n              </div>\n            </div>\n            <div className=\"timeframe\">\n              <div className=\"inner1\">\n                <p className=\"text\">Select a time frame</p>\n              </div>\n              <div className=\"inner2\">\n                <Calendar range={this.range}/>\n              </div>\n            </div>\n            <div className=\"type\">\n              <div className=\"inner1\">\n                <p className=\"text\">Chart type</p>\n              </div>\n              <div className=\"inner2\">\n                <Menu graphClick={this.graphClick} options={options}/>\n              </div>\n            </div>\n            <div className=\"day\">\n              <div className=\"inner1\">\n                <p className=\"text\">View by</p>\n              </div>\n              <div className=\"inner2\">\n                <button className=\"temperature\" onClick={this.temperature}>Temp. (per device)</button>\n                <button className=\"humidity\" onClick={this.humidity}>Humidity (per device)</button>\n              </div>\n            </div>\n          </div>\n          <div className=\"graph\">\n            <Chart chartData={this.state.chartData} title={this.state.device} chartType={this.state.chartType} units={this.state.units} startDate={this.state.startDate} endDate={this.state.endDate}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Section4;\n"]},"metadata":{},"sourceType":"module"}