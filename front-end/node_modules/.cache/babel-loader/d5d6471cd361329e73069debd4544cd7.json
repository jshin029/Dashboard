{"ast":null,"code":"var _temp,\n    _jsxFileName = \"/Users/johnshin/Projects/chart/src/App.js\";\n\nimport React from 'react';\nimport Chart from './components/Chart';\nimport Calendar from './components/Calendar';\nimport DropDown from 'react-dropdown';\nimport Toggle from 'react-toggle';\nimport \"react-toggle/style.css\";\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nconst defaultOption = (_temp = class App extends React.Component {\n  constructor() {\n    super();\n\n    this.BarClick = () => {\n      this.setState({\n        chartType: 'Bar'\n      });\n    };\n\n    this.LineClick = () => {\n      this.setState({\n        chartType: 'Line'\n      });\n    };\n\n    this.PieClick = () => {\n      this.setState({\n        chartType: 'Pie'\n      });\n    };\n\n    this.state = {\n      chartData: {},\n      chartD: 'insect_count',\n      chartType: 'Bar',\n      startDate: null,\n      endDate: null,\n      focusedInput: null\n    };\n  }\n\n  componentWillMount() {\n    this.getChartData();\n  }\n\n  getChartData() {\n    //make ajax/axios call\n    this.setState({\n      chartData: {\n        labels: ['05-06', '05-07', '05-08', '05-09', '05-10', '05-11', '05-12', '05-13', '05-14'],\n        datasets: [{\n          label: 'Device_1',\n          data: [0, 5.75, 11.5, 17.25, 23],\n          backgroundColor: ['rgba(63, 63, 191, 0.6)', 'rgba(63, 63, 191, 0.6)', 'rgba(63, 63, 191, 0.6)', 'rgba(63, 63, 191, 0.6)', 'rgba(63, 63, 191, 0.6)']\n        }, {\n          label: 'Device_2',\n          data: [5, 10, 15, 20, 25],\n          backgroundColor: ['rgba(63, 191, 63, 0.6)', 'rgba(63, 191, 63, 0.6)', 'rgba(63, 191, 63, 0.6)', 'rgba(63, 191, 63, 0.6)', 'rgba(63, 191, 63, 0.6)']\n        }, {\n          label: 'Device_3',\n          data: [7, 9, 23, 2, 18],\n          backgroundColor: ['rgba(10, 255, 255, 0.6)', 'rgba(10, 255, 255, 0.6)', 'rgba(10, 255, 255, 0.6)', 'rgba(10, 255, 255, 0.6)', 'rgba(10, 255, 255, 0.6)']\n        }]\n      }\n    });\n  }\n\n  render() {\n    const falseFunc = () => false;\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \" Select a Chart's Data: \"), React.createElement(\"button\", {\n      onClick: this.BarClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Bar\"), React.createElement(\"button\", {\n      onClick: this.LineClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Line\"), React.createElement(\"button\", {\n      onClick: this.PieClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Pie\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \" Insect Count (per location) \"), React.createElement(Chart, {\n      chartData: this.state.chartData,\n      location: \"California\",\n      chartType: this.state.chartType,\n      temp: this.state.startDate,\n      chartD: this.state.chartD,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }));\n  }\n\n}, _temp);\nexport default App;","map":{"version":3,"sources":["/Users/johnshin/Projects/chart/src/App.js"],"names":["React","Chart","Calendar","DropDown","Toggle","DateRangePicker","SingleDatePicker","DayPickerRangeController","defaultOption","App","Component","constructor","BarClick","setState","chartType","LineClick","PieClick","state","chartData","chartD","startDate","endDate","focusedInput","componentWillMount","getChartData","labels","datasets","label","data","backgroundColor","render","falseFunc"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Chart from './components/Chart';\nimport Calendar from './components/Calendar';\nimport DropDown from 'react-dropdown';\nimport Toggle from 'react-toggle';\nimport \"react-toggle/style.css\";\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\n\nconst defaultOption =\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      chartData: {},\n      chartD: 'insect_count',\n      chartType:'Bar',\n      startDate: null,\n      endDate: null,\n      focusedInput: null\n    }\n  }\n\n  componentWillMount(){\n    this.getChartData();\n  }\n\n  getChartData(){\n    //make ajax/axios call\n\n      this.setState({\n        chartData:{\n            labels: ['05-06', '05-07', '05-08', '05-09', '05-10', '05-11', '05-12', '05-13', '05-14'],\n            datasets: [\n              {\n                label:'Device_1',\n                data:[\n                  0,\n                  5.75,\n                  11.5,\n                  17.25,\n                  23\n                ],\n                backgroundColor:[\n                  'rgba(63, 63, 191, 0.6)',\n                  'rgba(63, 63, 191, 0.6)',\n                  'rgba(63, 63, 191, 0.6)',\n                  'rgba(63, 63, 191, 0.6)',\n                  'rgba(63, 63, 191, 0.6)'\n                ]\n              },\n              {\n                label:'Device_2',\n                data:[\n                  5,\n                  10,\n                  15,\n                  20,\n                  25\n                ],\n                backgroundColor:[\n                  'rgba(63, 191, 63, 0.6)',\n                  'rgba(63, 191, 63, 0.6)',\n                  'rgba(63, 191, 63, 0.6)',\n                  'rgba(63, 191, 63, 0.6)',\n                  'rgba(63, 191, 63, 0.6)'\n                ]\n              },\n              {\n                label:'Device_3',\n                data:[\n                  7,\n                  9,\n                  23,\n                  2,\n                  18\n                ],\n                backgroundColor:[\n                  'rgba(10, 255, 255, 0.6)',\n                  'rgba(10, 255, 255, 0.6)',\n                  'rgba(10, 255, 255, 0.6)',\n                  'rgba(10, 255, 255, 0.6)',\n                  'rgba(10, 255, 255, 0.6)'\n                ]\n              }\n            ]\n        }\n      })\n\n  }\n  BarClick = () => {\n    this.setState({chartType:'Bar'});\n  }\n\n  LineClick = () => {\n    this.setState({chartType:'Line'});\n  }\n\n  PieClick = () => {\n    this.setState({chartType:'Pie'});\n  }\n\n  render() {\n    const falseFunc = ()=>false;\n    return (\n      <div>\n        <p> Select a Chart's Data: </p>\n        <button onClick={this.BarClick}>Bar</button>\n        <button onClick={this.LineClick}>Line</button>\n        <button onClick={this.PieClick}>Pie</button>\n\n\n        <p> Insect Count (per location) </p>\n        <Chart chartData={this.state.chartData} location=\"California\" chartType={this.state.chartType} temp={this.state.startDate} chartD={this.state.chartD}/>\n      </div>\n    );\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}