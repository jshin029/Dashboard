{"ast":null,"code":"var _jsxFileName = \"/Users/johnshin/Projects/chart/src/components/Chart.js\";\nimport React, { Component } from 'react';\nimport { Bar, Line, Pie } from 'react-chartjs-2';\nimport moment from 'moment';\nimport './Chart.css';\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: props.chartData,\n      error: null,\n      labels: ['1', '2', '3'],\n      datasets: [{}]\n    };\n  }\n\n  render() {\n    if (this.props.chartType == 'Bar' && this.props.units == 'Section3' && this.props.celsius) {\n      return React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(Bar, {\n        data: this.props.chartData,\n        options: {\n          legend: {\n            display: false\n          },\n          scales: {\n            xAxes: [{\n              type: 'time',\n              time: {\n                stepSize: 1,\n                unit: 'day',\n                format: 'MMM DD',\n                parser: 'MMM DD',\n                displayFormats: {\n                  month: 'MMM DD'\n                },\n                max: this.props.endDate,\n                min: this.props.startDate\n              }\n            }],\n            yAxes: [{\n              ticks: {\n                beginAtZero: true,\n                max: 400,\n                callback: function (value, index, values) {\n                  return value + \"° C\";\n                }\n              }\n            }]\n          },\n          maintainAspectRatio: false,\n          title: {\n            display: this.props.displayTitle,\n            text: this.props.title\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }));\n    } else if (this.props.chartType == 'Line' && this.props.units == 'Section3' && this.props.celsius) {\n      return React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Line, {\n        data: this.props.chartData,\n        options: {\n          legend: {\n            display: false\n          },\n          scales: {\n            xAxes: [{\n              type: 'time',\n              time: {\n                stepSize: 1,\n                unit: 'day',\n                format: 'MMM DD',\n                parser: 'MMM DD',\n                displayFormats: {\n                  month: 'MMM DD'\n                },\n                max: this.props.endDate,\n                min: this.props.startDate\n              }\n            }],\n            yAxes: [{\n              ticks: {\n                beginAtZero: true,\n                max: 400,\n                callback: function (value, index, values) {\n                  return value + \"° C\";\n                }\n              }\n            }]\n          },\n          maintainAspectRatio: false,\n          title: {\n            display: this.props.displayTitle,\n            text: this.props.title\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }));\n    } else if (this.props.chartType == 'Pie' && this.props.units == 'Section3' && this.props.celsius) {\n      return React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Pie, {\n        data: this.props.chartData,\n        options: {\n          legend: {\n            display: false\n          },\n          scales: {\n            xAxes: [{\n              type: 'time',\n              time: {\n                stepSize: 1,\n                unit: 'day',\n                format: 'MMM DD',\n                parser: 'MMM DD',\n                displayFormats: {\n                  month: 'MMM DD'\n                },\n                max: this.props.endDate,\n                min: this.props.startDate\n              }\n            }],\n            yAxes: [{\n              ticks: {\n                beginAtZero: true,\n                max: 400,\n                callback: function (value, index, values) {\n                  return value + \"° C\";\n                }\n              }\n            }]\n          },\n          maintainAspectRatio: false,\n          title: {\n            display: this.props.displayTitle,\n            text: this.props.title\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }));\n    } else if (this.props.chartType == 'Bar' && this.props.units == 'Section3' && !this.props.celsius) {\n      return React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(Bar, {\n        data: this.props.chartData,\n        options: {\n          legend: {\n            display: false\n          },\n          scales: {\n            xAxes: [{\n              type: 'time',\n              time: {\n                stepSize: 1,\n                unit: 'day',\n                format: 'MMM DD',\n                parser: 'MMM DD',\n                displayFormats: {\n                  month: 'MMM DD'\n                },\n                max: this.props.endDate,\n                min: this.props.startDate\n              }\n            }],\n            yAxes: [{\n              ticks: {\n                beginAtZero: true,\n                max: 400,\n                callback: function (value, index, values) {\n                  return value + \"° F\";\n                }\n              }\n            }]\n          },\n          maintainAspectRatio: false,\n          title: {\n            display: this.props.displayTitle,\n            text: this.props.title\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }));\n    } else if (this.props.chartType == 'Line' && this.props.units == 'Section3' && !this.props.celsius) {\n      return React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(Line, {\n        data: this.props.chartData,\n        options: {\n          legend: {\n            display: false\n          },\n          scales: {\n            xAxes: [{\n              type: 'time',\n              time: {\n                stepSize: 1,\n                unit: 'day',\n                format: 'MMM DD',\n                parser: 'MMM DD',\n                displayFormats: {\n                  month: 'MMM DD'\n                },\n                max: this.props.endDate,\n                min: this.props.startDate\n              }\n            }],\n            yAxes: [{\n              ticks: {\n                beginAtZero: true,\n                max: 400,\n                callback: function (value, index, values) {\n                  return value + \"° F\";\n                }\n              }\n            }]\n          },\n          maintainAspectRatio: false,\n          title: {\n            display: this.props.displayTitle,\n            text: this.props.title\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }));\n    } else if (this.props.chartType == 'Pie' && this.props.units == 'Section3' && !this.props.celsius) {\n      return React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(Pie, {\n        data: this.props.chartData,\n        options: {\n          legend: {\n            display: false\n          },\n          scales: {\n            xAxes: [{\n              type: 'time',\n              time: {\n                stepSize: 1,\n                unit: 'day',\n                format: 'MMM DD',\n                parser: 'MMM DD',\n                displayFormats: {\n                  month: 'MMM DD'\n                },\n                max: this.props.endDate,\n                min: this.props.startDate\n              }\n            }],\n            yAxes: [{\n              ticks: {\n                beginAtZero: true,\n                max: 400,\n                callback: function (value, index, values) {\n                  return value + \"° F\";\n                }\n              }\n            }]\n          },\n          maintainAspectRatio: false,\n          title: {\n            display: this.props.displayTitle,\n            text: this.props.title\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }));\n    } else if (this.props.chartType == 'Bar' && this.props.units == 'Section1') {\n      return React.createElement(\"div\", {\n        className: \"chart2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(Bar, {\n        data: this.props.chartData,\n        options: {\n          responsive: true,\n          scales: {\n            xAxes: [{\n              type: 'time',\n              time: {\n                stepSize: 1,\n                unit: this.props.time,\n                format: 'MMM DD',\n                parser: 'MMM DD',\n                displayFormats: {\n                  month: 'MMM DD'\n                },\n                max: this.props.endDate,\n                min: this.props.startDate\n              }\n            }],\n            yAxes: [{\n              ticks: {\n                beginAtZero: true\n              }\n            }]\n          },\n          maintainAspectRatio: false,\n          title: {\n            display: this.props.displayTitle,\n            text: this.props.title\n          },\n          legend: {\n            display: this.props.displayLegend,\n            position: 'right'\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }));\n    } else if (this.props.chartType == 'Line' && this.props.units == 'Section1') {\n      return React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, React.createElement(Line, {\n        data: this.props.chartData,\n        options: {\n          scales: {\n            xAxes: [{\n              type: 'time',\n              time: {\n                stepSize: 1,\n                unit: this.props.time,\n                format: 'MMM DD',\n                parser: 'MMM DD',\n                displayFormats: {\n                  month: 'MMM DD'\n                },\n                max: this.props.endDate,\n                min: this.props.startDate\n              }\n            }],\n            yAxes: [{\n              ticks: {\n                beginAtZero: true\n              }\n            }]\n          },\n          maintainAspectRatio: false,\n          title: {\n            display: this.props.displayTitle,\n            text: this.props.title\n          },\n          legend: {\n            display: this.props.displayLegend,\n            position: 'right'\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }));\n    } else if (this.props.chartType == 'Pie' && this.props.units == 'Section1') {\n      return React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, React.createElement(Pie, {\n        data: this.props.chartData,\n        options: {\n          scales: {\n            xAxes: [{\n              type: 'time',\n              time: {\n                stepSize: 1,\n                unit: this.props.time,\n                format: 'MMM DD',\n                parser: 'MMM DD',\n                displayFormats: {\n                  month: 'MMM DD'\n                },\n                max: this.props.endDate,\n                min: this.props.startDate\n              }\n            }],\n            yAxes: [{\n              ticks: {\n                beginAtZero: true\n              }\n            }]\n          },\n          maintainAspectRatio: false,\n          title: {\n            display: this.props.displayTitle,\n            text: this.props.title\n          },\n          legend: {\n            display: this.props.displayLegend,\n            position: 'right'\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }));\n    } else if (this.props.chartType == 'Bar') {\n      return React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, React.createElement(Bar, {\n        data: this.props.chartData,\n        options: {\n          scales: {\n            xAxes: [{\n              type: 'time',\n              time: {\n                stepSize: 1,\n                unit: 'day',\n                format: 'MMM DD',\n                parser: 'MMM DD',\n                displayFormats: {\n                  month: 'MMM DD'\n                },\n                max: this.props.endDate,\n                min: this.props.startDate\n              }\n            }],\n            yAxes: [{\n              ticks: {\n                beginAtZero: true\n              }\n            }]\n          },\n          maintainAspectRatio: false,\n          title: {\n            display: this.props.displayTitle,\n            text: this.props.title\n          },\n          legend: {\n            display: this.props.displayLegend,\n            position: 'right'\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }));\n    } else if (this.props.chartType == 'Line') {\n      return React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        },\n        __self: this\n      }, React.createElement(Line, {\n        data: this.props.chartData,\n        options: {\n          scales: {\n            xAxes: [{\n              type: 'time',\n              time: {\n                stepSize: 1,\n                unit: 'day',\n                format: 'MMM DD',\n                parser: 'MMM DD',\n                displayFormats: {\n                  month: 'MMM DD'\n                },\n                max: this.props.endDate,\n                min: this.props.startDate\n              }\n            }],\n            yAxes: [{\n              ticks: {\n                beginAtZero: true\n              }\n            }]\n          },\n          maintainAspectRatio: false,\n          title: {\n            display: this.props.displayTitle,\n            text: this.props.title\n          },\n          legend: {\n            display: this.props.displayLegend,\n            position: 'right'\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459\n        },\n        __self: this\n      }));\n    } else if (this.props.chartType == 'Pie') {\n      return React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499\n        },\n        __self: this\n      }, React.createElement(Pie, {\n        data: this.props.chartData,\n        options: {\n          scales: {\n            xAxes: [{\n              type: 'time',\n              time: {\n                stepSize: 1,\n                unit: 'day',\n                format: 'MMM DD',\n                parser: 'MMM DD',\n                displayFormats: {\n                  month: 'MMM DD'\n                },\n                max: this.props.endDate,\n                min: this.props.startDate\n              }\n            }],\n            yAxes: [{\n              ticks: {\n                beginAtZero: true\n              }\n            }]\n          },\n          maintainAspectRatio: false,\n          title: {\n            display: this.props.displayTitle,\n            text: this.props.title\n          },\n          legend: {\n            display: this.props.displayLegend,\n            position: 'right'\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nChart.defaultProps = {\n  displayTitle: true,\n  displayLegend: true,\n  legendPosition: 'right',\n  location: 'Location'\n};\n;\nexport default Chart;","map":{"version":3,"sources":["/Users/johnshin/Projects/chart/src/components/Chart.js"],"names":["React","Component","Bar","Line","Pie","moment","Chart","constructor","props","state","chartData","error","labels","datasets","render","chartType","units","celsius","legend","display","scales","xAxes","type","time","stepSize","unit","format","parser","displayFormats","month","max","endDate","min","startDate","yAxes","ticks","beginAtZero","callback","value","index","values","maintainAspectRatio","title","displayTitle","text","responsive","displayLegend","position","defaultProps","legendPosition","location"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Bar,Line,Pie} from 'react-chartjs-2';\nimport moment from 'moment';\nimport './Chart.css';\n\n\nclass Chart extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      chartData: props.chartData,\n      error: null,\n      labels: ['1', '2', '3'],\n      datasets: [{}],\n    }\n  }\n\n  static defaultProps = {\n    displayTitle:true,\n    displayLegend:true,\n    legendPosition:'right',\n    location:'Location'\n  }\n\n\n\n  render(){\n    if (this.props.chartType=='Bar' && this.props.units=='Section3' && this.props.celsius){\n      return (\n        <div className=\"chart\">\n          <Bar\n            data={this.props.chartData}\n            options={{\n              legend: {\n                display: false\n              },\n              scales: {\n                xAxes: [{\n                  type: 'time',\n                  time:\n                  {\n                    stepSize: 1,\n                    unit: 'day',\n                    format: 'MMM DD',\n                    parser: 'MMM DD',\n                    displayFormats: { month: 'MMM DD' },\n                    max: this.props.endDate,\n                    min: this.props.startDate\n                  }\n                }],\n                yAxes: [{\n                  ticks: {\n                    beginAtZero: true,\n                    max: 400,\n                    callback: function(value, index, values) {\n                      return value + \"° C\";\n                    }\n                  }\n                }]\n              },\n              maintainAspectRatio: false,\n              title:{\n                display:this.props.displayTitle,\n                text: this.props.title,\n              }\n            }}\n          />\n        </div>\n      );\n    }\n\n    else if  (this.props.chartType=='Line' && this.props.units=='Section3' && this.props.celsius){\n      return (\n        <div className=\"chart\">\n        <Line\n          data={this.props.chartData}\n          options={{\n            legend: {\n              display: false\n            },\n            scales: {\n              xAxes: [{\n                type: 'time',\n                time:\n                {\n                  stepSize: 1,\n                  unit: 'day',\n                  format: 'MMM DD',\n                  parser: 'MMM DD',\n                  displayFormats: { month: 'MMM DD' },\n                  max: this.props.endDate,\n                  min: this.props.startDate\n                }\n              }],\n              yAxes: [{\n                ticks: {\n                  beginAtZero: true,\n                  max: 400,\n                  callback: function(value, index, values) {\n                    return value + \"° C\";\n                  }\n                }\n              }]\n            },\n            maintainAspectRatio: false,\n            title:{\n              display:this.props.displayTitle,\n              text: this.props.title,\n            }\n          }}\n        />\n        </div>\n      );\n    }\n\n    else if  (this.props.chartType=='Pie' && this.props.units=='Section3' && this.props.celsius){\n      return (\n        <div className=\"chart\">\n        <Pie\n          data={this.props.chartData}\n          options={{\n            legend: {\n              display: false\n            },\n            scales: {\n              xAxes: [{\n                type: 'time',\n                time:\n                {\n                  stepSize: 1,\n                  unit: 'day',\n                  format: 'MMM DD',\n                  parser: 'MMM DD',\n                  displayFormats: { month: 'MMM DD' },\n                  max: this.props.endDate,\n                  min: this.props.startDate\n                }\n              }],\n              yAxes: [{\n                ticks: {\n                  beginAtZero: true,\n                  max: 400,\n                  callback: function(value, index, values) {\n                    return value + \"° C\";\n                  }\n                }\n              }]\n            },\n            maintainAspectRatio: false,\n            title:{\n              display:this.props.displayTitle,\n              text: this.props.title,\n            }\n          }}\n        />\n        </div>\n      );\n    }\n    else if (this.props.chartType=='Bar' && this.props.units=='Section3' && !this.props.celsius){\n      return (\n        <div className=\"chart\">\n          <Bar\n            data={this.props.chartData}\n            options={{\n              legend: {\n                display: false\n              },\n              scales: {\n                xAxes: [{\n                  type: 'time',\n                  time:\n                  {\n                    stepSize: 1,\n                    unit: 'day',\n                    format: 'MMM DD',\n                    parser: 'MMM DD',\n                    displayFormats: { month: 'MMM DD' },\n                    max: this.props.endDate,\n                    min: this.props.startDate\n                  }\n                }],\n                yAxes: [{\n                  ticks: {\n                    beginAtZero: true,\n                    max: 400,\n                    callback: function(value, index, values) {\n                      return value + \"° F\";\n                    }\n                  }\n                }]\n              },\n              maintainAspectRatio: false,\n              title:{\n                display:this.props.displayTitle,\n                text: this.props.title,\n              }\n            }}\n          />\n        </div>\n      );\n    }\n\n    else if  (this.props.chartType=='Line' && this.props.units=='Section3' && !this.props.celsius){\n      return (\n        <div className=\"chart\">\n        <Line\n          data={this.props.chartData}\n          options={{\n            legend: {\n              display: false\n            },\n            scales: {\n              xAxes: [{\n                type: 'time',\n                time:\n                {\n                  stepSize: 1,\n                  unit: 'day',\n                  format: 'MMM DD',\n                  parser: 'MMM DD',\n                  displayFormats: { month: 'MMM DD' },\n                  max: this.props.endDate,\n                  min: this.props.startDate\n                }\n              }],\n              yAxes: [{\n                ticks: {\n                  beginAtZero: true,\n                  max: 400,\n                  callback: function(value, index, values) {\n                    return value + \"° F\";\n                  }\n                }\n              }]\n            },\n            maintainAspectRatio: false,\n            title:{\n              display:this.props.displayTitle,\n              text: this.props.title,\n            }\n          }}\n        />\n        </div>\n      );\n    }\n\n    else if  (this.props.chartType=='Pie' && this.props.units=='Section3' && !this.props.celsius){\n      return (\n        <div className=\"chart\">\n        <Pie\n          data={this.props.chartData}\n          options={{\n            legend: {\n              display: false\n            },\n            scales: {\n              xAxes: [{\n                type: 'time',\n                time:\n                {\n                  stepSize: 1,\n                  unit: 'day',\n                  format: 'MMM DD',\n                  parser: 'MMM DD',\n                  displayFormats: { month: 'MMM DD' },\n                  max: this.props.endDate,\n                  min: this.props.startDate\n                }\n              }],\n              yAxes: [{\n                ticks: {\n                  beginAtZero: true,\n                  max: 400,\n                  callback: function(value, index, values) {\n                    return value + \"° F\";\n                  }\n                }\n              }]\n            },\n            maintainAspectRatio: false,\n            title:{\n              display:this.props.displayTitle,\n              text: this.props.title,\n            }\n          }}\n        />\n        </div>\n      );\n    }\n\n    else if (this.props.chartType=='Bar' && this.props.units=='Section1'){\n      return (\n        <div className=\"chart2\">\n          <Bar\n            data={this.props.chartData}\n            options={{\n              responsive: true,\n              scales: {\n                xAxes: [{\n                  type: 'time',\n                  time:\n                  {\n                    stepSize: 1,\n                    unit: this.props.time,\n                    format: 'MMM DD',\n                    parser: 'MMM DD',\n                    displayFormats: { month: 'MMM DD' },\n                    max: this.props.endDate,\n                    min: this.props.startDate\n                  }\n                }],\n                yAxes: [{\n                  ticks: {\n                    beginAtZero: true\n                  }\n                }]\n              },\n              maintainAspectRatio: false,\n              title:{\n                display:this.props.displayTitle,\n                text: this.props.title,\n              },\n              legend:{\n                display:this.props.displayLegend,\n                position:'right'\n              }\n            }}\n          />\n        </div>\n      );\n  }\n\n    else if (this.props.chartType=='Line' && this.props.units=='Section1'){\n      return (\n        <div className=\"chart\">\n        <Line\n          data={this.props.chartData}\n          options={{\n            scales: {\n              xAxes: [{\n                type: 'time',\n                time:\n                {\n                  stepSize: 1,\n                  unit: this.props.time,\n                  format: 'MMM DD',\n                  parser: 'MMM DD',\n                  displayFormats: { month: 'MMM DD' },\n                  max: this.props.endDate,\n                  min: this.props.startDate\n                }\n              }],\n              yAxes: [{\n                ticks: {\n                  beginAtZero: true\n                }\n              }]\n            },\n            maintainAspectRatio: false,\n            title:{\n              display:this.props.displayTitle,\n              text: this.props.title,\n            },\n            legend:{\n              display:this.props.displayLegend,\n              position:'right'\n            }\n          }}\n        />\n        </div>\n      );\n  }\n\n  else if (this.props.chartType=='Pie' && this.props.units=='Section1'){\n    return (\n      <div className=\"chart\">\n      <Pie\n        data={this.props.chartData}\n        options={{\n          scales: {\n            xAxes: [{\n              type: 'time',\n              time:\n              {\n                stepSize: 1,\n                unit: this.props.time,\n                format: 'MMM DD',\n                parser: 'MMM DD',\n                displayFormats: { month: 'MMM DD' },\n                max: this.props.endDate,\n                min: this.props.startDate\n              }\n            }],\n            yAxes: [{\n              ticks: {\n                beginAtZero: true\n              }\n            }]\n          },\n          maintainAspectRatio: false,\n          title:{\n            display:this.props.displayTitle,\n            text: this.props.title,\n          },\n          legend:{\n            display:this.props.displayLegend,\n            position:'right'\n          }\n        }}\n      />\n      </div>\n    );\n  }\n\n    else if (this.props.chartType=='Bar'){\n      return (\n        <div className=\"chart\">\n          <Bar\n            data={this.props.chartData}\n            options={{\n              scales: {\n                xAxes: [{\n                  type: 'time',\n                  time:\n                  {\n                    stepSize: 1,\n                    unit: 'day',\n                    format: 'MMM DD',\n                    parser: 'MMM DD',\n                    displayFormats: { month: 'MMM DD' },\n                    max: this.props.endDate,\n                    min: this.props.startDate\n                  }\n                }],\n                yAxes: [{\n                  ticks: {\n                    beginAtZero: true\n                  }\n                }]\n              },\n              maintainAspectRatio: false,\n              title:{\n                display:this.props.displayTitle,\n                text: this.props.title,\n              },\n              legend:{\n                display:this.props.displayLegend,\n                position:'right'\n              }\n            }}\n          />\n        </div>\n      );\n  }\n\n    else if (this.props.chartType=='Line'){\n      return (\n        <div className=\"chart\">\n        <Line\n          data={this.props.chartData}\n          options={{\n            scales: {\n              xAxes: [{\n                type: 'time',\n                time:\n                {\n                  stepSize: 1,\n                  unit: 'day',\n                  format: 'MMM DD',\n                  parser: 'MMM DD',\n                  displayFormats: { month: 'MMM DD' },\n                  max: this.props.endDate,\n                  min: this.props.startDate\n                }\n              }],\n              yAxes: [{\n                ticks: {\n                  beginAtZero: true\n                }\n              }]\n            },\n            maintainAspectRatio: false,\n            title:{\n              display:this.props.displayTitle,\n              text: this.props.title,\n            },\n            legend:{\n              display:this.props.displayLegend,\n              position:'right'\n            }\n          }}\n        />\n        </div>\n      );\n  }\n\n  else if (this.props.chartType=='Pie'){\n    return (\n      <div className=\"chart\">\n      <Pie\n        data={this.props.chartData}\n        options={{\n          scales: {\n            xAxes: [{\n              type: 'time',\n              time:\n              {\n                stepSize: 1,\n                unit: 'day',\n                format: 'MMM DD',\n                parser: 'MMM DD',\n                displayFormats: { month: 'MMM DD' },\n                max: this.props.endDate,\n                min: this.props.startDate\n              }\n            }],\n            yAxes: [{\n              ticks: {\n                beginAtZero: true\n              }\n            }]\n          },\n          maintainAspectRatio: false,\n          title:{\n            display:this.props.displayTitle,\n            text: this.props.title,\n          },\n          legend:{\n            display:this.props.displayLegend,\n            position:'right'\n          }\n        }}\n      />\n      </div>\n    );\n  }\n}\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}