{"ast":null,"code":"var _jsxFileName = \"/Users/johnshin/Projects/Dashboard/front-end/src/components/Section2.js\";\nimport React, { component } from 'react';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport Chart from './Chart';\nimport Calendar from './Calendar';\nimport Menu from './Menu';\nimport moment from 'moment';\nimport './section.css';\nconst options = [{\n  value: 'Bar',\n  label: 'Bar'\n}, {\n  value: 'Line',\n  label: 'Line'\n}, {\n  value: 'Pie',\n  label: 'Pie'\n}];\nconst options2 = [{\n  value: 'Sensor_1',\n  label: 'Sensor_1'\n}, {\n  value: 'Sensor_2',\n  label: 'Sensor_2'\n}];\n\nclass Section2 extends React.Component {\n  constructor() {\n    super();\n\n    this.graphClick = graph => {\n      this.setState({\n        chartType: graph\n      });\n    };\n\n    this.location = loc => {\n      if (loc === 'Sensor_1') {\n        this.setState({\n          device: 'Sensor_1',\n          chartData: {\n            labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n            datasets: [{\n              label: 'Insect Count',\n              data: [1, 4, 8, 2, 20, 23, 14, 9],\n              backgroundColor: 'rgba(63, 63, 191, 0.6)'\n            }]\n          }\n        });\n      } else if (loc === 'Sensor_2') {\n        this.setState({\n          device: 'Sensor_2',\n          chartData: {\n            labels: [\"May-05\", \"May-06\", \"May-07\", \"May-08\", \"May-09\", \"May-10\", \"May-11\", \"May-12\"],\n            datasets: [{\n              label: 'Insect Count',\n              data: [2, 4, 6, 8, 10, 12, 14, 16],\n              backgroundColor: 'rgba(63, 63, 191, 0.6)'\n            }]\n          }\n        });\n      }\n    };\n\n    this.range = (start, end) => {\n      if (start != null && end != null) {\n        this.setState({\n          startDate: start.format('MMM-DD'),\n          endDate: end.format('MMM-DD')\n        });\n      }\n    };\n\n    this.Day = () => {\n      this.setState({\n        time: 'day'\n      });\n    };\n\n    this.Week = () => {\n      this.setState({\n        time: 'week'\n      });\n    };\n\n    this.Month = () => {\n      this.setState({\n        time: 'month'\n      });\n    };\n\n    this.Year = () => {\n      this.setState({\n        time: 'year'\n      });\n    };\n\n    this.state = {\n      chartData: {},\n      chartType: 'Bar',\n      time: 'day',\n      startDate: '',\n      endDate: '',\n      device: 'Sensor_1',\n      units: 'Section1',\n      focusedInput: null\n    };\n  }\n\n  componentWillMount() {\n    this.getChartData();\n  }\n\n  getChartData() {\n    //make ajax/axios call\n    this.setState({\n      chartData: {\n        labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n        datasets: [{\n          label: 'Insect Count',\n          data: [1, 4, 8, 2, 20, 23, 14, 9],\n          backgroundColor: 'rgba(63, 63, 191, 0.6)'\n        }]\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Insect Count (per device)\")), React.createElement(\"div\", {\n      className: \"outline2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inner1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Select a device\")), React.createElement(\"div\", {\n      className: \"inner2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      location: this.location,\n      options: options2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"timeframe\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inner1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Select a time frame\")), React.createElement(\"div\", {\n      className: \"inner2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Calendar, {\n      range: this.range,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inner1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Chart type\")), React.createElement(\"div\", {\n      className: \"inner2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      graphClick: this.graphClick,\n      options: options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"day\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inner1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"View by\")), React.createElement(\"div\", {\n      className: \"inner2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"date1\",\n      onClick: this.Day,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Day\"), React.createElement(\"button\", {\n      className: \"date\",\n      onClick: this.Week,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Week\"), React.createElement(\"button\", {\n      className: \"date\",\n      onClick: this.Month,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Month\"), React.createElement(\"button\", {\n      className: \"date\",\n      onClick: this.Year,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Year\")))), React.createElement(\"div\", {\n      className: \"graph\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      chartData: this.state.chartData,\n      title: this.state.device,\n      chartType: this.state.chartType,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate,\n      time: this.state.time,\n      units: this.state.units,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }))));\n  }\n\n}\n\n;\nexport default Section2;","map":{"version":3,"sources":["/Users/johnshin/Projects/Dashboard/front-end/src/components/Section2.js"],"names":["React","component","DateRangePicker","SingleDatePicker","DayPickerRangeController","Chart","Calendar","Menu","moment","options","value","label","options2","Section2","Component","constructor","graphClick","graph","setState","chartType","location","loc","device","chartData","labels","datasets","data","backgroundColor","range","start","end","startDate","format","endDate","Day","time","Week","Month","Year","state","units","focusedInput","componentWillMount","getChartData","render"],"mappings":"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","sourcesContent":["import React, {component} from 'react';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport Chart from './Chart';\nimport Calendar from './Calendar';\nimport Menu from './Menu';\nimport moment from 'moment';\nimport './section.css';\n\nconst options = [\n  {value: 'Bar', label: 'Bar'},\n  {value: 'Line', label: 'Line'},\n  {value: 'Pie', label: 'Pie'}\n]\n\nconst options2 = [\n  {value: 'Sensor_1', label: 'Sensor_1'},\n  {value: 'Sensor_2', label: 'Sensor_2'}\n]\n\n\nclass Section2 extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      chartData: {} ,\n      chartType:'Bar',\n      time: 'day',\n      startDate: '',\n      endDate: '',\n      device: 'Sensor_1',\n      units: 'Section1',\n      focusedInput: null\n    }\n  }\n\n    componentWillMount() {\n      this.getChartData();\n    }\n\n    getChartData () {\n      //make ajax/axios call\n        this.setState({\n\n          chartData:{\n              labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n              datasets: [\n                {\n                  label:'Insect Count',\n                  data:[1, 4, 8, 2, 20, 23, 14, 9],\n                  backgroundColor:'rgba(63, 63, 191, 0.6)'\n                }\n              ]\n          }\n        });\n\n    }\n\n    graphClick = (graph) => {\n      this.setState({chartType: graph});\n    }\n\n    location = (loc) => {\n      if (loc === 'Sensor_1'){\n        this.setState({\n          device:'Sensor_1',\n          chartData:{\n              labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n              datasets: [\n                {\n                  label:'Insect Count',\n                  data:[1, 4, 8, 2, 20, 23, 14, 9],\n                  backgroundColor:'rgba(63, 63, 191, 0.6)'\n                }\n              ]\n          }\n\n        });\n      }\n      else if (loc === 'Sensor_2'){\n        this.setState({\n          device:'Sensor_2',\n          chartData:{\n              labels: [\"May-05\", \"May-06\", \"May-07\", \"May-08\", \"May-09\", \"May-10\", \"May-11\", \"May-12\"],\n              datasets: [\n                {\n                  label:'Insect Count',\n                  data:[2, 4, 6, 8, 10, 12, 14, 16],\n                  backgroundColor: 'rgba(63, 63, 191, 0.6)'\n                }\n              ]\n          }\n        });\n      }\n    }\n\n    range = (start, end) => {\n      if (start != null && end != null){\n        this.setState({\n          startDate: start.format('MMM-DD'),\n          endDate: end.format('MMM-DD')\n        })\n\n      }\n    }\n\n    Day = () => {\n      this.setState({time: 'day'});\n    }\n\n    Week = () => {\n      this.setState({time: 'week'});\n    }\n\n    Month = () => {\n      this.setState({time: 'month'});\n    }\n\n    Year = () => {\n      this.setState({time: 'year'});\n    }\n\n\nrender() {\n  return (\n    <div className=\"block\">\n        <div className=\"outline\">\n            <h2 className=\"title\">Insect Count (per device)</h2>\n        </div>\n        <div className=\"outline2\">\n        <div className=\"wrapper\">\n          <div className=\"location\">\n            <div className=\"inner1\">\n              <p className=\"text\">Select a device</p>\n            </div>\n            <div className=\"inner2\">\n              <Menu location={this.location} options={options2}/>\n            </div>\n          </div>\n          <div className=\"timeframe\">\n            <div className=\"inner1\">\n              <p className=\"text\">Select a time frame</p>\n            </div>\n            <div className=\"inner2\">\n              <Calendar range={this.range}/>\n            </div>\n          </div>\n          <div className=\"type\">\n            <div className=\"inner1\">\n              <p className=\"text\">Chart type</p>\n            </div>\n            <div className=\"inner2\">\n              <Menu graphClick={this.graphClick} options={options}/>\n            </div>\n          </div>\n          <div className=\"day\">\n            <div className=\"inner1\">\n              <p className=\"text\">View by</p>\n            </div>\n              <div className=\"inner2\">\n                <button className=\"date1\" onClick={this.Day}>Day</button>\n                <button className=\"date\" onClick={this.Week}>Week</button>\n                <button className=\"date\" onClick={this.Month}>Month</button>\n                <button className=\"date\" onClick={this.Year}>Year</button>\n              </div>\n          </div>\n        </div>\n        <div className=\"graph\">\n          <Chart chartData = {this.state.chartData} title={this.state.device} chartType={this.state.chartType} startDate={this.state.startDate} endDate={this.state.endDate} time={this.state.time} units={this.state.units}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n};\n\nexport default Section2;\n"]},"metadata":{},"sourceType":"module"}