{"ast":null,"code":"var _jsxFileName = \"/Users/johnshin/Projects/chart/src/App.js\";\nimport React from 'react';\nimport Chart from './components/Chart';\nimport Calendar from './components/Calendar';\nimport Menu from './components/Menu';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.BarClick = () => {\n      this.setState({\n        chartType: 'Bar'\n      });\n    };\n\n    this.LineClick = () => {\n      this.setState({\n        chartType: 'Line'\n      });\n    };\n\n    this.PieClick = () => {\n      this.setState({\n        chartType: 'Pie'\n      });\n    };\n\n    this.location1 = () => {\n      this.setState({\n        location: 'Cupertino',\n        chartData: {\n          labels: ['09-06', '09-07', '09-08', '09-09', '09-10', '09-11', '09-12', '09-13'],\n          datasets: [{\n            label: 'Device_1',\n            data: [1, 4, 8, 2, 20, 23, 14, 9],\n            backgroundColor: 'rgba(63, 63, 191, 0.6)'\n          }, {\n            label: 'Device_2',\n            data: [23, 17, 30, 5, 3, 2, 13, 15],\n            backgroundColor: 'rgba(255, 35, 35, 0.6)'\n          }]\n        }\n      });\n    };\n\n    this.location2 = () => {\n      this.setState({\n        location: 'Riverside',\n        chartData: {\n          labels: ['05-06', '05-07', '05-08', '05-09', '05-10', '05-11', '05-12', '05-13'],\n          datasets: [{\n            label: 'Device_1',\n            data: [2, 4, 6, 8, 10, 12, 14, 16],\n            backgroundColor: 'rgba(63, 63, 191, 0.6)'\n          }, {\n            label: 'Device_2',\n            data: [1, 3, 5, 7, 9, 11, 13, 15],\n            backgroundColor: 'rgba(255, 35, 35, 0.6)'\n          }]\n        }\n      });\n    };\n\n    this.location3 = () => {\n      this.setState({\n        location: 'Irvine',\n        chartData: {\n          labels: ['03-01', '03-02', '03-03', '03-04', '03-05', '03-06', '03-07', '03-08'],\n          datasets: [{\n            label: 'Device_1',\n            data: [0, 5, 10, 15, 20, 15, 10, 5],\n            backgroundColor: 'rgba(63, 63, 191, 0.6)'\n          }]\n        }\n      });\n    };\n\n    this.range = () => {\n      var x = null;\n      var temp = [];\n      var data = this.state.chartData.datasets[0].data;\n      var labels = this.state.chartData.labels; //filling temp array with current states date\n\n      for (var i = 0; i < this.state.chartData.labels.length; ++i) {\n        x = this.state.chartData.labels[i];\n        x = x.replace('-', '');\n        x = parseInt(x);\n        temp.push(x);\n      }\n\n      var temp2 = [];\n      var temp3 = [];\n      var a = '0907';\n      a = parseInt(a);\n      var b = '0909';\n      b = parseInt(b); //only getting the dates between the user's input\n\n      for (var i = 0; i < temp.length; ++i) {\n        if (temp[i] >= a && temp[i] <= b) {\n          temp3.push(i);\n        }\n      }\n\n      for (var i = 0; i < temp3.length; ++i) {\n        temp2.push(labels[temp3[i]]); //labels for all devices\n      }\n\n      var newData = [];\n      var deviceData = []; //parses data from each device based on user's range\n\n      for (var i = 0; i < this.state.chartData.datasets.length; ++i) {\n        for (var j = 0; j < temp3.length; ++j) {\n          newData.push(this.state.chartData.datasets[i].data[temp3[j]]); //data per device\n        }\n\n        deviceData.push(newData);\n        newData = [];\n      }\n\n      console.log(deviceData);\n      this.setState({\n        chartExtract: {\n          labels: temp2,\n          datasets: [{\n            label: 'Device_1',\n            data: deviceData[0],\n            backgroundColor: 'rgba(63, 63, 191, 0.6)'\n          }, {\n            label: 'Device_2',\n            data: deviceData[1],\n            backgroundColor: 'rgba(255, 35, 35, 0.6)'\n          }]\n        }\n      });\n    };\n\n    this.state = {\n      chartData: {},\n      chartExtract: {},\n      chartType: 'Bar',\n      test: null,\n      location: 'Cupertino',\n      startDate: null,\n      endDate: null,\n      focusedInput: null\n    };\n  }\n\n  componentWillMount() {\n    this.getChartData();\n  }\n\n  getChartData() {\n    //make ajax/axios call\n    this.setState({\n      chartData: {\n        labels: ['09-06', '09-07', '09-08', '09-09', '09-10', '09-11', '09-12', '09-13'],\n        datasets: [{\n          label: 'Device_1',\n          data: [1, 4, 8, 2, 20, 23, 14, 9],\n          backgroundColor: 'rgba(63, 63, 191, 0.6)'\n        }, {\n          label: 'Device_2',\n          data: [23, 17, 30, 5, 3, 2, 13, 15],\n          backgroundColor: 'rgba(255, 35, 35, 0.6)'\n        }]\n      }\n    });\n  }\n\n  render() {\n    const falseFunc = () => false;\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \" Select a Chart's Data \"), React.createElement(\"button\", {\n      onClick: this.BarClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Bar\"), React.createElement(\"button\", {\n      onClick: this.LineClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Line\"), React.createElement(\"button\", {\n      onClick: this.PieClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"Pie\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \" Insect Count (per location) \"), React.createElement(\"button\", {\n      onClick: this.location1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Cupertino\"), React.createElement(\"button\", {\n      onClick: this.location2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Riverside\"), React.createElement(\"button\", {\n      onClick: this.location3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Irvine\"), React.createElement(\"button\", {\n      onClick: this.range,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"range\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \" Pick a date \"), React.createElement(Calendar, {\n      range: this.range,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(Chart, {\n      chartData: this.state.chartExtract,\n      location: this.state.location,\n      chartType: this.state.chartType,\n      temp: this.state.startDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/johnshin/Projects/chart/src/App.js"],"names":["React","Chart","Calendar","Menu","DateRangePicker","SingleDatePicker","DayPickerRangeController","App","Component","constructor","BarClick","setState","chartType","LineClick","PieClick","location1","location","chartData","labels","datasets","label","data","backgroundColor","location2","location3","range","x","temp","state","i","length","replace","parseInt","push","temp2","temp3","a","b","newData","deviceData","j","console","log","chartExtract","test","startDate","endDate","focusedInput","componentWillMount","getChartData","render","falseFunc"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Chart from './components/Chart';\nimport Calendar from './components/Calendar';\nimport Menu from './components/Menu';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\n\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      chartData: {},\n      chartExtract: {},\n      chartType:'Bar',\n      test: null,\n      location: 'Cupertino',\n      startDate: null,\n      endDate: null,\n      focusedInput: null\n    }\n  }\n\n  componentWillMount() {\n    this.getChartData();\n  }\n\n  getChartData () {\n    //make ajax/axios call\n      this.setState({\n\n        chartData:{\n            labels: ['09-06', '09-07', '09-08', '09-09', '09-10', '09-11', '09-12', '09-13'],\n            datasets: [\n              {\n                label:'Device_1',\n                data:[1, 4, 8, 2, 20, 23, 14, 9],\n                backgroundColor: 'rgba(63, 63, 191, 0.6)'\n\n              },\n              {\n                label:'Device_2',\n                data:[23, 17, 30, 5, 3, 2, 13, 15],\n                backgroundColor: 'rgba(255, 35, 35, 0.6)'\n              }\n            ]\n        }\n      });\n\n  }\n  BarClick = () => {\n    this.setState({chartType:'Bar'});\n  }\n\n  LineClick = () => {\n    this.setState({chartType:'Line'});\n  }\n\n  PieClick = () => {\n    this.setState({chartType:'Pie'});\n  }\n\n  location1 = () => {\n    this.setState({\n      location:'Cupertino',\n      chartData:{\n          labels: ['09-06', '09-07', '09-08', '09-09', '09-10', '09-11', '09-12', '09-13'],\n          datasets: [\n            {\n              label:'Device_1',\n              data:[1, 4, 8, 2, 20, 23, 14, 9],\n              backgroundColor:'rgba(63, 63, 191, 0.6)'\n            },\n            {\n              label:'Device_2',\n              data:[23, 17, 30, 5, 3, 2, 13, 15],\n              backgroundColor: 'rgba(255, 35, 35, 0.6)'\n            }\n          ]\n      }\n\n    });\n  }\n\n  location2 = () => {\n    this.setState({\n      location:'Riverside',\n      chartData:{\n          labels: ['05-06', '05-07', '05-08', '05-09', '05-10', '05-11', '05-12', '05-13'],\n          datasets: [\n            {\n              label:'Device_1',\n              data:[2, 4, 6, 8, 10, 12, 14, 16],\n              backgroundColor: 'rgba(63, 63, 191, 0.6)'\n            },\n            {\n              label:'Device_2',\n              data:[1, 3, 5, 7, 9, 11, 13, 15],\n              backgroundColor: 'rgba(255, 35, 35, 0.6)'\n            }\n          ]\n      }\n    });\n  }\n\n  location3 = () => {\n    this.setState({\n      location:'Irvine',\n      chartData:{\n          labels: ['03-01', '03-02', '03-03', '03-04', '03-05', '03-06', '03-07', '03-08'],\n          datasets: [\n            {\n              label:'Device_1',\n              data:[0, 5, 10, 15, 20, 15, 10, 5],\n              backgroundColor: 'rgba(63, 63, 191, 0.6)'\n            }\n          ]\n      }\n    });\n  }\n\n  range = () => {\n      var x = null;\n      var temp = [];\n      var data = this.state.chartData.datasets[0].data;\n      var labels = this.state.chartData.labels;\n      //filling temp array with current states date\n      for (var i = 0; i < this.state.chartData.labels.length; ++i){\n        x =  this.state.chartData.labels[i];\n        x = x.replace('-','');\n        x = parseInt(x);\n        temp.push(x);\n      }\n      var temp2 = [];\n      var temp3 = [];\n      var a = '0907';\n      a = parseInt(a);\n      var b = '0909';\n      b = parseInt(b);\n      //only getting the dates between the user's input\n      for (var i = 0; i < temp.length; ++i){\n        if (temp[i] >= a && temp[i] <= b){\n          temp3.push(i);\n        }\n      }\n\n      for (var i = 0; i < temp3.length; ++i){\n        temp2.push(labels[temp3[i]]); //labels for all devices\n      }\n\n      var newData = [];\n      var deviceData = [];\n\n      //parses data from each device based on user's range\n      for (var i = 0; i < this.state.chartData.datasets.length; ++i){\n        for (var j = 0; j < temp3.length; ++j){\n          newData.push(this.state.chartData.datasets[i].data[temp3[j]]); //data per device\n        }\n        deviceData.push(newData);\n        newData = [];\n      }\n\n      console.log(deviceData);\n\n      this.setState({chartExtract: {\n          labels: temp2,\n          datasets: [\n            {\n              label: 'Device_1',\n              data: deviceData[0],\n              backgroundColor: 'rgba(63, 63, 191, 0.6)'\n            },\n            {\n              label: 'Device_2',\n              data: deviceData[1],\n              backgroundColor: 'rgba(255, 35, 35, 0.6)'\n            }\n          ]\n        }});\n}\n\n  render() {\n    const falseFunc = ()=>false;\n    return (\n      <div>\n        <p> Select a Chart's Data </p>\n        <button onClick={this.BarClick}>Bar</button>\n        <button onClick={this.LineClick}>Line</button>\n        <button onClick={this.PieClick}>Pie</button>\n\n\n        <p> Insect Count (per location) </p>\n        <button onClick={this.location1}>Cupertino</button>\n        <button onClick={this.location2}>Riverside</button>\n        <button onClick={this.location3}>Irvine</button>\n\n        <button onClick={this.range}>range</button>\n\n        <p> Pick a date </p>\n        <Calendar range={this.range}/>\n\n        <Chart chartData={this.state.chartExtract} location={this.state.location} chartType={this.state.chartType} temp={this.state.startDate} />\n      </div>\n    );\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}