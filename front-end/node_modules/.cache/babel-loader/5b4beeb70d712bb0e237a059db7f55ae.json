{"ast":null,"code":"var _jsxFileName = \"/Users/johnshin/Projects/chart/src/App.js\";\nimport React from 'react';\nimport Chart from './components/Chart';\nimport Calendar from './components/Calendar';\nimport Menu from './components/Menu';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.BarClick = () => {\n      this.setState({\n        chartType: 'Bar'\n      });\n    };\n\n    this.LineClick = () => {\n      this.setState({\n        chartType: 'Line'\n      });\n    };\n\n    this.PieClick = () => {\n      this.setState({\n        chartType: 'Pie'\n      });\n    };\n\n    this.location1 = () => {\n      this.setState({\n        location: 'Cupertino'\n      });\n    };\n\n    this.location2 = () => {\n      this.setState({\n        location: 'Riverside'\n      });\n    };\n\n    this.location3 = () => {\n      this.setState({\n        location: 'Irvine'\n      });\n    };\n\n    this.state = {\n      chartData: {},\n      chartD: 'insect_count',\n      chartType: 'Bar',\n      location: null,\n      startDate: null,\n      endDate: null,\n      focusedInput: null\n    };\n  }\n\n  componentDidMount() {\n    this.getChartData();\n  }\n\n  getChartData() {\n    //make ajax/axios call\n    if (this.state.location == 'Cupertino') {\n      this.setState({\n        chartData: {\n          labels: ['05-06', '05-07', '05-08', '05-09', '05-10', '05-11', '05-12', '05-13', '05-14'],\n          datasets: [{\n            label: 'Device_1',\n            data: [0, 5.75, 11.5, 17.25, 23],\n            backgroundColor: ['rgba(63, 63, 191, 0.6)', 'rgba(63, 63, 191, 0.6)', 'rgba(63, 63, 191, 0.6)', 'rgba(63, 63, 191, 0.6)', 'rgba(63, 63, 191, 0.6)']\n          }, {\n            label: 'Device_2',\n            data: [5, 10, 15, 20, 25],\n            backgroundColor: ['rgba(63, 191, 63, 0.6)', 'rgba(63, 191, 63, 0.6)', 'rgba(63, 191, 63, 0.6)', 'rgba(63, 191, 63, 0.6)', 'rgba(63, 191, 63, 0.6)']\n          }, {\n            label: 'Device_3',\n            data: [7, 9, 23, 2, 18],\n            backgroundColor: ['rgba(10, 255, 255, 0.6)', 'rgba(10, 255, 255, 0.6)', 'rgba(10, 255, 255, 0.6)', 'rgba(10, 255, 255, 0.6)', 'rgba(10, 255, 255, 0.6)']\n          }]\n        }\n      });\n    } else if (this.state.location == 'Riverside') {}\n  }\n\n  render() {\n    const falseFunc = () => false;\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \" Select a Chart's Data: \"), React.createElement(\"button\", {\n      onClick: this.BarClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Bar\"), React.createElement(\"button\", {\n      onClick: this.LineClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Line\"), React.createElement(\"button\", {\n      onClick: this.PieClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Pie\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \" Insect Count (per location) \"), React.createElement(\"button\", {\n      onClick: this.location1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Cupertino\"), React.createElement(\"button\", {\n      onClick: this.location2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Riverside\"), React.createElement(\"button\", {\n      onClick: this.location3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Irvine\"), React.createElement(Chart, {\n      chartData: this.state.chartData,\n      location: \"California\",\n      chartType: this.state.chartType,\n      temp: this.state.startDate,\n      chartD: this.state.chartD,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/johnshin/Projects/chart/src/App.js"],"names":["React","Chart","Calendar","Menu","DateRangePicker","SingleDatePicker","DayPickerRangeController","App","Component","constructor","BarClick","setState","chartType","LineClick","PieClick","location1","location","location2","location3","state","chartData","chartD","startDate","endDate","focusedInput","componentDidMount","getChartData","labels","datasets","label","data","backgroundColor","render","falseFunc"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Chart from './components/Chart';\nimport Calendar from './components/Calendar';\nimport Menu from './components/Menu';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\n\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      chartData: {},\n      chartD: 'insect_count',\n      chartType:'Bar',\n      location: null,\n      startDate: null,\n      endDate: null,\n      focusedInput: null\n    }\n  }\n\n  componentDidMount(){\n    this.getChartData();\n  }\n\n  getChartData(){\n    //make ajax/axios call\n    if(this.state.location=='Cupertino'){\n      this.setState({\n        chartData:{\n            labels: ['05-06', '05-07', '05-08', '05-09', '05-10', '05-11', '05-12', '05-13', '05-14'],\n            datasets: [\n              {\n                label:'Device_1',\n                data:[\n                  0,\n                  5.75,\n                  11.5,\n                  17.25,\n                  23\n                ],\n                backgroundColor:[\n                  'rgba(63, 63, 191, 0.6)',\n                  'rgba(63, 63, 191, 0.6)',\n                  'rgba(63, 63, 191, 0.6)',\n                  'rgba(63, 63, 191, 0.6)',\n                  'rgba(63, 63, 191, 0.6)'\n                ]\n              },\n              {\n                label:'Device_2',\n                data:[\n                  5,\n                  10,\n                  15,\n                  20,\n                  25\n                ],\n                backgroundColor:[\n                  'rgba(63, 191, 63, 0.6)',\n                  'rgba(63, 191, 63, 0.6)',\n                  'rgba(63, 191, 63, 0.6)',\n                  'rgba(63, 191, 63, 0.6)',\n                  'rgba(63, 191, 63, 0.6)'\n                ]\n              },\n              {\n                label:'Device_3',\n                data:[\n                  7,\n                  9,\n                  23,\n                  2,\n                  18\n                ],\n                backgroundColor:[\n                  'rgba(10, 255, 255, 0.6)',\n                  'rgba(10, 255, 255, 0.6)',\n                  'rgba(10, 255, 255, 0.6)',\n                  'rgba(10, 255, 255, 0.6)',\n                  'rgba(10, 255, 255, 0.6)'\n                ]\n              }\n            ]\n        }\n      })\n    }\n    else if (this.state.location=='Riverside'){\n\n    }\n  }\n  BarClick = () => {\n    this.setState({chartType:'Bar'});\n  }\n\n  LineClick = () => {\n    this.setState({chartType:'Line'});\n  }\n\n  PieClick = () => {\n    this.setState({chartType:'Pie'});\n  }\n\n  location1 = () => {\n    this.setState({location:'Cupertino'});\n  }\n\n  location2 = () => {\n    this.setState({location:'Riverside'});\n  }\n\n  location3 = () => {\n    this.setState({location:'Irvine'});\n  }\n\n  render() {\n    const falseFunc = ()=>false;\n    return (\n      <div>\n        <p> Select a Chart's Data: </p>\n        <button onClick={this.BarClick}>Bar</button>\n        <button onClick={this.LineClick}>Line</button>\n        <button onClick={this.PieClick}>Pie</button>\n\n\n        <p> Insect Count (per location) </p>\n        <button onClick={this.location1}>Cupertino</button>\n        <button onClick={this.location2}>Riverside</button>\n        <button onClick={this.location3}>Irvine</button>\n\n        <Chart chartData={this.state.chartData} location=\"California\" chartType={this.state.chartType} temp={this.state.startDate} chartD={this.state.chartD}/>\n      </div>\n    );\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}