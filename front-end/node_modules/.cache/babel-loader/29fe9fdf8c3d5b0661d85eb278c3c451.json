{"ast":null,"code":"var _jsxFileName = \"/Users/johnshin/Projects/chart/src/components/Section1.js\";\nimport React, { component } from 'react';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport Chart from './Chart';\nimport Calendar from './Calendar';\nimport Menu from './Menu';\nimport moment from 'moment';\nimport './section.css';\n\nclass Section1 extends React.Component {\n  constructor() {\n    super();\n\n    this.BarClick = () => {\n      this.setState({\n        chartType: 'Bar'\n      });\n    };\n\n    this.LineClick = () => {\n      this.setState({\n        chartType: 'Line'\n      });\n    };\n\n    this.PieClick = () => {\n      this.setState({\n        chartType: 'Pie'\n      });\n    };\n\n    this.location1 = () => {\n      this.setState({\n        location: 'Cupertino',\n        chartData: {\n          labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n          datasets: [{\n            label: 'Device_1',\n            data: [1, 4, 8, 2, 20, 23, 14, 9],\n            backgroundColor: 'rgba(63, 63, 191, 0.6)'\n          }, {\n            label: 'Device_2',\n            data: [23, 17, 30, 5, 3, 2, 13, 15],\n            backgroundColor: 'rgba(255, 35, 35, 0.6)'\n          }]\n        }\n      });\n    };\n\n    this.location2 = () => {\n      this.setState({\n        location: 'Riverside',\n        chartData: {\n          labels: [\"May-05\", \"May-06\", \"May-07\", \"May-08\", \"May-09\", \"May-10\", \"May-11\", \"May-12\"],\n          datasets: [{\n            label: 'Device_1',\n            data: [2, 4, 6, 8, 10, 12, 14, 16],\n            backgroundColor: 'rgba(63, 63, 191, 0.6)'\n          }, {\n            label: 'Device_2',\n            data: [1, 3, 5, 7, 9, 11, 13, 15],\n            backgroundColor: 'rgba(255, 35, 35, 0.6)'\n          }]\n        }\n      });\n    };\n\n    this.Day = () => {\n      this.setState({\n        time: 'day'\n      });\n    };\n\n    this.Week = () => {\n      this.setState({\n        time: 'week'\n      });\n    };\n\n    this.Month = () => {\n      this.setState({\n        time: 'month'\n      });\n    };\n\n    this.Year = () => {\n      this.setState({\n        time: 'year'\n      });\n    };\n\n    this.range = (start, end) => {\n      if (start != null && end != null) {\n        this.setState({\n          startDate: start.format('MMM-DD'),\n          endDate: end.format('MMM-DD')\n        });\n      }\n    };\n\n    this.state = {\n      chartData: {},\n      chartType: 'Bar',\n      startDate: '',\n      endDate: '',\n      time: 'day',\n      location: 'Cupertino',\n      focusedInput: null,\n      units: 'Section1'\n    };\n  }\n\n  componentWillMount() {\n    this.getChartData();\n  }\n\n  getChartData() {\n    //make ajax/axios call\n    this.setState({\n      chartData: {\n        labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n        datasets: [{\n          label: 'Device_1',\n          data: [1, 4, 8, 2, 20, 23, 14, 9],\n          backgroundColor: 'rgba(63, 63, 191, 0.6)'\n        }, {\n          label: 'Device_2',\n          data: [23, 17, 30, 5, 3, 2, 13, 15],\n          backgroundColor: 'rgba(255, 35, 35, 0.6)'\n        }]\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      class: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      class: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Insect Count (per location)\"), React.createElement(\"div\", {\n      class: \"dates\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      class: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \" Chart type \"), React.createElement(\"button\", {\n      onClick: this.BarClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Bar\"), React.createElement(\"button\", {\n      onClick: this.LineClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Line\"), React.createElement(\"button\", {\n      onClick: this.PieClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Pie\")), React.createElement(\"div\", {\n      class: \"dates\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      class: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \" View by \"), React.createElement(\"button\", {\n      class: \"date\",\n      onClick: this.Day,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Day\"), React.createElement(\"button\", {\n      class: \"date\",\n      onClick: this.Week,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Week\"), React.createElement(\"button\", {\n      class: \"date\",\n      onClick: this.Month,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Month\"), React.createElement(\"button\", {\n      class: \"date\",\n      onClick: this.Year,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Year\")), React.createElement(\"div\", {\n      class: \"dropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \" Select a location \"), React.createElement(Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })), React.createElement(Calendar, {\n      range: this.range,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(Chart, {\n      chartData: this.state.chartData,\n      title: this.state.location,\n      chartType: this.state.chartType,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate,\n      time: this.state.time,\n      units: this.state.units,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nexport default Section1;","map":{"version":3,"sources":["/Users/johnshin/Projects/chart/src/components/Section1.js"],"names":["React","component","DateRangePicker","SingleDatePicker","DayPickerRangeController","Chart","Calendar","Menu","moment","Section1","Component","constructor","BarClick","setState","chartType","LineClick","PieClick","location1","location","chartData","labels","datasets","label","data","backgroundColor","location2","Day","time","Week","Month","Year","range","start","end","startDate","format","endDate","state","focusedInput","units","componentWillMount","getChartData","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,eAAT,EAA0BC,gBAA1B,EAA4CC,wBAA5C,QAA4E,aAA5E;AACA,OAAO,wBAAP;AACA,OAAO,qCAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,eAAP;;AAEA,MAAMC,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,GAAE;AACX;;AADW,SAuCXC,QAvCW,GAuCA,MAAM;AACf,WAAKC,QAAL,CAAc;AAACC,QAAAA,SAAS,EAAC;AAAX,OAAd;AACD,KAzCU;;AAAA,SA2CXC,SA3CW,GA2CC,MAAM;AAChB,WAAKF,QAAL,CAAc;AAACC,QAAAA,SAAS,EAAC;AAAX,OAAd;AACD,KA7CU;;AAAA,SA+CXE,QA/CW,GA+CA,MAAM;AACf,WAAKH,QAAL,CAAc;AAACC,QAAAA,SAAS,EAAC;AAAX,OAAd;AACD,KAjDU;;AAAA,SAmDXG,SAnDW,GAmDC,MAAM;AAChB,WAAKJ,QAAL,CAAc;AACZK,QAAAA,QAAQ,EAAC,WADG;AAEZC,QAAAA,SAAS,EAAC;AACNC,UAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,EAA+B,QAA/B,EAAyC,QAAzC,EAAmD,QAAnD,EAA6D,QAA7D,EAAuE,QAAvE,CADF;AAENC,UAAAA,QAAQ,EAAE,CACR;AACEC,YAAAA,KAAK,EAAC,UADR;AAEEC,YAAAA,IAAI,EAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,CAAzB,CAFP;AAGEC,YAAAA,eAAe,EAAC;AAHlB,WADQ,EAMR;AACEF,YAAAA,KAAK,EAAC,UADR;AAEEC,YAAAA,IAAI,EAAC,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,EAAtB,EAA0B,EAA1B,CAFP;AAGEC,YAAAA,eAAe,EAAE;AAHnB,WANQ;AAFJ;AAFE,OAAd;AAmBD,KAvEU;;AAAA,SAyEXC,SAzEW,GAyEC,MAAM;AAChB,WAAKZ,QAAL,CAAc;AACZK,QAAAA,QAAQ,EAAC,WADG;AAEZC,QAAAA,SAAS,EAAC;AACNC,UAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,EAA+B,QAA/B,EAAyC,QAAzC,EAAmD,QAAnD,EAA6D,QAA7D,EAAuE,QAAvE,CADF;AAENC,UAAAA,QAAQ,EAAE,CACR;AACEC,YAAAA,KAAK,EAAC,UADR;AAEEC,YAAAA,IAAI,EAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,CAFP;AAGEC,YAAAA,eAAe,EAAE;AAHnB,WADQ,EAMR;AACEF,YAAAA,KAAK,EAAC,UADR;AAEEC,YAAAA,IAAI,EAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB,CAFP;AAGEC,YAAAA,eAAe,EAAE;AAHnB,WANQ;AAFJ;AAFE,OAAd;AAkBD,KA5FU;;AAAA,SA8FXE,GA9FW,GA8FL,MAAM;AACV,WAAKb,QAAL,CAAc;AAACc,QAAAA,IAAI,EAAE;AAAP,OAAd;AACD,KAhGU;;AAAA,SAkGXC,IAlGW,GAkGJ,MAAM;AACX,WAAKf,QAAL,CAAc;AAACc,QAAAA,IAAI,EAAE;AAAP,OAAd;AACD,KApGU;;AAAA,SAsGXE,KAtGW,GAsGH,MAAM;AACZ,WAAKhB,QAAL,CAAc;AAACc,QAAAA,IAAI,EAAE;AAAP,OAAd;AACD,KAxGU;;AAAA,SA0GXG,IA1GW,GA0GJ,MAAM;AACX,WAAKjB,QAAL,CAAc;AAACc,QAAAA,IAAI,EAAE;AAAP,OAAd;AACD,KA5GU;;AAAA,SA+GXI,KA/GW,GA+GH,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACtB,UAAID,KAAK,IAAI,IAAT,IAAiBC,GAAG,IAAI,IAA5B,EAAiC;AAC/B,aAAKpB,QAAL,CAAc;AACZqB,UAAAA,SAAS,EAAEF,KAAK,CAACG,MAAN,CAAa,QAAb,CADC;AAEZC,UAAAA,OAAO,EAAEH,GAAG,CAACE,MAAJ,CAAW,QAAX;AAFG,SAAd;AAID;AACF,KAtHU;;AAEX,SAAKE,KAAL,GAAa;AACXlB,MAAAA,SAAS,EAAE,EADA;AAEXL,MAAAA,SAAS,EAAC,KAFC;AAGXoB,MAAAA,SAAS,EAAE,EAHA;AAIXE,MAAAA,OAAO,EAAE,EAJE;AAKXT,MAAAA,IAAI,EAAE,KALK;AAMXT,MAAAA,QAAQ,EAAE,WANC;AAOXoB,MAAAA,YAAY,EAAE,IAPH;AAQXC,MAAAA,KAAK,EAAE;AARI,KAAb;AAUD;;AAECC,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,YAAL;AACD;;AAEDA,EAAAA,YAAY,GAAI;AACd;AACE,SAAK5B,QAAL,CAAc;AACZM,MAAAA,SAAS,EAAC;AACNC,QAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,QAAX,EAAqB,QAArB,EAA+B,QAA/B,EAAyC,QAAzC,EAAmD,QAAnD,EAA6D,QAA7D,EAAuE,QAAvE,CADF;AAENC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAC,UADR;AAEEC,UAAAA,IAAI,EAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,CAAzB,CAFP;AAGEC,UAAAA,eAAe,EAAC;AAHlB,SADQ,EAMR;AACEF,UAAAA,KAAK,EAAC,UADR;AAEEC,UAAAA,IAAI,EAAC,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,EAAtB,EAA0B,EAA1B,CAFP;AAGEC,UAAAA,eAAe,EAAE;AAHnB,SANQ;AAFJ;AADE,KAAd;AAiBH;;AAqFHkB,EAAAA,MAAM,GAAG;AAEP,WACE;AAAK,MAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,KAAK,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADJ,EAGI;AAAK,MAAA,KAAK,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,KAAK,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAQ,MAAA,OAAO,EAAE,KAAK9B,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE;AAAQ,MAAA,OAAO,EAAE,KAAKG,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAIE;AAAQ,MAAA,OAAO,EAAE,KAAKC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CAHJ,EAUI;AAAK,MAAA,KAAK,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,KAAK,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,OAAO,EAAE,KAAKU,GAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,OAAO,EAAE,KAAKE,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAIE;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,OAAO,EAAE,KAAKC,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,EAKE;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,OAAO,EAAE,KAAKC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,CAVJ,EAkBI;AAAK,MAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAlBJ,EAuBI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAKC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBJ,EAwBI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAE,KAAKM,KAAL,CAAWlB,SAA7B;AAAwC,MAAA,KAAK,EAAE,KAAKkB,KAAL,CAAWnB,QAA1D;AAAoE,MAAA,SAAS,EAAE,KAAKmB,KAAL,CAAWvB,SAA1F;AAAqG,MAAA,SAAS,EAAE,KAAKuB,KAAL,CAAWH,SAA3H;AAAsI,MAAA,OAAO,EAAE,KAAKG,KAAL,CAAWD,OAA1J;AAAmK,MAAA,IAAI,EAAE,KAAKC,KAAL,CAAWV,IAApL;AAA0L,MAAA,KAAK,EAAE,KAAKU,KAAL,CAAWE,KAA5M;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBJ,CADF;AA4BD;;AAzJoC;;AA0JtC;AAED,eAAe9B,QAAf","sourcesContent":["import React, {component} from 'react';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport Chart from './Chart';\nimport Calendar from './Calendar';\nimport Menu from './Menu';\nimport moment from 'moment';\nimport './section.css';\n\nclass Section1 extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      chartData: {} ,\n      chartType:'Bar',\n      startDate: '',\n      endDate: '',\n      time: 'day',\n      location: 'Cupertino',\n      focusedInput: null,\n      units: 'Section1',\n    }\n  }\n\n    componentWillMount() {\n      this.getChartData();\n    }\n\n    getChartData () {\n      //make ajax/axios call\n        this.setState({\n          chartData:{\n              labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n              datasets: [\n                {\n                  label:'Device_1',\n                  data:[1, 4, 8, 2, 20, 23, 14, 9],\n                  backgroundColor:'rgba(63, 63, 191, 0.6)'\n                },\n                {\n                  label:'Device_2',\n                  data:[23, 17, 30, 5, 3, 2, 13, 15],\n                  backgroundColor: 'rgba(255, 35, 35, 0.6)'\n                }\n              ]\n          },\n        });\n    }\n\n    BarClick = () => {\n      this.setState({chartType:'Bar'});\n    }\n\n    LineClick = () => {\n      this.setState({chartType:'Line'});\n    }\n\n    PieClick = () => {\n      this.setState({chartType:'Pie'});\n    }\n\n    location1 = () => {\n      this.setState({\n        location:'Cupertino',\n        chartData:{\n            labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n            datasets: [\n              {\n                label:'Device_1',\n                data:[1, 4, 8, 2, 20, 23, 14, 9],\n                backgroundColor:'rgba(63, 63, 191, 0.6)'\n              },\n              {\n                label:'Device_2',\n                data:[23, 17, 30, 5, 3, 2, 13, 15],\n                backgroundColor: 'rgba(255, 35, 35, 0.6)'\n              }\n            ]\n        }\n\n      });\n    }\n\n    location2 = () => {\n      this.setState({\n        location:'Riverside',\n        chartData:{\n            labels: [\"May-05\", \"May-06\", \"May-07\", \"May-08\", \"May-09\", \"May-10\", \"May-11\", \"May-12\"],\n            datasets: [\n              {\n                label:'Device_1',\n                data:[2, 4, 6, 8, 10, 12, 14, 16],\n                backgroundColor: 'rgba(63, 63, 191, 0.6)'\n              },\n              {\n                label:'Device_2',\n                data:[1, 3, 5, 7, 9, 11, 13, 15],\n                backgroundColor: 'rgba(255, 35, 35, 0.6)'\n              }\n            ]\n        }\n      });\n    }\n\n    Day = () => {\n      this.setState({time: 'day'});\n    }\n\n    Week = () => {\n      this.setState({time: 'week'});\n    }\n\n    Month = () => {\n      this.setState({time: 'month'});\n    }\n\n    Year = () => {\n      this.setState({time: 'year'});\n    }\n\n\n    range = (start, end) => {\n      if (start != null && end != null){\n        this.setState({\n          startDate: start.format('MMM-DD'),\n          endDate: end.format('MMM-DD')\n        });\n      }\n    }\n\n\n\n  render() {\n\n    return (\n      <div class=\"section\">\n          <h2 class=\"title\">Insect Count (per location)</h2>\n\n          <div class=\"dates\">\n            <p class=\"text\"> Chart type </p>\n            <button onClick={this.BarClick}>Bar</button>\n            <button onClick={this.LineClick}>Line</button>\n            <button onClick={this.PieClick}>Pie</button>\n          </div>\n\n          <div class=\"dates\">\n            <p class=\"text\"> View by </p>\n            <button class=\"date\" onClick={this.Day}>Day</button>\n            <button class=\"date\" onClick={this.Week}>Week</button>\n            <button class=\"date\" onClick={this.Month}>Month</button>\n            <button class=\"date\" onClick={this.Year}>Year</button>\n          </div>\n\n          <div class=\"dropdown\">\n            <p> Select a location </p>\n            <Menu/>\n          </div>\n\n          <Calendar range={this.range}/>\n          <Chart chartData={this.state.chartData} title={this.state.location} chartType={this.state.chartType} startDate={this.state.startDate} endDate={this.state.endDate} time={this.state.time} units={this.state.units}/>\n      </div>\n    );\n  }\n};\n\nexport default Section1;\n"]},"metadata":{},"sourceType":"module"}