{"ast":null,"code":"var _jsxFileName = \"/Users/johnshin/Projects/chart/src/components/Section4.js\";\nimport React, { component } from 'react';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport Chart from './Chart';\nimport Calendar from './Calendar';\n\nclass Section4 extends React.Component {\n  constructor() {\n    super();\n\n    this.BarClick = () => {\n      this.setState({\n        chartType: 'Bar'\n      });\n    };\n\n    this.LineClick = () => {\n      this.setState({\n        chartType: 'Line'\n      });\n    };\n\n    this.PieClick = () => {\n      this.setState({\n        chartType: 'Pie'\n      });\n    };\n\n    this.Sensor1 = () => {\n      this.setState({\n        device: 'Sensor_1',\n        chartBool: false,\n        chartData: {\n          labels: ['09-06', '09-07', '09-08', '09-09', '09-10', '09-11', '09-12', '09-13'],\n          datasets: [{\n            data: [225, 230, 235, 240, 248, 238, 233, 250],\n            backgroundColor: 'rgba(63, 63, 191, 0.6)'\n          }]\n        }\n      });\n    };\n\n    this.Sensor2 = () => {\n      this.setState({\n        device: 'Sensor_2',\n        chartBool: false,\n        chartData: {\n          labels: ['05-06', '05-07', '05-08', '05-09', '05-10', '05-11', '05-12', '05-13'],\n          datasets: [{\n            data: [300, 330, 270, 280, 290, 310, 330, 320],\n            backgroundColor: 'rgba(63, 63, 191, 0.6)'\n          }]\n        }\n      });\n    };\n\n    this.range = (start, end) => {\n      if (start != null && end != null) {\n        this.setState({\n          startDate: start.format('MMM-DD'),\n          endDate: end.format('MMM-DD')\n        });\n      }\n    };\n\n    this.state = {\n      chartData: {},\n      chartType: 'Bar',\n      device: 'Sensor_1',\n      units: 'Section4',\n      focusedInput: null\n    };\n  }\n\n  componentWillMount() {\n    this.getChartData();\n  }\n\n  getChartData() {\n    //make ajax/axios call\n    this.setState({\n      chartData: {\n        labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n        datasets: [{\n          label: 'Temp. (per device)',\n          data: [10, 20, 30, 40, 50, 60, 70, 80],\n          backgroundColor: 'rgba(63, 63, 191, 0.6)'\n        }, {\n          label: 'Humidity (per device)',\n          data: [45, 23, 15, 80, 72, 55, 33, 99],\n          backgroundColor: 'rgba(255, 35, 35, 0.6)'\n        }]\n      }\n    });\n  }\n\n  render() {\n    const falseFunc = () => false;\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \" Select a Chart's format \"), React.createElement(\"button\", {\n      onClick: this.BarClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Bar\"), React.createElement(\"button\", {\n      onClick: this.LineClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Line\"), React.createElement(\"button\", {\n      onClick: this.PieClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Pie\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \" Select a Device \"), React.createElement(\"button\", {\n      onClick: this.Sensor1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Sensor_1\"), React.createElement(\"button\", {\n      onClick: this.Sensor2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Sensor_2\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \" Pick a date \"), React.createElement(Calendar, {\n      range: this.range,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(Chart, {\n      chartData: this.state.chartData,\n      title: this.state.device,\n      chartType: this.state.chartType,\n      units: this.state.units,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })));\n  }\n\n}\n\n;\nexport default Section4;","map":{"version":3,"sources":["/Users/johnshin/Projects/chart/src/components/Section4.js"],"names":["React","component","DateRangePicker","SingleDatePicker","DayPickerRangeController","Chart","Calendar","Section4","Component","constructor","BarClick","setState","chartType","LineClick","PieClick","Sensor1","device","chartBool","chartData","labels","datasets","data","backgroundColor","Sensor2","range","start","end","startDate","format","endDate","state","units","focusedInput","componentWillMount","getChartData","label","render","falseFunc"],"mappings":"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","sourcesContent":["import React, {component} from 'react';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport Chart from './Chart';\nimport Calendar from './Calendar';\n\nclass Section4 extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      chartData: {} ,\n      chartType:'Bar',\n      device: 'Sensor_1',\n      units: 'Section4',\n      focusedInput: null\n    }\n  }\n\n    componentWillMount() {\n      this.getChartData();\n    }\n\n    getChartData () {\n      //make ajax/axios call\n        this.setState({\n          chartData:{\n              labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n              datasets: [\n                {\n                  label: 'Temp. (per device)',\n                  data:[10, 20, 30, 40, 50, 60, 70, 80],\n                  backgroundColor:'rgba(63, 63, 191, 0.6)'\n                },\n                {\n                  label: 'Humidity (per device)',\n                  data:[45, 23, 15, 80, 72, 55, 33, 99],\n                  backgroundColor: 'rgba(255, 35, 35, 0.6)'\n                }\n              ]\n          }\n        });\n\n    }\n    BarClick = () => {\n      this.setState({chartType:'Bar'});\n    }\n\n    LineClick = () => {\n      this.setState({chartType:'Line'});\n    }\n\n    PieClick = () => {\n      this.setState({chartType:'Pie'});\n    }\n\n    Sensor1 = () => {\n      this.setState({\n        device:'Sensor_1',\n        chartBool: false,\n        chartData:{\n            labels: ['09-06', '09-07', '09-08', '09-09', '09-10', '09-11', '09-12', '09-13'],\n            datasets: [\n              {\n                data:[225, 230, 235, 240, 248, 238, 233, 250],\n                backgroundColor:'rgba(63, 63, 191, 0.6)'\n              }\n            ]\n        }\n\n      });\n    }\n\n    Sensor2 = () => {\n      this.setState({\n        device:'Sensor_2',\n        chartBool: false,\n        chartData:{\n            labels: ['05-06', '05-07', '05-08', '05-09', '05-10', '05-11', '05-12', '05-13'],\n            datasets: [\n              {\n                data:[300, 330, 270, 280, 290, 310, 330, 320],\n                backgroundColor: 'rgba(63, 63, 191, 0.6)'\n              }\n            ]\n        }\n      });\n    }\n\n    range = (start, end) => {\n      if (start != null && end != null){\n        this.setState({\n          startDate: start.format('MMM-DD'),\n          endDate: end.format('MMM-DD')\n        })\n\n      }\n\n}\n\n  render() {\n    const falseFunc = ()=>false;\n    return (\n      <div>\n        <div>\n          <p> Select a Chart's format </p>\n          <button onClick={this.BarClick}>Bar</button>\n          <button onClick={this.LineClick}>Line</button>\n          <button onClick={this.PieClick}>Pie</button>\n\n          <p> Select a Device </p>\n          <button onClick={this.Sensor1}>Sensor_1</button>\n          <button onClick={this.Sensor2}>Sensor_2</button>\n\n          <p> Pick a date </p>\n          <Calendar range={this.range}/>\n\n          <Chart chartData = {this.state.chartData} title={this.state.device} chartType={this.state.chartType} units={this.state.units}/>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Section4;\n"]},"metadata":{},"sourceType":"module"}