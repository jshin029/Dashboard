{"ast":null,"code":"var _jsxFileName = \"/Users/johnshin/Projects/chart/src/components/Chart.js\";\nimport React, { Component } from 'react';\nimport { Bar, Line, Pie } from 'react-chartjs-2';\n\nclass Chart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: props.chartData,\n      error: null,\n      labels: ['1', '2', '3'],\n      datasets: [{}]\n    };\n  }\n\n  render() {\n    if (this.props.chartType == 'Bar' && this.props.units == 'C') {\n      return React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(Bar, {\n        data: this.props.chartData,\n        options: {\n          displayLegend: false,\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true,\n                max: 400,\n                callback: function (value, index, values) {\n                  return value + \"° C\";\n                }\n              }\n            }]\n          },\n          maintainAspectRatio: false,\n          title: {\n            display: this.props.displayTitle,\n            text: this.props.title\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }));\n    } else if (this.props.chartType == 'Bar') {\n      return React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Bar, {\n        data: this.props.chartData,\n        options: {\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true\n              }\n            }]\n          },\n          maintainAspectRatio: false,\n          title: {\n            display: this.props.displayTitle,\n            text: this.props.title\n          },\n          legend: {\n            display: this.props.displayLegend,\n            position: 'right'\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }));\n    } else if (this.props.chartType == 'Line') {\n      return React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Line, {\n        data: this.props.chartData,\n        options: {\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true\n              }\n            }]\n          },\n          maintainAspectRatio: false,\n          title: {\n            display: this.props.displayTitle,\n            text: this.props.title\n          },\n          legend: {\n            display: this.props.displayLegend,\n            position: 'right'\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }));\n    } else if (this.props.chartType == 'Pie') {\n      return React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Pie, {\n        data: this.props.chartData,\n        options: {\n          scales: {\n            yAxes: [{\n              ticks: {\n                beginAtZero: true\n              }\n            }]\n          },\n          maintainAspectRatio: false,\n          title: {\n            display: this.props.displayTitle,\n            text: this.props.title\n          },\n          legend: {\n            display: this.props.displayLegend,\n            position: 'right'\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }));\n    }\n  }\n\n}\n\nChart.defaultProps = {\n  displayTitle: true,\n  displayLegend: true,\n  legendPosition: 'right',\n  location: 'Location'\n};\n;\nexport default Chart;","map":{"version":3,"sources":["/Users/johnshin/Projects/chart/src/components/Chart.js"],"names":["React","Component","Bar","Line","Pie","Chart","constructor","props","state","chartData","error","labels","datasets","render","chartType","units","displayLegend","scales","yAxes","ticks","beginAtZero","max","callback","value","index","values","maintainAspectRatio","title","display","displayTitle","text","legend","position","defaultProps","legendPosition","location"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Bar,Line,Pie} from 'react-chartjs-2';\n\nclass Chart extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      chartData: props.chartData,\n      error: null,\n      labels: ['1', '2', '3'],\n      datasets: [{}],\n    }\n  }\n\n  static defaultProps = {\n    displayTitle:true,\n    displayLegend:true,\n    legendPosition:'right',\n    location:'Location'\n  }\n\n\n\n  render(){\n    if (this.props.chartType=='Bar' && this.props.units=='C'){\n      return (\n        <div className=\"chart\">\n          <Bar\n            data={this.props.chartData}\n            options={{\n              displayLegend: false,\n              scales: {\n                yAxes: [{\n                  ticks: {\n                    beginAtZero: true,\n                    max: 400,\n                    callback: function(value, index, values) {\n                      return value + \"° C\";\n                    }\n                  }\n                }]\n              },\n              maintainAspectRatio: false,\n              title:{\n                display:this.props.displayTitle,\n                text: this.props.title,\n              },\n            }}\n          />\n        </div>\n      );\n    }\n    else if (this.props.chartType=='Bar'){\n      return (\n        <div className=\"chart\">\n          <Bar\n            data={this.props.chartData}\n            options={{\n              scales: {\n                yAxes: [{\n                  ticks: {\n                    beginAtZero: true\n                  }\n                }]\n              },\n              maintainAspectRatio: false,\n              title:{\n                display:this.props.displayTitle,\n                text: this.props.title,\n              },\n              legend:{\n                display:this.props.displayLegend,\n                position:'right'\n              }\n            }}\n          />\n        </div>\n      );\n  }\n\n    else if (this.props.chartType=='Line'){\n      return (\n        <div className=\"chart\">\n          <Line\n            data={this.props.chartData}\n            options={{\n              scales: {\n                yAxes: [{\n                  ticks: {\n                    beginAtZero: true\n                  }\n                }]\n              },\n              maintainAspectRatio: false,\n              title:{\n                display:this.props.displayTitle,\n                text: this.props.title,\n              },\n              legend:{\n                display:this.props.displayLegend,\n                position:'right'\n              }\n            }}\n          />\n        </div>\n      );\n  }\n\n  else if (this.props.chartType=='Pie'){\n    return (\n      <div className=\"chart\">\n        <Pie\n          data={this.props.chartData}\n          options={{\n            scales: {\n              yAxes: [{\n                ticks: {\n                  beginAtZero: true\n                }\n              }]\n            },\n            maintainAspectRatio: false,\n            title:{\n              display:this.props.displayTitle,\n              text: this.props.title,\n            },\n            legend:{\n              display:this.props.displayLegend,\n              position:'right'\n            }\n          }}\n        />\n      </div>\n    );\n}\n}\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}