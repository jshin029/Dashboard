{"ast":null,"code":"var _jsxFileName = \"/Users/johnshin/Projects/chart/src/App.js\";\nimport React from 'react';\nimport Chart from './components/Chart';\nimport Calendar from './components/Calendar';\nimport Toggle from 'react-toggle';\nimport \"react-toggle/style.css\";\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.BarClick = () => {\n      this.setState({\n        chartType: 'Bar'\n      });\n    };\n\n    this.LineClick = () => {\n      this.setState({\n        chartType: 'Line'\n      });\n    };\n\n    this.PieClick = () => {\n      this.setState({\n        chartType: 'Pie'\n      });\n    };\n\n    this.C1Click = () => {\n      this.setState({\n        chartD: 'insect_count'\n      });\n      this.getChartData();\n    };\n\n    this.C2Click = () => {\n      this.setState({\n        chartD: 'degree_day'\n      });\n      this.getChartData();\n    };\n\n    this.C3Click = () => {\n      this.setState({\n        chartD: 'temp_device'\n      });\n      this.getChartData();\n    };\n\n    this.state = {\n      chartData: {},\n      chartD: '',\n      chartType: 'Bar',\n      startDate: null,\n      endDate: null,\n      focusedInput: null\n    };\n  }\n\n  componentWillMount() {\n    this.getChartData();\n  }\n\n  getChartData() {\n    //make ajax/axios call\n    if (this.state.chartD == 'insect_count') {\n      this.setState({\n        chartData: {\n          labels: ['05-06', '05-07', '05-08', '05-09', '05-10', '05-11', '05-12', '05-13', '05-14'],\n          datasets: [{\n            label: 'Device_1',\n            data: [0, 5.75, 11.5, 17.25, 23],\n            backgroundColor: ['rgba(63, 63, 191, 0.6)', 'rgba(63, 63, 191, 0.6)', 'rgba(63, 63, 191, 0.6)', 'rgba(63, 63, 191, 0.6)', 'rgba(63, 63, 191, 0.6)']\n          }, {\n            label: 'Device_2',\n            data: [5, 10, 15, 20, 25],\n            backgroundColor: ['rgba(63, 191, 63, 0.6)', 'rgba(63, 191, 63, 0.6)', 'rgba(63, 191, 63, 0.6)', 'rgba(63, 191, 63, 0.6)', 'rgba(63, 191, 63, 0.6)']\n          }, {\n            label: 'Device_3',\n            data: [7, 9, 23, 2, 18],\n            backgroundColor: ['rgba(10, 255, 255, 0.6)', 'rgba(10, 255, 255, 0.6)', 'rgba(10, 255, 255, 0.6)', 'rgba(10, 255, 255, 0.6)', 'rgba(10, 255, 255, 0.6)']\n          }]\n        }\n      });\n    } else if (this.state.chartD == 'degree_day') {\n      console.log();\n      this.setState({\n        chartData: {\n          labels: ['05-06', '05-07', '05-08', '05-09', '05-10', '05-11', '05-12', '05-13', '05-14'],\n          datasets: [{\n            label: 'Device_1',\n            data: [0, 5.75, 11.5, 17.25, 23],\n            backgroundColor: ['rgba(63, 63, 191, 0.6)', 'rgba(63, 63, 191, 0.6)', 'rgba(63, 63, 191, 0.6)', 'rgba(63, 63, 191, 0.6)', 'rgba(63, 63, 191, 0.6)']\n          }]\n        }\n      });\n    }\n  }\n\n  render() {\n    const falseFunc = () => false;\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \" Select a Chart's Data: \"), React.createElement(\"button\", {\n      onClick: this.BarClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Bar\"), React.createElement(\"button\", {\n      onClick: this.LineClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Line\"), React.createElement(\"button\", {\n      onClick: this.PieClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Pie\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \" Select a Chart Type: \"), React.createElement(\"button\", {\n      onClick: this.C1Click,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Insect Count\"), React.createElement(\"button\", {\n      onClick: this.C2Click,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Degree Day\"), React.createElement(\"button\", {\n      onClick: this.C3Click,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Temp Device\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \" Select a Location: \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Select a Date: \"), React.createElement(DateRangePicker, {\n      startDateId: \"startDate\",\n      endDateId: \"endDate\",\n      startDate: this.state.startDate,\n      endDate: this.state.endDate,\n      onDatesChange: ({\n        startDate,\n        endDate\n      }) => {\n        this.setState({\n          startDate,\n          endDate\n        });\n      },\n      focusedInput: this.state.focusedInput,\n      onFocusChange: focusedInput => {\n        this.setState({\n          focusedInput\n        });\n      },\n      isOutsideRange: falseFunc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \" Celcius or Fahrenheit\"), React.createElement(Toggle, {\n      defaultChecked: this.state.tofuIsReady,\n      icons: false,\n      onChange: this.handleTofuChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(Chart, {\n      chartData: this.state.chartData,\n      location: \"California\",\n      chartType: this.state.chartType,\n      temp: this.state.startDate,\n      chartD: this.state.chartD,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/johnshin/Projects/chart/src/App.js"],"names":["React","Chart","Calendar","Toggle","DateRangePicker","SingleDatePicker","DayPickerRangeController","App","Component","constructor","BarClick","setState","chartType","LineClick","PieClick","C1Click","chartD","getChartData","C2Click","C3Click","state","chartData","startDate","endDate","focusedInput","componentWillMount","labels","datasets","label","data","backgroundColor","console","log","render","falseFunc","tofuIsReady","handleTofuChange"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Chart from './components/Chart';\nimport Calendar from './components/Calendar';\nimport Toggle from 'react-toggle';\nimport \"react-toggle/style.css\";\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      chartData: {},\n      chartD: '',\n      chartType:'Bar',\n      startDate: null,\n      endDate: null,\n      focusedInput: null\n    }\n  }\n\n  componentWillMount(){\n    this.getChartData();\n  }\n\n  getChartData(){\n    //make ajax/axios call\n    if(this.state.chartD == 'insect_count')\n    {\n      this.setState({\n        chartData:{\n            labels: ['05-06', '05-07', '05-08', '05-09', '05-10', '05-11', '05-12', '05-13', '05-14'],\n            datasets: [\n              {\n                label:'Device_1',\n                data:[\n                  0,\n                  5.75,\n                  11.5,\n                  17.25,\n                  23\n                ],\n                backgroundColor:[\n                  'rgba(63, 63, 191, 0.6)',\n                  'rgba(63, 63, 191, 0.6)',\n                  'rgba(63, 63, 191, 0.6)',\n                  'rgba(63, 63, 191, 0.6)',\n                  'rgba(63, 63, 191, 0.6)'\n                ]\n              },\n              {\n                label:'Device_2',\n                data:[\n                  5,\n                  10,\n                  15,\n                  20,\n                  25\n                ],\n                backgroundColor:[\n                  'rgba(63, 191, 63, 0.6)',\n                  'rgba(63, 191, 63, 0.6)',\n                  'rgba(63, 191, 63, 0.6)',\n                  'rgba(63, 191, 63, 0.6)',\n                  'rgba(63, 191, 63, 0.6)'\n                ]\n              },\n              {\n                label:'Device_3',\n                data:[\n                  7,\n                  9,\n                  23,\n                  2,\n                  18\n                ],\n                backgroundColor:[\n                  'rgba(10, 255, 255, 0.6)',\n                  'rgba(10, 255, 255, 0.6)',\n                  'rgba(10, 255, 255, 0.6)',\n                  'rgba(10, 255, 255, 0.6)',\n                  'rgba(10, 255, 255, 0.6)'\n                ]\n              }\n            ]\n        }\n      })\n  }\n  else if (this.state.chartD == 'degree_day'){\n    console.log()\n    this.setState({\n      chartData:{\n          labels: ['05-06', '05-07', '05-08', '05-09', '05-10', '05-11', '05-12', '05-13', '05-14'],\n          datasets: [\n            {\n              label:'Device_1',\n              data:[\n                0,\n                5.75,\n                11.5,\n                17.25,\n                23\n              ],\n              backgroundColor:[\n                'rgba(63, 63, 191, 0.6)',\n                'rgba(63, 63, 191, 0.6)',\n                'rgba(63, 63, 191, 0.6)',\n                'rgba(63, 63, 191, 0.6)',\n                'rgba(63, 63, 191, 0.6)'\n              ]\n            },\n\n          ]\n      }\n    })\n\n  }\n  }\n  BarClick = () => {\n    this.setState({chartType:'Bar'});\n  }\n\n  LineClick = () => {\n    this.setState({chartType:'Line'});\n  }\n\n  PieClick = () => {\n    this.setState({chartType:'Pie'});\n  }\n\n  C1Click = () => {\n    this.setState({chartD:'insect_count'});\n        this.getChartData();\n  }\n\n  C2Click = () => {\n    this.setState({chartD:'degree_day'});\n        this.getChartData();\n  }\n\n  C3Click = () => {\n    this.setState({chartD:'temp_device'});\n        this.getChartData();\n  }\n\n  render() {\n    const falseFunc = ()=>false;\n    return (\n      <div>\n        <p> Select a Chart's Data: </p>\n        <button onClick={this.BarClick}>Bar</button>\n        <button onClick={this.LineClick}>Line</button>\n        <button onClick={this.PieClick}>Pie</button>\n\n        <p> Select a Chart Type: </p>\n        <button onClick={this.C1Click}>Insect Count</button>\n        <button onClick={this.C2Click}>Degree Day</button>\n        <button onClick={this.C3Click}>Temp Device</button>\n\n        <p> Select a Location: </p>\n\n        <p>Select a Date: </p>\n        <DateRangePicker\n         startDateId=\"startDate\"\n         endDateId=\"endDate\"\n         startDate={this.state.startDate}\n         endDate={this.state.endDate}\n         onDatesChange={({ startDate, endDate }) => { this.setState({ startDate, endDate })}}\n         focusedInput={this.state.focusedInput}\n         onFocusChange={(focusedInput) => { this.setState({ focusedInput })}}\n         isOutsideRange={falseFunc}\n         />\n        <p> Celcius or Fahrenheit</p>\n        <Toggle\n          defaultChecked={this.state.tofuIsReady}\n          icons={false}\n          onChange={this.handleTofuChange} />\n\n        <Chart chartData={this.state.chartData} location=\"California\" chartType={this.state.chartType} temp={this.state.startDate} chartD={this.state.chartD}/>\n      </div>\n    );\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}