{"ast":null,"code":"var _jsxFileName = \"/Users/johnshin/Projects/chart/src/components/Section1.js\";\nimport React, { component } from 'react';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport Chart from './Chart';\nimport Calendar from './Calendar';\nimport Menu from './Menu';\nimport moment from 'moment';\nimport './section.css';\nconst options = [{\n  value: 'Bar',\n  label: 'Bar'\n}, {\n  value: 'Line',\n  label: 'Line'\n}, {\n  value: 'Pie',\n  label: 'Pie'\n}];\nconst options2 = [{\n  value: 'Cupertino',\n  label: 'Cupertino'\n}, {\n  value: 'Riverside',\n  label: 'Riverside'\n}];\n\nclass Section1 extends React.Component {\n  constructor() {\n    super();\n\n    this.graphClick = graph => {\n      this.setState({\n        chartType: graph\n      });\n    };\n\n    this.location1 = () => {\n      this.setState({\n        location: 'Cupertino',\n        chartData: {\n          labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n          datasets: [{\n            label: 'Device_1',\n            data: [1, 4, 8, 2, 20, 23, 14, 9],\n            backgroundColor: 'rgba(63, 63, 191, 0.6)'\n          }, {\n            label: 'Device_2',\n            data: [23, 17, 30, 5, 3, 2, 13, 15],\n            backgroundColor: 'rgba(255, 35, 35, 0.6)'\n          }]\n        }\n      });\n    };\n\n    this.location2 = () => {\n      this.setState({\n        location: 'Riverside',\n        chartData: {\n          labels: [\"May-05\", \"May-06\", \"May-07\", \"May-08\", \"May-09\", \"May-10\", \"May-11\", \"May-12\"],\n          datasets: [{\n            label: 'Device_1',\n            data: [2, 4, 6, 8, 10, 12, 14, 16],\n            backgroundColor: 'rgba(63, 63, 191, 0.6)'\n          }, {\n            label: 'Device_2',\n            data: [1, 3, 5, 7, 9, 11, 13, 15],\n            backgroundColor: 'rgba(255, 35, 35, 0.6)'\n          }]\n        }\n      });\n    };\n\n    this.Day = () => {\n      this.setState({\n        time: 'day'\n      });\n    };\n\n    this.Week = () => {\n      this.setState({\n        time: 'week'\n      });\n    };\n\n    this.Month = () => {\n      this.setState({\n        time: 'month'\n      });\n    };\n\n    this.Year = () => {\n      this.setState({\n        time: 'year'\n      });\n    };\n\n    this.range = (start, end) => {\n      if (start != null && end != null) {\n        this.setState({\n          startDate: start.format('MMM-DD'),\n          endDate: end.format('MMM-DD')\n        });\n      }\n    };\n\n    this.state = {\n      chartData: {},\n      chartType: 'Bar',\n      startDate: '',\n      endDate: '',\n      time: 'day',\n      location: 'Cupertino',\n      focusedInput: null,\n      units: 'Section1'\n    };\n  }\n\n  componentWillMount() {\n    this.getChartData();\n  }\n\n  getChartData() {\n    //make ajax/axios call\n    this.setState({\n      chartData: {\n        labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n        datasets: [{\n          label: 'Device_1',\n          data: [1, 4, 8, 2, 20, 23, 14, 9],\n          backgroundColor: 'rgba(63, 63, 191, 0.6)'\n        }, {\n          label: 'Device_2',\n          data: [23, 17, 30, 5, 3, 2, 13, 15],\n          backgroundColor: 'rgba(255, 35, 35, 0.6)'\n        }]\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Insect Count (per location)\")), React.createElement(\"div\", {\n      className: \"outline2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"location\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inner1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Select a location\")), React.createElement(\"div\", {\n      className: \"inner2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"timeframe\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inner1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Select a time frame\")), React.createElement(\"div\", {\n      className: \"inner2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Calendar, {\n      range: this.range,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inner1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Chart type\")), React.createElement(\"div\", {\n      className: \"inner2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      graphClick: this.graphClick,\n      options: options,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"day\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inner1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"View by\")), React.createElement(\"div\", {\n      className: \"inner2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"date1\",\n      onClick: this.Day,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Day\"), React.createElement(\"button\", {\n      className: \"date\",\n      onClick: this.Week,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Week\"), React.createElement(\"button\", {\n      className: \"date\",\n      onClick: this.Month,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Month\"), React.createElement(\"button\", {\n      className: \"date\",\n      onClick: this.Year,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Year\")))), React.createElement(\"div\", {\n      className: \"graph\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      chartData: this.state.chartData,\n      title: this.state.location,\n      chartType: this.state.chartType,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate,\n      time: this.state.time,\n      units: this.state.units,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }))));\n  }\n\n}\n\n;\nexport default Section1;","map":{"version":3,"sources":["/Users/johnshin/Projects/chart/src/components/Section1.js"],"names":["React","component","DateRangePicker","SingleDatePicker","DayPickerRangeController","Chart","Calendar","Menu","moment","options","value","label","options2","Section1","Component","constructor","graphClick","graph","setState","chartType","location1","location","chartData","labels","datasets","data","backgroundColor","location2","Day","time","Week","Month","Year","range","start","end","startDate","format","endDate","state","focusedInput","units","componentWillMount","getChartData","render"],"mappings":"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","sourcesContent":["import React, {component} from 'react';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport Chart from './Chart';\nimport Calendar from './Calendar';\nimport Menu from './Menu';\nimport moment from 'moment';\nimport './section.css';\n\nconst options = [\n  {value: 'Bar', label: 'Bar'},\n  {value: 'Line', label: 'Line'},\n  {value: 'Pie', label: 'Pie'}\n]\n\nconst options2 = [\n  {value: 'Cupertino', label: 'Cupertino'},\n  {value: 'Riverside', label: 'Riverside'}\n]\n\n\nclass Section1 extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      chartData: {} ,\n      chartType:'Bar',\n      startDate: '',\n      endDate: '',\n      time: 'day',\n      location: 'Cupertino',\n      focusedInput: null,\n      units: 'Section1',\n    }\n  }\n\n    componentWillMount() {\n      this.getChartData();\n    }\n\n    getChartData () {\n      //make ajax/axios call\n        this.setState({\n          chartData:{\n              labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n              datasets: [\n                {\n                  label:'Device_1',\n                  data:[1, 4, 8, 2, 20, 23, 14, 9],\n                  backgroundColor:'rgba(63, 63, 191, 0.6)'\n                },\n                {\n                  label:'Device_2',\n                  data:[23, 17, 30, 5, 3, 2, 13, 15],\n                  backgroundColor: 'rgba(255, 35, 35, 0.6)'\n                }\n              ]\n          },\n        });\n    }\n\n    graphClick = (graph) => {\n      this.setState({chartType: graph});\n    }\n\n    location1 = () => {\n      this.setState({\n        location:'Cupertino',\n        chartData:{\n            labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n            datasets: [\n              {\n                label:'Device_1',\n                data:[1, 4, 8, 2, 20, 23, 14, 9],\n                backgroundColor:'rgba(63, 63, 191, 0.6)'\n              },\n              {\n                label:'Device_2',\n                data:[23, 17, 30, 5, 3, 2, 13, 15],\n                backgroundColor: 'rgba(255, 35, 35, 0.6)'\n              }\n            ]\n        }\n\n      });\n    }\n\n    location2 = () => {\n      this.setState({\n        location:'Riverside',\n        chartData:{\n            labels: [\"May-05\", \"May-06\", \"May-07\", \"May-08\", \"May-09\", \"May-10\", \"May-11\", \"May-12\"],\n            datasets: [\n              {\n                label:'Device_1',\n                data:[2, 4, 6, 8, 10, 12, 14, 16],\n                backgroundColor: 'rgba(63, 63, 191, 0.6)'\n              },\n              {\n                label:'Device_2',\n                data:[1, 3, 5, 7, 9, 11, 13, 15],\n                backgroundColor: 'rgba(255, 35, 35, 0.6)'\n              }\n            ]\n        }\n      });\n    }\n\n    Day = () => {\n      this.setState({time: 'day'});\n    }\n\n    Week = () => {\n      this.setState({time: 'week'});\n    }\n\n    Month = () => {\n      this.setState({time: 'month'});\n    }\n\n    Year = () => {\n      this.setState({time: 'year'});\n    }\n\n\n    range = (start, end) => {\n      if (start != null && end != null){\n        this.setState({\n          startDate: start.format('MMM-DD'),\n          endDate: end.format('MMM-DD')\n        });\n      }\n    }\n\n\n\n  render() {\n    return (\n      <div className=\"block\">\n          <div className=\"outline\">\n            <h2 className=\"title\">Insect Count (per location)</h2>\n          </div>\n          <div className=\"outline2\">\n          <div className=\"wrapper\">\n            <div className=\"location\">\n              <div className=\"inner1\">\n                <p className=\"text\">Select a location</p>\n              </div>\n              <div className=\"inner2\">\n                <Menu/>\n              </div>\n            </div>\n            <div className=\"timeframe\">\n              <div className=\"inner1\">\n                <p className=\"text\">Select a time frame</p>\n              </div>\n              <div className=\"inner2\">\n                <Calendar range={this.range}/>\n              </div>\n            </div>\n            <div className=\"type\">\n              <div className=\"inner1\">\n                <p className=\"text\">Chart type</p>\n              </div>\n              <div className=\"inner2\">\n                <Menu graphClick={this.graphClick} options={options}/>\n              </div>\n            </div>\n            <div className=\"day\">\n              <div className=\"inner1\">\n                <p className=\"text\">View by</p>\n              </div>\n                <div className=\"inner2\">\n                  <button className=\"date1\" onClick={this.Day}>Day</button>\n                  <button className=\"date\" onClick={this.Week}>Week</button>\n                  <button className=\"date\" onClick={this.Month}>Month</button>\n                  <button className=\"date\" onClick={this.Year}>Year</button>\n                </div>\n            </div>\n          </div>\n          <div className=\"graph\">\n            <Chart chartData={this.state.chartData} title={this.state.location} chartType={this.state.chartType} startDate={this.state.startDate} endDate={this.state.endDate} time={this.state.time} units={this.state.units}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Section1;\n"]},"metadata":{},"sourceType":"module"}