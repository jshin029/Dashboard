{"ast":null,"code":"var _jsxFileName = \"/Users/johnshin/Projects/chart/src/App.js\";\nimport React from 'react';\nimport Chart from './components/Chart';\nimport Calendar from './components/Calendar';\nimport Menu from './components/Menu';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.BarClick = () => {\n      this.setState({\n        chartType: 'Bar'\n      });\n    };\n\n    this.LineClick = () => {\n      this.setState({\n        chartType: 'Line'\n      });\n    };\n\n    this.PieClick = () => {\n      this.setState({\n        chartType: 'Pie'\n      });\n    };\n\n    this.location1 = () => {\n      this.setState({\n        location: 'Cupertino',\n        chartBool: false,\n        chartData: {\n          labels: ['09-06', '09-07', '09-08', '09-09', '09-10', '09-11', '09-12', '09-13'],\n          datasets: [{\n            label: 'Device_1',\n            data: [1, 4, 8, 2, 20, 23, 14, 9],\n            backgroundColor: 'rgba(63, 63, 191, 0.6)'\n          }, {\n            label: 'Device_2',\n            data: [23, 17, 30, 5, 3, 2, 13, 15],\n            backgroundColor: 'rgba(255, 35, 35, 0.6)'\n          }]\n        }\n      });\n    };\n\n    this.location2 = () => {\n      this.setState({\n        location: 'Riverside',\n        chartBool: false,\n        chartData: {\n          labels: ['05-06', '05-07', '05-08', '05-09', '05-10', '05-11', '05-12', '05-13'],\n          datasets: [{\n            label: 'Device_1',\n            data: [2, 4, 6, 8, 10, 12, 14, 16],\n            backgroundColor: 'rgba(63, 63, 191, 0.6)'\n          }, {\n            label: 'Device_2',\n            data: [1, 3, 5, 7, 9, 11, 13, 15],\n            backgroundColor: 'rgba(255, 35, 35, 0.6)'\n          }]\n        }\n      });\n    };\n\n    this.location3 = () => {\n      this.setState({\n        location: 'Irvine',\n        chartBool: false,\n        chartData: {\n          labels: ['03-01', '03-02', '03-03', '03-04', '03-05', '03-06', '03-07', '03-08'],\n          datasets: [{\n            label: 'Device_1',\n            data: [0, 5, 10, 15, 20, 15, 10, 5],\n            backgroundColor: 'rgba(63, 63, 191, 0.6)'\n          }]\n        }\n      });\n    };\n\n    this.range = (start, end) => {\n      if (start != null && end != null) {\n        var starting = start.format().toString();\n        var ending = end.format().toString();\n        starting = starting.slice(5, 10);\n        ending = ending.slice(5, 10);\n        starting = starting.replace('-', '');\n        ending = ending.replace('-', '');\n      }\n\n      var x = null;\n      var temp = [];\n      var labels = this.state.chartData.labels; //filling temp array with current states date\n\n      for (var i = 0; i < this.state.chartData.labels.length; ++i) {\n        x = this.state.chartData.labels[i];\n        x = x.replace('-', '');\n        x = parseInt(x);\n        temp.push(x);\n      }\n\n      var temp2 = [];\n      var temp3 = []; //only getting the dates between the user's input\n\n      for (var i = 0; i < temp.length; ++i) {\n        if (temp[i] >= starting && temp[i] <= ending) {\n          temp3.push(i);\n        }\n      }\n\n      for (var i = 0; i < temp3.length; ++i) {\n        temp2.push(labels[temp3[i]]); //labels for all devices\n      }\n\n      var newData = [];\n      var deviceData = []; //parses data from each device based on user's range\n\n      for (var i = 0; i < this.state.chartData.datasets.length; ++i) {\n        for (var j = 0; j < temp3.length; ++j) {\n          newData.push(this.state.chartData.datasets[i].data[temp3[j]]); //data per device\n        }\n\n        deviceData.push(newData);\n        newData = [];\n      }\n\n      console.log(deviceData);\n      console.log(this.state.chartData);\n      this.setState({\n        chartExtract: {\n          labels: temp2,\n          datasets: [{\n            label: 'Device_1',\n            data: deviceData[0],\n            backgroundColor: 'rgba(63, 63, 191, 0.6)'\n          }, {\n            label: 'Device_2',\n            data: deviceData[1],\n            backgroundColor: 'rgba(255, 35, 35, 0.6)'\n          }]\n        },\n        chartBool: true\n      });\n    };\n\n    this.state = {\n      chartData: {},\n      chartExtract: {},\n      chartBool: false,\n      chartType: 'Bar',\n      test: null,\n      location: 'Cupertino',\n      focusedInput: null\n    };\n  }\n\n  componentWillMount() {\n    this.getChartData();\n  }\n\n  getChartData() {\n    //make ajax/axios call\n    this.setState({\n      chartData: {\n        labels: ['09-06', '09-07', '09-08', '09-09', '09-10', '09-11', '09-12', '09-13'],\n        datasets: [{\n          label: 'Device_1',\n          data: [1, 4, 8, 2, 20, 23, 14, 9],\n          backgroundColor: 'rgba(63, 63, 191, 0.6)'\n        }, {\n          label: 'Device_2',\n          data: [23, 17, 30, 5, 3, 2, 13, 15],\n          backgroundColor: 'rgba(255, 35, 35, 0.6)'\n        }]\n      }\n    });\n  }\n\n  render() {\n    const falseFunc = () => false;\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \" Select a Chart's Data \"), React.createElement(\"button\", {\n      onClick: this.BarClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Bar\"), React.createElement(\"button\", {\n      onClick: this.LineClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Line\"), React.createElement(\"button\", {\n      onClick: this.PieClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Pie\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \" Insect Count (per location) \"), React.createElement(\"button\", {\n      onClick: this.location1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Cupertino\"), React.createElement(\"button\", {\n      onClick: this.location2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Riverside\"), React.createElement(\"button\", {\n      onClick: this.location3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Irvine\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \" Pick a date \"), React.createElement(Calendar, {\n      range: this.range,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), React.createElement(Chart, {\n      chartData: this.state.chartBool ? this.state.chartExtract : this.state.chartData,\n      location: this.state.location,\n      chartType: this.state.chartType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \" Select a Chart's Data \"), React.createElement(\"button\", {\n      onClick: this.BarClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"Bar\"), React.createElement(\"button\", {\n      onClick: this.LineClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Line\"), React.createElement(\"button\", {\n      onClick: this.PieClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Pie\")));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/johnshin/Projects/chart/src/App.js"],"names":["React","Chart","Calendar","Menu","DateRangePicker","SingleDatePicker","DayPickerRangeController","App","Component","constructor","BarClick","setState","chartType","LineClick","PieClick","location1","location","chartBool","chartData","labels","datasets","label","data","backgroundColor","location2","location3","range","start","end","starting","format","toString","ending","slice","replace","x","temp","state","i","length","parseInt","push","temp2","temp3","newData","deviceData","j","console","log","chartExtract","test","focusedInput","componentWillMount","getChartData","render","falseFunc"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Chart from './components/Chart';\nimport Calendar from './components/Calendar';\nimport Menu from './components/Menu';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\n\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      chartData: {} ,\n      chartExtract: {},\n      chartBool: false,\n      chartType:'Bar',\n      test: null,\n      location: 'Cupertino',\n      focusedInput: null\n    }\n  }\n\n  componentWillMount() {\n    this.getChartData();\n  }\n\n  getChartData () {\n    //make ajax/axios call\n      this.setState({\n\n        chartData:{\n            labels: ['09-06', '09-07', '09-08', '09-09', '09-10', '09-11', '09-12', '09-13'],\n            datasets: [\n              {\n                label:'Device_1',\n                data:[1, 4, 8, 2, 20, 23, 14, 9],\n                backgroundColor: 'rgba(63, 63, 191, 0.6)'\n\n              },\n              {\n                label:'Device_2',\n                data:[23, 17, 30, 5, 3, 2, 13, 15],\n                backgroundColor: 'rgba(255, 35, 35, 0.6)'\n              }\n            ]\n        }\n      });\n\n  }\n  BarClick = () => {\n    this.setState({chartType:'Bar'});\n  }\n\n  LineClick = () => {\n    this.setState({chartType:'Line'});\n  }\n\n  PieClick = () => {\n    this.setState({chartType:'Pie'});\n  }\n\n  location1 = () => {\n    this.setState({\n      location:'Cupertino',\n      chartBool: false,\n      chartData:{\n          labels: ['09-06', '09-07', '09-08', '09-09', '09-10', '09-11', '09-12', '09-13'],\n          datasets: [\n            {\n              label:'Device_1',\n              data:[1, 4, 8, 2, 20, 23, 14, 9],\n              backgroundColor:'rgba(63, 63, 191, 0.6)'\n            },\n            {\n              label:'Device_2',\n              data:[23, 17, 30, 5, 3, 2, 13, 15],\n              backgroundColor: 'rgba(255, 35, 35, 0.6)'\n            }\n          ]\n      }\n\n    });\n  }\n\n  location2 = () => {\n    this.setState({\n      location:'Riverside',\n      chartBool: false,\n      chartData:{\n          labels: ['05-06', '05-07', '05-08', '05-09', '05-10', '05-11', '05-12', '05-13'],\n          datasets: [\n            {\n              label:'Device_1',\n              data:[2, 4, 6, 8, 10, 12, 14, 16],\n              backgroundColor: 'rgba(63, 63, 191, 0.6)'\n            },\n            {\n              label:'Device_2',\n              data:[1, 3, 5, 7, 9, 11, 13, 15],\n              backgroundColor: 'rgba(255, 35, 35, 0.6)'\n            }\n          ]\n      }\n    });\n  }\n\n  location3 = () => {\n    this.setState({\n      location:'Irvine',\n      chartBool: false,\n      chartData:{\n          labels: ['03-01', '03-02', '03-03', '03-04', '03-05', '03-06', '03-07', '03-08'],\n          datasets: [\n            {\n              label:'Device_1',\n              data:[0, 5, 10, 15, 20, 15, 10, 5],\n              backgroundColor: 'rgba(63, 63, 191, 0.6)'\n            }\n          ]\n      }\n    });\n  }\n\n  range = (start, end) => {\n    if (start != null && end != null){\n      var starting = start.format().toString();\n      var ending = end.format().toString();\n\n      starting = starting.slice(5,10);\n      ending = ending.slice(5,10);\n\n      starting = starting.replace('-', '');\n      ending = ending.replace('-', '');\n    }\n\n    var x = null;\n    var temp = [];\n    var labels = this.state.chartData.labels;\n      //filling temp array with current states date\n      for (var i = 0; i < this.state.chartData.labels.length; ++i){\n        x =  this.state.chartData.labels[i];\n        x = x.replace('-','');\n        x = parseInt(x);\n        temp.push(x);\n      }\n      var temp2 = [];\n      var temp3 = [];\n\n      //only getting the dates between the user's input\n      for (var i = 0; i < temp.length; ++i){\n        if (temp[i] >= starting && temp[i] <= ending){\n          temp3.push(i);\n        }\n      }\n\n      for (var i = 0; i < temp3.length; ++i){\n        temp2.push(labels[temp3[i]]); //labels for all devices\n      }\n\n      var newData = [];\n      var deviceData = [];\n\n      //parses data from each device based on user's range\n      for (var i = 0; i < this.state.chartData.datasets.length; ++i){\n        for (var j = 0; j < temp3.length; ++j){\n          newData.push(this.state.chartData.datasets[i].data[temp3[j]]); //data per device\n        }\n        deviceData.push(newData);\n        newData = [];\n      }\n      console.log(deviceData);\n      console.log(this.state.chartData);\n\n      this.setState({chartExtract: {\n          labels: temp2,\n          datasets: [\n            {\n              label: 'Device_1',\n              data: deviceData[0],\n              backgroundColor: 'rgba(63, 63, 191, 0.6)'\n            },\n            {\n              label: 'Device_2',\n              data: deviceData[1],\n              backgroundColor: 'rgba(255, 35, 35, 0.6)'\n            }\n          ]\n        },\n        chartBool: true\n      });\n}\n\n  render() {\n    const falseFunc = ()=>false;\n    return (\n      <div>\n        <div>\n          <p> Select a Chart's Data </p>\n          <button onClick={this.BarClick}>Bar</button>\n          <button onClick={this.LineClick}>Line</button>\n          <button onClick={this.PieClick}>Pie</button>\n\n          <p> Insect Count (per location) </p>\n          <button onClick={this.location1}>Cupertino</button>\n          <button onClick={this.location2}>Riverside</button>\n          <button onClick={this.location3}>Irvine</button>\n\n          <p> Pick a date </p>\n          <Calendar range={this.range}/>\n\n          <Chart chartData = {this.state.chartBool ? this.state.chartExtract: this.state.chartData} location={this.state.location} chartType={this.state.chartType}/>\n        </div>\n\n        <div>\n          <p> Select a Chart's Data </p>\n          <button onClick={this.BarClick}>Bar</button>\n          <button onClick={this.LineClick}>Line</button>\n          <button onClick={this.PieClick}>Pie</button>\n\n\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}