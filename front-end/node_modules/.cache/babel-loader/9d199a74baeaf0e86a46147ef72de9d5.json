{"ast":null,"code":"var _jsxFileName = \"/Users/johnshin/Projects/chart/src/components/Section1.js\";\nimport React, { component } from 'react';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport Chart from './Chart';\nimport Calendar from './Calendar';\nimport moment from 'moment';\n\nclass Section1 extends React.Component {\n  constructor() {\n    super();\n\n    this.BarClick = () => {\n      this.setState({\n        chartType: 'Bar'\n      });\n    };\n\n    this.LineClick = () => {\n      this.setState({\n        chartType: 'Line'\n      });\n    };\n\n    this.PieClick = () => {\n      this.setState({\n        chartType: 'Pie'\n      });\n    };\n\n    this.location1 = () => {\n      this.setState({\n        location: 'Cupertino',\n        chartData: {\n          labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n          datasets: [{\n            label: 'Device_1',\n            data: [1, 4, 8, 2, 20, 23, 14, 9],\n            backgroundColor: 'rgba(63, 63, 191, 0.6)'\n          }, {\n            label: 'Device_2',\n            data: [23, 17, 30, 5, 3, 2, 13, 15],\n            backgroundColor: 'rgba(255, 35, 35, 0.6)'\n          }]\n        }\n      });\n    };\n\n    this.location2 = () => {\n      this.setState({\n        location: 'Riverside',\n        chartData: {\n          labels: [\"May-05\", \"May-06\", \"May-07\", \"May-08\", \"May-09\", \"May-10\", \"May-11\", \"May-12\"],\n          datasets: [{\n            label: 'Device_1',\n            data: [2, 4, 6, 8, 10, 12, 14, 16],\n            backgroundColor: 'rgba(63, 63, 191, 0.6)'\n          }, {\n            label: 'Device_2',\n            data: [1, 3, 5, 7, 9, 11, 13, 15],\n            backgroundColor: 'rgba(255, 35, 35, 0.6)'\n          }]\n        }\n      });\n    };\n\n    this.range = (start, end) => {\n      if (start != null && end != null) {\n        this.setState({\n          startDate: start.format('MMM-DD'),\n          endDate: end.format('MMM-DD')\n        });\n      }\n    };\n\n    this.state = {\n      chartData: {},\n      chartType: 'Bar',\n      startDate: '',\n      endDate: '',\n      location: 'Cupertino',\n      focusedInput: null\n    };\n  }\n\n  componentWillMount() {\n    this.getChartData();\n  }\n\n  getChartData() {\n    //make ajax/axios call\n    this.setState({\n      chartData: {\n        labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n        datasets: [{\n          label: 'Device_1',\n          data: [1, 4, 8, 2, 20, 23, 14, 9],\n          backgroundColor: 'rgba(63, 63, 191, 0.6)'\n        }, {\n          label: 'Device_2',\n          data: [23, 17, 30, 5, 3, 2, 13, 15],\n          backgroundColor: 'rgba(255, 35, 35, 0.6)'\n        }]\n      }\n    });\n    console.log(this.state.chartData);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \" Select a Chart's format \"), React.createElement(\"button\", {\n      onClick: this.BarClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Bar\"), React.createElement(\"button\", {\n      onClick: this.LineClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Line\"), React.createElement(\"button\", {\n      onClick: this.PieClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Pie\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \" Insect Count (per location) \"), React.createElement(\"button\", {\n      onClick: this.location1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Cupertino\"), React.createElement(\"button\", {\n      onClick: this.location2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Riverside\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \" Pick a date \"), React.createElement(Calendar, {\n      range: this.range,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(Chart, {\n      chartData: this.state.chartData,\n      title: this.state.location,\n      chartType: this.state.chartType,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })));\n  }\n\n}\n\n;\nexport default Section1;","map":{"version":3,"sources":["/Users/johnshin/Projects/chart/src/components/Section1.js"],"names":["React","component","DateRangePicker","SingleDatePicker","DayPickerRangeController","Chart","Calendar","moment","Section1","Component","constructor","BarClick","setState","chartType","LineClick","PieClick","location1","location","chartData","labels","datasets","label","data","backgroundColor","location2","range","start","end","startDate","format","endDate","state","focusedInput","componentWillMount","getChartData","console","log","render"],"mappings":"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","sourcesContent":["import React, {component} from 'react';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport Chart from './Chart';\nimport Calendar from './Calendar';\nimport moment from 'moment';\n\n\nclass Section1 extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      chartData: {} ,\n      chartType:'Bar',\n      startDate: '',\n      endDate: '',\n      location: 'Cupertino',\n      focusedInput: null\n    }\n  }\n\n\n    componentWillMount() {\n      this.getChartData();\n    }\n\n    getChartData () {\n      //make ajax/axios call\n        this.setState({\n          chartData:{\n              labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n              datasets: [\n                {\n                  label:'Device_1',\n                  data:[1, 4, 8, 2, 20, 23, 14, 9],\n                  backgroundColor:'rgba(63, 63, 191, 0.6)'\n                },\n                {\n                  label:'Device_2',\n                  data:[23, 17, 30, 5, 3, 2, 13, 15],\n                  backgroundColor: 'rgba(255, 35, 35, 0.6)'\n                }\n              ]\n          },\n        });\n        console.log(this.state.chartData);\n\n    }\n    BarClick = () => {\n      this.setState({chartType:'Bar'});\n    }\n\n    LineClick = () => {\n      this.setState({chartType:'Line'});\n    }\n\n    PieClick = () => {\n      this.setState({chartType:'Pie'});\n    }\n\n    location1 = () => {\n      this.setState({\n        location:'Cupertino',\n        chartData:{\n            labels: [\"Jun-06\", \"Jun-07\", \"Jun-08\", \"Jun-09\", \"Jun-10\", \"Jun-11\", \"Jun-12\", \"Jun-13\"],\n            datasets: [\n              {\n                label:'Device_1',\n                data:[1, 4, 8, 2, 20, 23, 14, 9],\n                backgroundColor:'rgba(63, 63, 191, 0.6)'\n              },\n              {\n                label:'Device_2',\n                data:[23, 17, 30, 5, 3, 2, 13, 15],\n                backgroundColor: 'rgba(255, 35, 35, 0.6)'\n              }\n            ]\n        }\n\n      });\n    }\n\n    location2 = () => {\n      this.setState({\n        location:'Riverside',\n        chartData:{\n            labels: [\"May-05\", \"May-06\", \"May-07\", \"May-08\", \"May-09\", \"May-10\", \"May-11\", \"May-12\"],\n            datasets: [\n              {\n                label:'Device_1',\n                data:[2, 4, 6, 8, 10, 12, 14, 16],\n                backgroundColor: 'rgba(63, 63, 191, 0.6)'\n              },\n              {\n                label:'Device_2',\n                data:[1, 3, 5, 7, 9, 11, 13, 15],\n                backgroundColor: 'rgba(255, 35, 35, 0.6)'\n              }\n            ]\n        }\n      });\n    }\n\n    range = (start, end) => {\n      if (start != null && end != null){\n        this.setState({\n          startDate: start.format('MMM-DD'),\n          endDate: end.format('MMM-DD')\n        })\n\n      }\n\n  }\n\n  render() {\n    return (\n      <div>\n        <div>\n          <p> Select a Chart's format </p>\n          <button onClick={this.BarClick}>Bar</button>\n          <button onClick={this.LineClick}>Line</button>\n          <button onClick={this.PieClick}>Pie</button>\n\n          <p> Insect Count (per location) </p>\n          <button onClick={this.location1}>Cupertino</button>\n          <button onClick={this.location2}>Riverside</button>\n\n          <p> Pick a date </p>\n          <Calendar range={this.range}/>\n\n          <Chart chartData = {this.state.chartData} title={this.state.location} chartType={this.state.chartType} startDate={this.state.startDate} endDate={this.state.endDate}/>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Section1;\n"]},"metadata":{},"sourceType":"module"}