{"ast":null,"code":"var _jsxFileName = \"/Users/johnshin/Projects/chart/src/App.js\";\nimport React from 'react';\nimport Chart from './components/Chart';\nimport Calendar from './components/Calendar';\nimport Menu from './components/Menu';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.BarClick = () => {\n      this.setState({\n        chartType: 'Bar'\n      });\n    };\n\n    this.LineClick = () => {\n      this.setState({\n        chartType: 'Line'\n      });\n    };\n\n    this.PieClick = () => {\n      this.setState({\n        chartType: 'Pie'\n      });\n    };\n\n    this.location1 = () => {\n      this.setState({\n        location: 'Cupertino'\n      });\n    };\n\n    this.location2 = () => {\n      this.setState({\n        location: 'Riverside'\n      });\n    };\n\n    this.location3 = () => {\n      this.setState({\n        location: 'Irvine'\n      });\n    };\n\n    this.state = {\n      chartData: {},\n      chartType: 'Bar',\n      location: null,\n      startDate: null,\n      endDate: null,\n      focusedInput: null\n    };\n  }\n\n  componentWillMount() {\n    this.getChartData();\n  }\n\n  getChartData() {\n    //make ajax/axios call\n    this.setState({\n      chartData: {\n        location1: {\n          labels: ['05-06', '05-07', '05-08', '05-09', '05-10', '05-11', '05-12', '05-13', '05-14'],\n          datasets: [{\n            label: 'Device_1',\n            data: [0, 5.75, 11.5, 17.25, 23],\n            backgroundColor: ['rgba(63, 63, 191, 0.6)', 'rgba(63, 63, 191, 0.6)', 'rgba(63, 63, 191, 0.6)', 'rgba(63, 63, 191, 0.6)', 'rgba(63, 63, 191, 0.6)']\n          }]\n        },\n        location2: {\n          labels: ['09-06', '09-07', '09-08', '09-09', '09-10'],\n          datasets: [{\n            label: 'Device_2',\n            data: [5, 10, 15, 20, 25],\n            backgroundColor: ['rgba(63, 191, 63, 0.6)', 'rgba(63, 191, 63, 0.6)', 'rgba(63, 191, 63, 0.6)', 'rgba(63, 191, 63, 0.6)', 'rgba(63, 191, 63, 0.6)']\n          }]\n        }\n      }\n    });\n  }\n\n  render() {\n    const falseFunc = () => false;\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \" Select a Chart's Data: \"), React.createElement(\"button\", {\n      onClick: this.BarClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Bar\"), React.createElement(\"button\", {\n      onClick: this.LineClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Line\"), React.createElement(\"button\", {\n      onClick: this.PieClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Pie\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \" Insect Count (per location) \"), React.createElement(\"button\", {\n      onClick: this.location1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Cupertino\"), React.createElement(\"button\", {\n      onClick: this.location2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Riverside\"), React.createElement(\"button\", {\n      onClick: this.location3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Irvine\"), React.createElement(Chart, {\n      chartData: this.state.chartData,\n      location: this.state.location,\n      chartType: this.state.chartType,\n      temp: this.state.startDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/johnshin/Projects/chart/src/App.js"],"names":["React","Chart","Calendar","Menu","DateRangePicker","SingleDatePicker","DayPickerRangeController","App","Component","constructor","BarClick","setState","chartType","LineClick","PieClick","location1","location","location2","location3","state","chartData","startDate","endDate","focusedInput","componentWillMount","getChartData","labels","datasets","label","data","backgroundColor","render","falseFunc"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Chart from './components/Chart';\nimport Calendar from './components/Calendar';\nimport Menu from './components/Menu';\nimport { DateRangePicker, SingleDatePicker, DayPickerRangeController } from 'react-dates';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\n\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      chartData: {},\n      chartType:'Bar',\n      location: null,\n      startDate: null,\n      endDate: null,\n      focusedInput: null\n    }\n  }\n\n  componentWillMount() {\n    this.getChartData();\n  }\n\n  getChartData () {\n    //make ajax/axios call\n      this.setState({\n        chartData:{\n            location1:{\n              labels: ['05-06', '05-07', '05-08', '05-09', '05-10', '05-11', '05-12', '05-13', '05-14'],\n              datasets: [\n                {\n                  label:'Device_1',\n                  data:[\n                    0,\n                    5.75,\n                    11.5,\n                    17.25,\n                    23\n                  ],\n                  backgroundColor:[\n                    'rgba(63, 63, 191, 0.6)',\n                    'rgba(63, 63, 191, 0.6)',\n                    'rgba(63, 63, 191, 0.6)',\n                    'rgba(63, 63, 191, 0.6)',\n                    'rgba(63, 63, 191, 0.6)'\n                  ]\n                }\n              ]\n            },\n            location2:{\n              labels: ['09-06', '09-07', '09-08', '09-09', '09-10'],\n              datasets: [\n                {\n                       label:'Device_2',\n                       data:[\n                         5,\n                         10,\n                         15,\n                         20,\n                         25\n                       ],\n                       backgroundColor:[\n                         'rgba(63, 191, 63, 0.6)',\n                         'rgba(63, 191, 63, 0.6)',\n                         'rgba(63, 191, 63, 0.6)',\n                         'rgba(63, 191, 63, 0.6)',\n                         'rgba(63, 191, 63, 0.6)'\n                       ]\n                     }\n              ]\n            }\n        }\n\n      });\n\n  }\n  BarClick = () => {\n    this.setState({chartType:'Bar'});\n  }\n\n  LineClick = () => {\n    this.setState({chartType:'Line'});\n  }\n\n  PieClick = () => {\n    this.setState({chartType:'Pie'});\n  }\n\n  location1 = () => {\n    this.setState({location:'Cupertino'});\n  }\n\n  location2 = () => {\n    this.setState({location:'Riverside'});\n  }\n\n  location3 = () => {\n    this.setState({location:'Irvine'});\n  }\n\n  render() {\n    const falseFunc = ()=>false;\n    return (\n      <div>\n        <p> Select a Chart's Data: </p>\n        <button onClick={this.BarClick}>Bar</button>\n        <button onClick={this.LineClick}>Line</button>\n        <button onClick={this.PieClick}>Pie</button>\n\n\n        <p> Insect Count (per location) </p>\n        <button onClick={this.location1}>Cupertino</button>\n        <button onClick={this.location2}>Riverside</button>\n        <button onClick={this.location3}>Irvine</button>\n\n        <Chart chartData={this.state.chartData} location={this.state.location} chartType={this.state.chartType} temp={this.state.startDate} />\n      </div>\n    );\n  }\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}